[{"id":"anvato","titleShort":"Anvato","titleLong":"Anvato","url":"http://anvato.com","jobTitle":"Software Engineer","date":{"start":"2013","end":"2014"},"categories":["work","web","front-end","android","roku","windows-phone","c-sharp","video"],"iconSrc":"","thumbnailSrc":"","images":[],"videos":[],"content":"Levi developed HTTP Live Streaming video-player SDKs for the HTML5, Windows Store, Windows Phone, Roku, and Android\nplatforms to match detailed specifications from clients including Fox, NBC, and Univision.\n\nThe HTML5 player SDK loaded and played four-times faster than that of Anvatoâ€™s leading competitor.\n\nThe combined Anvato player SDKs drew more than 528,000 viewers per minute during the 2014 SuperBowl, making it the\nmost-viewed single sports event ever delivered online.\n\n[main-url]: http://anvato.com"},{"id":"benlindseydesign.com","titleShort":"Portfolio Website: Designer","titleLong":"Portfolio for an Industrial Designer","url":"http://benlindseydesign.com","jobTitle":"","date":{"start":"2014","end":"2015"},"categories":["side-project","web","web-site","front-end"],"iconSrc":"","thumbnailSrc":"","images":[],"videos":[],"content":"_**This project is a work in progress**_\n\n[This website][main-url] is a professional portfolio for Ben Lindsey.\n\n[main-url]: http://benlindseydesign.com"},{"id":"chess","titleShort":"Web App: chess","titleLong":"Chess","url":"http://jackieandlevi.com/chess","jobTitle":"","date":"2013","categories":["side-project","web","app","front-end","game"],"iconSrc":"","thumbnailSrc":"","images":[],"videos":[],"content":"This app implements a simple two-player game of chess. Levi developed this app in a day. It includes a button to\ngenerate a random valid play for the current player. It currently support game play across remote machines, but Levi\nplans on implementing this in the future. It currently does not support an AI player, but Levi also plans on\nimplementing a simple form of this in the future.\n\n[main-url]: http://jackieandlevi.com/chess"},{"id":"dancing-spokes","titleShort":"Web Doodle: Dancing Spokes","titleLong":"Dancing Spokes","url":"http://jackieandlevi.com/dancing-spokes","jobTitle":"","date":"2014","categories":["side-project","web","front-end","svg","doodle","tiny","animation"],"iconSrc":"","thumbnailSrc":"","images":[],"videos":[],"content":"Fun with SVG animations and dancing sticks of light!"},{"id":"dietary-data-recording-system","titleShort":"Android App: Recording System","titleLong":"Dietary Data Recording System","url":"http://ee.washington.edu/research/seal/","jobTitle":"Student Researcher (Software Engineer)","date":"2010-2011","categories":["work","school","research","android","app","uw"],"iconSrc":"","thumbnailSrc":"","images":[],"videos":[],"content":"During his undergraduate studies at the University of Washington, Levi spent more than a year working with\n[Professor Alexander Mamishev][mamishev-url] in the [Sensors Energy and Automation Laboratory][seal-url]. The lab had\nbeen hired by the [Fred Hutchinson Cancer Research Center][fred-hutch-url] to create a Dietary Data Recording device\nthat would better record the dietary intake of their study participants.\n\nThe lab's work revolved around the development of an application that ran on Android devices. Levi was the sole\ndeveloper for this, and some of the application's functionalities included:\n\n- recording accelerometer and magnetometer data and associating them with individual video frames in order to analyze\nthe volume of food;\n- firing a laser grid via an external, custom-made, Bluetooth-compatible device;\n- recording and playing audio and video;\n- scanning barcodes;\n- compressing, uploading, and downloading data from the databases on our server;\n- recording dietary info in an SQLite database;\n- parsing SQL data to and from an XML file.\n\nLevi co-authored a paper on this research entitled [A Pervasive Dietary Data Recording System][paper-url].\n\n[mamishev-url]: http://ee.washington.edu/faculty/mamishev/\n[seal-url]: http://ee.washington.edu/research/seal/\n[fred-hutch-url]: http://fredhutch.org/en.html\n[paper-url]: http://ieeexplore.ieee.org/xpl/login.jsp?tp=&arnumber=5766890&isnumber=5766834&url=http%3A%2F%2Fieeexplore.ieee.org%2Fstamp%2Fstamp.jsp%3Ftp%3D%26arnumber%3D5766890%26isnumber%3D5766834"},{"id":"fat-cat-chat","titleShort":"Web App: IRC-Like Chat","titleLong":"IRC-Like Chat Server and Client","url":"http://jackieandlevi.com/fat-cat-chat","jobTitle":"","date":"2014","categories":["side-project","web","app","web-sockets","socket.io","node.js","back-end","front-end"],"iconSrc":"","thumbnailSrc":"","images":[],"videos":[],"content":"Levi built [this IRC-like chat app][main-url] in order to hone his server-side skills and to learn about web sockets.\n\nSome features of this chat application include:\n\n- Private and room chat areas\n- Bots to chat with in case your feeling lonely\n- Syntax highlighting and link injection for user names, room names, and command names\n- The ability to include links in chat messages\n- Custom cat-themed emoticons\n- Numerous fun facts and GIFS about cats\n- Many commands including:\n    - `/help`\n    - `/rooms`\n    - `/join`\n    - `/msg`\n    - `/nick`\n    - `/ping`\n    - `/ignore`\n    - `/leave`\n    - `/quit`\n    - `/link`\n\nThe technology stack for this project includes:\n\n- Node.js\n- Socket.IO\n- HTML5/CSS3/JavaScript\n\n[main-url]: http://jackieandlevi.com/fat-cat-chat"},{"id":"generator-meanie","titleShort":"MEAN-stack Generator","titleLong":"MEAN-stack Yeoman Generator with gulp","url":"https://npmjs.org/package/generator-meanie","jobTitle":"","date":"2014-2015","categories":["side-project","web","mean","front-end","back-end","mongodb","express","angularjs","node.js","gulp.js","yeoman","npm","library"],"iconSrc":"","thumbnailSrc":"","images":[],"videos":[],"content":"[![NPM version][npm-image]][npm-url]\n[![Build Status][travis-image]][travis-url]\n[![Dependency Status][depstat-image]][depstat-url]\n[![Flattr this git repo][flattr-image]][flattr-url]\n\n_[MEAN stack][mean-url] generator for [Yeoman][yeoman-url] with [gulp][gulp-url]. Loosely follows the\n[Best Practice Recommendations for Angular App Structure][angular-best-practices-url], and, in general, attempts to\nfollow best practices throughout._\n\n## How to use\n\n```bash\nnpm install -g generator-meanie\nyo meanie\n```\n\nSee [Getting Set Up](./docs/getting-set-up.md) for a more complete, step-by-step guide for setting things up.\n\n## About\n\nThis project is an on-going effort to collect common patterns and processes for web apps using the MEAN stack and gulp.\nIt is constantly evolving and possibly has some components that are only partially completed.\n\nThe contents of this project is strongly opinionated. This is all code that was developed by the original author for\nhis own personal use. That being said, it works great for him, so it will probably work great for you too!\n\nFeedback, bug reports, feature requests, and pull requests are very welcome!\n\n## Acknowledgements / Technology Stack\n\nThis project uses technology from a number of third-parties. These technologies include:\n\n- [Node.js][node-url]\n- [AngularJS][angular-url]\n- [MongoDB][mongo-url]\n- [gulp.js][gulp-url]\n- [SASS][sass-url]\n- [Yeoman][yeoman-url]\n- [Git][git-url]\n- Numerous other packages that are available via [NPM][npm-url] (these are listed within the `package.json` file)\n- Numerous other packages that are available via [Bower][bower-url] (these are listed within the `bower.json` file)\n\n## License\n\nMIT\n\n\n\n[flattr-url]: https://flattr.com/submit/auto?user_id=levisl176&url=github.com/levisl176/generator-meanie&title=generator-meanie&language=javascript&tags=github&category=software\n[flattr-image]: http://api.flattr.com/button/flattr-badge-large.png\n\n[npm-url]: https://npmjs.org/package/generator-meanie\n[npm-image]: http://img.shields.io/npm/v/generator-meanie.svg?style=flat-square\n[npm-image-old]: https://badge.fury.io/js/generator-meanie.png\n\n[travis-url]: https://travis-ci.org/levisl176/generator-meanie\n[travis-image]: http://img.shields.io/travis/levisl176/generator-meanie/master.svg?style=flat-square\n[travis-image-old]: https://secure.travis-ci.org/levisl176/generator-meanie.png?branch=master\n\n[coveralls-url]: https://coveralls.io/r/levisl176/generator-meanie\n[coveralls-image]: http://img.shields.io/coveralls/levisl176/generator-meanie/master.svg?style=flat-square\n[coveralls-image-old]: https://img.shields.io/coveralls/levisl176/generator-meanie.svg?style=flat\n\n[depstat-url]: https://david-dm.org/levisl176/generator-meanie\n[depstat-image]: http://img.shields.io/david/levisl176/generator-meanie.svg?style=flat-square\n[depstat-image-old]: https://david-dm.org/levisl176/generator-meanie.svg\n\n[angular-best-practices-url]: https://docs.google.com/document/d/1XXMvReO8-Awi1EZXAXS4PzDzdNvV6pGcuaF4Q9821Es/pub\n[mean-url]: http://en.wikipedia.org/wiki/MEAN\n[yeoman-url]: http://yeoman.io/\n[gulp-url]: http://gulpjs.com/\n[node-url]: http://nodejs.org/\n[angular-url]: https://angularjs.org/\n[mongo-url]: https://mongodb.org/\n[sass-url]: http://sass-lang.com/\n[git-url]: http://git-scm.com/\n[npm-url]: http://npmjs.org/\n[bower-url]: http://bower.io/"},{"id":"gesture-recognizer","titleShort":"Gesture Recognition","titleLong":"Gesture Segmenter and Recognizer","url":"","jobTitle":"","date":"2013","categories":["school","research","c-sharp","app","pen"],"iconSrc":"","thumbnailSrc":"","images":[],"videos":[],"content":"_Levi developed a novel algorithm for real-time gesture recognition from ink data. This was extended from work done in\na UCR course on Pen-Based Computing algorithms and techniques._\n\n## An Inductive Image-Based Recognizer Using Directional Bitmap Templates\n\n### Contents\n\n- The Algorithm\n- Strengths\n- Weaknesses\n- Improvements\n\n### The Algorithm\n\nThe general idea of the algorithm is to first create four template bitmaps to represent the ink directional\nprobability of a given shape class, then an unknown shape instance is classified as the class whose directional\ntemplates it most closely matches.\n\n#### Preprocessing\n\nFirst, angle values are computed for all points in all strokes in a given shape instance. These angles are based off\nzero degrees along the horizontal axis. The angle value for a point is calculated as the average of the angles of the\nline segments connecting that point to its previous and next neighbors. These angles are then convoluted with a\nGaussian smoothing kernel.\n\nNext, the given shape instance is uniformly scaled and translated so that its x and y coordinate values range from 0\nto 1. It is also translated so that it is centered in this hypothetical, square, 1x1 canvas.\n\nDirectional pixel values are then computed for the given shape instance. There are four directional components\nassociated with each pixel&mdash;the lines along 0&deg;, 45&deg;, 90&deg;, and 135&deg;. The value of a point for each\nof these four directions is 1 if the angle is different by 0&deg;, 0 if the angle is different by 45&deg; degrees or\nmore, and linearly interpolated between 0 and 1 for angles differing by 0&deg;-45&deg;. Note that these directions\nalso match with their opposites; i.e., if a point has an angle of 215&deg;, then it has a difference of 0&deg; with\nthe 45&deg; line, and its value for its 45&deg; directional pixel is 1.\n\nThe entire bitmap region is not stored for each shape instance; in order to save space and time, a mapping from pixel\nindices to directional intensity values is created, and this mapping contains a key for a given pixel if and only if\nthe shape instance contains a point in that pixel. There are actually four such mappings for each shape instance&mdash;\none for each of the four directions. These mappings are created by looping over each of the points, determining in\nwhich pixel a point lies, and storing the four directional values of this point at this pixel index within the four\nmappings. If multiple points in a shape instance have values for the same direction in the same pixel, then the\nlargest value is saved.\n\nThe discretization of ink means that we have two special cases to consider: when a single pixel contains multiple\nconsecutive points, and when the line segment between two consecutive points intersects a pixel in which neither point\nactually lies. The former case is actually handled well with the aforementioned policy of saving a pixel's maximal\nintensity value for each direction. An alternative approach for this could have been to use the average angle values\nfor consecutive points lying within the same pixel, but this causes a good deal of information to be lost within\npixels containing high curvature&mdash;i.e., corners. The latter case could be handled robustly by calculating the\nintermediate pixels via the Bresenham line algorithm, but the lost pixels become less significant with more training\nexamples. Also, a 3x3 Gaussian smoothing kernel is used to smooth the final values of the templates. However, these\ntwo points do not address the lost pixels from an unknown shape instance being recognized, and further research could\nbe performed to determine whether the application of the Bresenham line algorithm would increase recognition accuracy.\n\n#### Training\n\nAfter each shape instance has been preprocessed, actually creating the templates is a simple process. For each shape\nclass, four complete bitmaps are created&mdash;one for each direction&mdash;and then all of the pixel intensity values\nfor each of the training shape instances are added together into the appropriate bitmaps. Each pixel in each bitmap is\nthen normalized by the number of training instances for the given shape class template. Finally, a 3x3 Gaussian\nsmoothing kernel is used to smooth the final values of each of the directional bitmaps for each template.\n\n#### Recognition\n\nTo recognize a given unknown shape instance, a simple distance metric is used, and the shape is classified as \nwhichever class yields the smallest distance. This distance between a shape instance and a class template is computed \nas\n\n![Shape-class distance equation][shape-class-distance-equation-image],\n\nwhere _I_ is the list of the pixel indices&mdash;i.e., keys&mdash;in the pixel indices to directional intensity values\nmappings, _s<sub>&theta;i</sub>_ is the directional intensity value from the &theta; directional mapping of the pixel\nat index _i_ for the unknown shape instance, _t<sub>&theta;i</sub>_ is the directional intensity value from the\n&theta; directional bitmap of the pixel at index _i_ for the shape class template, _n<sub>s</sub>_ is the number of\npixels containing ink for the unknown shape instance, _n<sub>t</sub>_ is the average number of pixels containing ink\nfor the shape class template, and _w_ is a weight parameter.\n\nThe term relating to the number of pixels containing ink is important, because this distance metric only considers\npixels which are covered by the unknown shape instance. To understand why this is a problem, consider the example of\nthe unknown shape instance being  the letter P, and there are templates both for the letter P and the letter R.\nBecause the distance only considers the pixels from the shape instance P, the P and R templates will be found to have\nroughly the same distance. This term for the number of pixels containing ink allows the distance metric to match the P\nshape instance more closely to the P template than the R template.\n\nIt may seem that rather than using this term for the number of pixels containing ink, that the distance metric could \nsimply sum over all of the pixels in the template bitmap rather than only over the pixels covered by the shape \ninstance, but this leads to its own problem. This would mean that whichever class template contains the least\nink&mdash;in our case '-'&mdash;would nearly always be found to have the lowest distance.\n\n#### Parameters\n\n_w_ = 0.09\ntemplate side length (they are square) = 14\nnumber of smoothing iterations for the templates = 3\nnumber of smoothing iterations for the point angle values = 1\n\nThese values have been selected by hand.\n\n### Strengths\n\nThe largest strength of this recognition algorithm is that it is extremely fast both to train and to recognize. It \ntook, on average, 0.36 to perform the 18-fold cross-validation, 0.02 seconds to train, and 0.00006 seconds to \nrecognize a shape instance.\n\nThis algorithm is scale invariant.\n\n### Weaknesses\n\nThis algorithm is rotationally variant, so it would not perform well with a system in which rotation mattered.\n\nThis algorithm does not fully take into account the conditional probabilities of the ink. The templates naturally \nrepresent a form of Gaussian probability for ink around a segment of the shape class&mdash;i.e., there is a higher \nprobability of the ink in an instance of the shape class lying in the center of the segment of the template than off \nto either side of the segment. However, given that a point in an instance of the shape class does lie off to one side \nof a segment of the shape class template, it is much more likely that the next point also will lie off to that side, \nand much less likely that the next point will lie off to the other side. This algorithm does not take advantage of \nthis conditional probability.\n\n### Improvements\n\nThis algorithm could be extended to become rotationally invariant. This could possibly be done by rotating each shape \ninstance according to an indicative angle from the centroid to the furthest point from the centroid.\n\nThe conditional ink probability&mdash;addressed in the weaknesses section&mdash;could be taken advantage of with a\n\"super pixel\" scheme. In this scheme, each pixel in each directional bitmap could contain four additional mxm\nsub-bitmaps of pixel values. These sub-bitmaps would represent the conditional directional ink probabilities of the\nneighbors of the given center pixel. Adapting the training of the templates for these bitmaps of super pixels and the\ndistance metric would be a fairly straightforward extension of their current versions. However, this super-pixel\nscheme would have a much higher time and space complexity.\n\n\n[shape-class-distance-equation-image]: /example/data/gesture-recognizer/shape-class-distance-equation.png"},{"id":"hex-grid","titleShort":"Hex Grid","titleLong":"Hex Grid","url":"http://jackieandlevi.com/hex-grid","jobTitle":"","date":"2014","categories":["side-project","web","front-end","svg","canvas","animation","library","app"],"iconSrc":"","thumbnailSrc":"","images":[],"videos":[],"content":"TODO: add description"},{"id":"idean","titleShort":"Idean","titleLong":"Idean","url":"http://idean.com","jobTitle":"UI Developer","date":"2014","categories":["work","web","front-end","back-end","user-experience"],"iconSrc":"","thumbnailSrc":"","images":[],"videos":[],"content":"TODO: add description"},{"id":"jackieandlevi.com","titleShort":"Portfolio Website: for Myself","titleLong":"My Portfolio Website","url":"http://jackieandlevi.com","jobTitle":"","date":{"start":"2013","end":"2014"},"categories":["side-project","web","website","app","front-end","back-end","node.js","express","angularjs","mongodb","material-design","animation"],"iconSrc":"","thumbnailSrc":"","images":[],"videos":[],"content":"TODO: add description"},{"id":"metabounce","titleShort":"Web Doodle: Metabounce","titleLong":"Metabounce","url":"http://jackieandlevi.com/metabounce","jobTitle":"","date":"2014","categories":["side-project","web","doodle","front-end","svg","animation"],"iconSrc":"","thumbnailSrc":"","images":[],"videos":[],"content":"TODO: add description"},{"id":"newtons-pen","titleShort":"Intelligent Tutoring System: Pen","titleLong":"Newtons Pen","url":"http://escholarship.org/uc/item/40r3k5v2","jobTitle":"Graduate Student Researcher (Software Engineer)","date":{"start":"2012","end":"2013"},"categories":["work","school","research","ucr","c-sharp","app","livescribe","pen"],"iconSrc":"","thumbnailSrc":"","images":[],"videos":[],"content":"TODO: add description"},{"id":"newtons-tablet","titleShort":"Intelligent Tutoring System: Tablet","titleLong":"Newtons Tablet","url":"http://escholarship.org/uc/item/40r3k5v2","jobTitle":"Graduate Student Researcher (Software Engineer)","date":{"start":"2012","end":"2013"},"categories":["work","school","research","ucr","c-sharp","app","tablet"],"iconSrc":"","thumbnailSrc":"","images":[],"videos":[],"content":"TODO: add description"},{"id":"phone-wand","titleShort":"Blind-Accessible Navigation","titleLong":"Phone Wand","url":"https://code.google.com/p/mobileaccessibility/source/browse/#svn%2Ftrunk%2FPhoneWand","jobTitle":"","date":"2011","categories":["school","uw","android","accessibility","google-maps-api","app"],"iconSrc":"","thumbnailSrc":"","images":[],"videos":[],"content":"TODO: add description"},{"id":"photo-viewer","titleShort":"Web App: Photo Viewer","titleLong":"Photo Viewer","url":"http://jackieandlevi.com/photo-viewer","jobTitle":"","date":"2014","categories":["side-project","web","front-end","app","xhr2","animation"],"iconSrc":"","thumbnailSrc":"","images":[],"videos":[],"content":"TODO: add description"},{"id":"progress-circle","titleShort":"Web Doodle: Progress Circle","titleLong":"Progress Circle","url":"http://jackieandlevi.com/progress-circle","jobTitle":"","date":"2014","categories":["side-project","web","doodle","front-end","svg","tiny","animation"],"iconSrc":"","thumbnailSrc":"","images":[],"videos":[],"content":"TODO: add description"},{"id":"rainydayukes.com","titleShort":"Business Website: Ukuleles","titleLong":"Business Website for a Hand-Made Ukulele Business","url":"http://rainydayukes.com","jobTitle":"","date":{"start":"2010","end":"2011"},"categories":["side-project","web","web-site","front-end","jquery"],"iconSrc":"","thumbnailSrc":"","images":[],"videos":[],"content":"TODO: add description"},{"id":"shouldihaveanother.beer","titleShort":"Web Doodle: Beer?","titleLong":"shouldihaveanother.beer","url":"http://shouldihaveanother.beer","jobTitle":"","date":"2014","categories":["side-project","web","website","doodle","front-end","canvas","animation"],"iconSrc":"","thumbnailSrc":"","images":[],"videos":[],"content":"TODO: add description"},{"id":"squared-away","titleShort":"Tile-Matching Puzzle Game","titleLong":"Squared Away","url":"http://jackieandlevi.com/squared-away","jobTitle":"","date":"2013","categories":["side-project","web","app","front-end","canvas","animation","game"],"iconSrc":"","thumbnailSrc":"","images":[],"videos":[],"content":"TODO: add description"},{"id":"text-animation","titleShort":"Bower Package: Text Animation","titleLong":"Text Animation","url":"http://jackieandlevi.com/text-animation","jobTitle":"","date":"2014","categories":["side-project","web","front-end","animation","library","bower"],"iconSrc":"","thumbnailSrc":"","images":[],"videos":[],"content":"TODO: add description"},{"id":"ucr-ta","titleShort":"Teaching Assistant","titleLong":"Teaching Assistant","url":"","jobTitle":"Teaching Assistant","date":"2012-2013","categories":["school","teaching","c","c++","ucr"],"iconSrc":"","thumbnailSrc":"","images":[],"videos":[],"content":"TODO: add description"},{"id":"uw-graphics","titleShort":"OpenGL Animations","titleLong":"OpenGL Models and Animations","url":"","jobTitle":"","date":"2011","categories":["school","uw","opengl","animation","c++"],"iconSrc":"","thumbnailSrc":"","images":[],"videos":[],"content":"TODO: add description"},{"id":"voicebox-technologies","titleShort":"Audio Signal Processing","titleLong":"Audio Signal Processing","url":"http://voicebox.com/","jobTitle":"Summer Intern (Software Engineer)","date":"2011","categories":["work","intern","c","c++"],"iconSrc":"","thumbnailSrc":"","images":[],"videos":[],"content":"TODO: add description"},{"id":"wedding-invite","titleShort":"Web App: Wedding Site","titleLong":"Wedding Invite and RSVP System","url":"http://jackieandlevi.com/wedding/invite","jobTitle":"","date":"2012","categories":["side-project","web","web-site","front-end","php","jquery","animations"],"iconSrc":"","thumbnailSrc":"","images":[],"videos":[],"content":"TODO: add description"}]