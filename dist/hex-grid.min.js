;/*! showdown 02-06-2017 */
(function(){
/**
 * Created by Tivie on 13-07-2015.
 */

function getDefaultOpts (simple) {
  'use strict';

  var defaultOptions = {
    omitExtraWLInCodeBlocks: {
      defaultValue: false,
      describe: 'Omit the default extra whiteline added to code blocks',
      type: 'boolean'
    },
    noHeaderId: {
      defaultValue: false,
      describe: 'Turn on/off generated header id',
      type: 'boolean'
    },
    prefixHeaderId: {
      defaultValue: false,
      describe: 'Specify a prefix to generated header ids',
      type: 'string'
    },
    ghCompatibleHeaderId: {
      defaultValue: false,
      describe: 'Generate header ids compatible with github style (spaces are replaced with dashes, a bunch of non alphanumeric chars are removed)',
      type: 'boolean'
    },
    headerLevelStart: {
      defaultValue: false,
      describe: 'The header blocks level start',
      type: 'integer'
    },
    parseImgDimensions: {
      defaultValue: false,
      describe: 'Turn on/off image dimension parsing',
      type: 'boolean'
    },
    simplifiedAutoLink: {
      defaultValue: false,
      describe: 'Turn on/off GFM autolink style',
      type: 'boolean'
    },
    excludeTrailingPunctuationFromURLs: {
      defaultValue: false,
      describe: 'Excludes trailing punctuation from links generated with autoLinking',
      type: 'boolean'
    },
    literalMidWordUnderscores: {
      defaultValue: false,
      describe: 'Parse midword underscores as literal underscores',
      type: 'boolean'
    },
    literalMidWordAsterisks: {
      defaultValue: false,
      describe: 'Parse midword asterisks as literal asterisks',
      type: 'boolean'
    },
    strikethrough: {
      defaultValue: false,
      describe: 'Turn on/off strikethrough support',
      type: 'boolean'
    },
    tables: {
      defaultValue: false,
      describe: 'Turn on/off tables support',
      type: 'boolean'
    },
    tablesHeaderId: {
      defaultValue: false,
      describe: 'Add an id to table headers',
      type: 'boolean'
    },
    ghCodeBlocks: {
      defaultValue: true,
      describe: 'Turn on/off GFM fenced code blocks support',
      type: 'boolean'
    },
    tasklists: {
      defaultValue: false,
      describe: 'Turn on/off GFM tasklist support',
      type: 'boolean'
    },
    smoothLivePreview: {
      defaultValue: false,
      describe: 'Prevents weird effects in live previews due to incomplete input',
      type: 'boolean'
    },
    smartIndentationFix: {
      defaultValue: false,
      description: 'Tries to smartly fix indentation in es6 strings',
      type: 'boolean'
    },
    disableForced4SpacesIndentedSublists: {
      defaultValue: false,
      description: 'Disables the requirement of indenting nested sublists by 4 spaces',
      type: 'boolean'
    },
    simpleLineBreaks: {
      defaultValue: false,
      description: 'Parses simple line breaks as <br> (GFM Style)',
      type: 'boolean'
    },
    requireSpaceBeforeHeadingText: {
      defaultValue: false,
      description: 'Makes adding a space between `#` and the header text mandatory (GFM Style)',
      type: 'boolean'
    },
    ghMentions: {
      defaultValue: false,
      description: 'Enables github @mentions',
      type: 'boolean'
    },
    ghMentionsLink: {
      defaultValue: 'https://github.com/{u}',
      description: 'Changes the link generated by @mentions. Only applies if ghMentions option is enabled.',
      type: 'string'
    },
    encodeEmails: {
      defaultValue: true,
      description: 'Encode e-mail addresses through the use of Character Entities, transforming ASCII e-mail addresses into its equivalent decimal entities',
      type: 'boolean'
    },
    openLinksInNewWindow: {
      defaultValue: false,
      description: 'Open all links in new windows',
      type: 'boolean'
    }
  };
  if (simple === false) {
    return JSON.parse(JSON.stringify(defaultOptions));
  }
  var ret = {};
  for (var opt in defaultOptions) {
    if (defaultOptions.hasOwnProperty(opt)) {
      ret[opt] = defaultOptions[opt].defaultValue;
    }
  }
  return ret;
}

function allOptionsOn () {
  'use strict';
  var options = getDefaultOpts(true),
      ret = {};
  for (var opt in options) {
    if (options.hasOwnProperty(opt)) {
      ret[opt] = true;
    }
  }
  return ret;
}

/**
 * Created by Tivie on 06-01-2015.
 */

// Private properties
var showdown = {},
    parsers = {},
    extensions = {},
    globalOptions = getDefaultOpts(true),
    setFlavor = 'vanilla',
    flavor = {
      github: {
        omitExtraWLInCodeBlocks:              true,
        simplifiedAutoLink:                   true,
        excludeTrailingPunctuationFromURLs:   true,
        literalMidWordUnderscores:            true,
        strikethrough:                        true,
        tables:                               true,
        tablesHeaderId:                       true,
        ghCodeBlocks:                         true,
        tasklists:                            true,
        disableForced4SpacesIndentedSublists: true,
        simpleLineBreaks:                     true,
        requireSpaceBeforeHeadingText:        true,
        ghCompatibleHeaderId:                 true,
        ghMentions:                           true
      },
      original: {
        noHeaderId:                           true,
        ghCodeBlocks:                         false
      },
      ghost: {
        omitExtraWLInCodeBlocks:              true,
        parseImgDimensions:                   true,
        simplifiedAutoLink:                   true,
        excludeTrailingPunctuationFromURLs:   true,
        literalMidWordUnderscores:            true,
        strikethrough:                        true,
        tables:                               true,
        tablesHeaderId:                       true,
        ghCodeBlocks:                         true,
        tasklists:                            true,
        smoothLivePreview:                    true,
        simpleLineBreaks:                     true,
        requireSpaceBeforeHeadingText:        true,
        ghMentions:                           false,
        encodeEmails:                         true
      },
      vanilla: getDefaultOpts(true),
      allOn: allOptionsOn()
    };

/**
 * helper namespace
 * @type {{}}
 */
showdown.helper = {};

/**
 * TODO LEGACY SUPPORT CODE
 * @type {{}}
 */
showdown.extensions = {};

/**
 * Set a global option
 * @static
 * @param {string} key
 * @param {*} value
 * @returns {showdown}
 */
showdown.setOption = function (key, value) {
  'use strict';
  globalOptions[key] = value;
  return this;
};

/**
 * Get a global option
 * @static
 * @param {string} key
 * @returns {*}
 */
showdown.getOption = function (key) {
  'use strict';
  return globalOptions[key];
};

/**
 * Get the global options
 * @static
 * @returns {{}}
 */
showdown.getOptions = function () {
  'use strict';
  return globalOptions;
};

/**
 * Reset global options to the default values
 * @static
 */
showdown.resetOptions = function () {
  'use strict';
  globalOptions = getDefaultOpts(true);
};

/**
 * Set the flavor showdown should use as default
 * @param {string} name
 */
showdown.setFlavor = function (name) {
  'use strict';
  if (!flavor.hasOwnProperty(name)) {
    throw Error(name + ' flavor was not found');
  }
  showdown.resetOptions();
  var preset = flavor[name];
  setFlavor = name;
  for (var option in preset) {
    if (preset.hasOwnProperty(option)) {
      globalOptions[option] = preset[option];
    }
  }
};

/**
 * Get the currently set flavor
 * @returns {string}
 */
showdown.getFlavor = function () {
  'use strict';
  return setFlavor;
};

/**
 * Get the options of a specified flavor. Returns undefined if the flavor was not found
 * @param {string} name Name of the flavor
 * @returns {{}|undefined}
 */
showdown.getFlavorOptions = function (name) {
  'use strict';
  if (flavor.hasOwnProperty(name)) {
    return flavor[name];
  }
};

/**
 * Get the default options
 * @static
 * @param {boolean} [simple=true]
 * @returns {{}}
 */
showdown.getDefaultOptions = function (simple) {
  'use strict';
  return getDefaultOpts(simple);
};

/**
 * Get or set a subParser
 *
 * subParser(name)       - Get a registered subParser
 * subParser(name, func) - Register a subParser
 * @static
 * @param {string} name
 * @param {function} [func]
 * @returns {*}
 */
showdown.subParser = function (name, func) {
  'use strict';
  if (showdown.helper.isString(name)) {
    if (typeof func !== 'undefined') {
      parsers[name] = func;
    } else {
      if (parsers.hasOwnProperty(name)) {
        return parsers[name];
      } else {
        throw Error('SubParser named ' + name + ' not registered!');
      }
    }
  }
};

/**
 * Gets or registers an extension
 * @static
 * @param {string} name
 * @param {object|function=} ext
 * @returns {*}
 */
showdown.extension = function (name, ext) {
  'use strict';

  if (!showdown.helper.isString(name)) {
    throw Error('Extension \'name\' must be a string');
  }

  name = showdown.helper.stdExtName(name);

  // Getter
  if (showdown.helper.isUndefined(ext)) {
    if (!extensions.hasOwnProperty(name)) {
      throw Error('Extension named ' + name + ' is not registered!');
    }
    return extensions[name];

    // Setter
  } else {
    // Expand extension if it's wrapped in a function
    if (typeof ext === 'function') {
      ext = ext();
    }

    // Ensure extension is an array
    if (!showdown.helper.isArray(ext)) {
      ext = [ext];
    }

    var validExtension = validate(ext, name);

    if (validExtension.valid) {
      extensions[name] = ext;
    } else {
      throw Error(validExtension.error);
    }
  }
};

/**
 * Gets all extensions registered
 * @returns {{}}
 */
showdown.getAllExtensions = function () {
  'use strict';
  return extensions;
};

/**
 * Remove an extension
 * @param {string} name
 */
showdown.removeExtension = function (name) {
  'use strict';
  delete extensions[name];
};

/**
 * Removes all extensions
 */
showdown.resetExtensions = function () {
  'use strict';
  extensions = {};
};

/**
 * Validate extension
 * @param {array} extension
 * @param {string} name
 * @returns {{valid: boolean, error: string}}
 */
function validate (extension, name) {
  'use strict';

  var errMsg = (name) ? 'Error in ' + name + ' extension->' : 'Error in unnamed extension',
      ret = {
        valid: true,
        error: ''
      };

  if (!showdown.helper.isArray(extension)) {
    extension = [extension];
  }

  for (var i = 0; i < extension.length; ++i) {
    var baseMsg = errMsg + ' sub-extension ' + i + ': ',
        ext = extension[i];
    if (typeof ext !== 'object') {
      ret.valid = false;
      ret.error = baseMsg + 'must be an object, but ' + typeof ext + ' given';
      return ret;
    }

    if (!showdown.helper.isString(ext.type)) {
      ret.valid = false;
      ret.error = baseMsg + 'property "type" must be a string, but ' + typeof ext.type + ' given';
      return ret;
    }

    var type = ext.type = ext.type.toLowerCase();

    // normalize extension type
    if (type === 'language') {
      type = ext.type = 'lang';
    }

    if (type === 'html') {
      type = ext.type = 'output';
    }

    if (type !== 'lang' && type !== 'output' && type !== 'listener') {
      ret.valid = false;
      ret.error = baseMsg + 'type ' + type + ' is not recognized. Valid values: "lang/language", "output/html" or "listener"';
      return ret;
    }

    if (type === 'listener') {
      if (showdown.helper.isUndefined(ext.listeners)) {
        ret.valid = false;
        ret.error = baseMsg + '. Extensions of type "listener" must have a property called "listeners"';
        return ret;
      }
    } else {
      if (showdown.helper.isUndefined(ext.filter) && showdown.helper.isUndefined(ext.regex)) {
        ret.valid = false;
        ret.error = baseMsg + type + ' extensions must define either a "regex" property or a "filter" method';
        return ret;
      }
    }

    if (ext.listeners) {
      if (typeof ext.listeners !== 'object') {
        ret.valid = false;
        ret.error = baseMsg + '"listeners" property must be an object but ' + typeof ext.listeners + ' given';
        return ret;
      }
      for (var ln in ext.listeners) {
        if (ext.listeners.hasOwnProperty(ln)) {
          if (typeof ext.listeners[ln] !== 'function') {
            ret.valid = false;
            ret.error = baseMsg + '"listeners" property must be an hash of [event name]: [callback]. listeners.' + ln +
              ' must be a function but ' + typeof ext.listeners[ln] + ' given';
            return ret;
          }
        }
      }
    }

    if (ext.filter) {
      if (typeof ext.filter !== 'function') {
        ret.valid = false;
        ret.error = baseMsg + '"filter" must be a function, but ' + typeof ext.filter + ' given';
        return ret;
      }
    } else if (ext.regex) {
      if (showdown.helper.isString(ext.regex)) {
        ext.regex = new RegExp(ext.regex, 'g');
      }
      if (!(ext.regex instanceof RegExp)) {
        ret.valid = false;
        ret.error = baseMsg + '"regex" property must either be a string or a RegExp object, but ' + typeof ext.regex + ' given';
        return ret;
      }
      if (showdown.helper.isUndefined(ext.replace)) {
        ret.valid = false;
        ret.error = baseMsg + '"regex" extensions must implement a replace string or function';
        return ret;
      }
    }
  }
  return ret;
}

/**
 * Validate extension
 * @param {object} ext
 * @returns {boolean}
 */
showdown.validateExtension = function (ext) {
  'use strict';

  var validateExtension = validate(ext, null);
  if (!validateExtension.valid) {
    console.warn(validateExtension.error);
    return false;
  }
  return true;
};

/**
 * showdownjs helper functions
 */

if (!showdown.hasOwnProperty('helper')) {
  showdown.helper = {};
}

/**
 * Check if var is string
 * @static
 * @param {string} a
 * @returns {boolean}
 */
showdown.helper.isString = function (a) {
  'use strict';
  return (typeof a === 'string' || a instanceof String);
};

/**
 * Check if var is a function
 * @static
 * @param {*} a
 * @returns {boolean}
 */
showdown.helper.isFunction = function (a) {
  'use strict';
  var getType = {};
  return a && getType.toString.call(a) === '[object Function]';
};

/**
 * isArray helper function
 * @static
 * @param {*} a
 * @returns {boolean}
 */
showdown.helper.isArray = function (a) {
  'use strict';
  return a.constructor === Array;
};

/**
 * Check if value is undefined
 * @static
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is `undefined`, else `false`.
 */
showdown.helper.isUndefined = function (value) {
  'use strict';
  return typeof value === 'undefined';
};

/**
 * ForEach helper function
 * Iterates over Arrays and Objects (own properties only)
 * @static
 * @param {*} obj
 * @param {function} callback Accepts 3 params: 1. value, 2. key, 3. the original array/object
 */
showdown.helper.forEach = function (obj, callback) {
  'use strict';
  // check if obj is defined
  if (showdown.helper.isUndefined(obj)) {
    throw new Error('obj param is required');
  }

  if (showdown.helper.isUndefined(callback)) {
    throw new Error('callback param is required');
  }

  if (!showdown.helper.isFunction(callback)) {
    throw new Error('callback param must be a function/closure');
  }

  if (typeof obj.forEach === 'function') {
    obj.forEach(callback);
  } else if (showdown.helper.isArray(obj)) {
    for (var i = 0; i < obj.length; i++) {
      callback(obj[i], i, obj);
    }
  } else if (typeof (obj) === 'object') {
    for (var prop in obj) {
      if (obj.hasOwnProperty(prop)) {
        callback(obj[prop], prop, obj);
      }
    }
  } else {
    throw new Error('obj does not seem to be an array or an iterable object');
  }
};

/**
 * Standardidize extension name
 * @static
 * @param {string} s extension name
 * @returns {string}
 */
showdown.helper.stdExtName = function (s) {
  'use strict';
  return s.replace(/[_?*+\/\\.^-]/g, '').replace(/\s/g, '').toLowerCase();
};

function escapeCharactersCallback (wholeMatch, m1) {
  'use strict';
  var charCodeToEscape = m1.charCodeAt(0);
  return '¨E' + charCodeToEscape + 'E';
}

/**
 * Callback used to escape characters when passing through String.replace
 * @static
 * @param {string} wholeMatch
 * @param {string} m1
 * @returns {string}
 */
showdown.helper.escapeCharactersCallback = escapeCharactersCallback;

/**
 * Escape characters in a string
 * @static
 * @param {string} text
 * @param {string} charsToEscape
 * @param {boolean} afterBackslash
 * @returns {XML|string|void|*}
 */
showdown.helper.escapeCharacters = function (text, charsToEscape, afterBackslash) {
  'use strict';
  // First we have to escape the escape characters so that
  // we can build a character class out of them
  var regexString = '([' + charsToEscape.replace(/([\[\]\\])/g, '\\$1') + '])';

  if (afterBackslash) {
    regexString = '\\\\' + regexString;
  }

  var regex = new RegExp(regexString, 'g');
  text = text.replace(regex, escapeCharactersCallback);

  return text;
};

var rgxFindMatchPos = function (str, left, right, flags) {
  'use strict';
  var f = flags || '',
      g = f.indexOf('g') > -1,
      x = new RegExp(left + '|' + right, 'g' + f.replace(/g/g, '')),
      l = new RegExp(left, f.replace(/g/g, '')),
      pos = [],
      t, s, m, start, end;

  do {
    t = 0;
    while ((m = x.exec(str))) {
      if (l.test(m[0])) {
        if (!(t++)) {
          s = x.lastIndex;
          start = s - m[0].length;
        }
      } else if (t) {
        if (!--t) {
          end = m.index + m[0].length;
          var obj = {
            left: {start: start, end: s},
            match: {start: s, end: m.index},
            right: {start: m.index, end: end},
            wholeMatch: {start: start, end: end}
          };
          pos.push(obj);
          if (!g) {
            return pos;
          }
        }
      }
    }
  } while (t && (x.lastIndex = s));

  return pos;
};

/**
 * matchRecursiveRegExp
 *
 * (c) 2007 Steven Levithan <stevenlevithan.com>
 * MIT License
 *
 * Accepts a string to search, a left and right format delimiter
 * as regex patterns, and optional regex flags. Returns an array
 * of matches, allowing nested instances of left/right delimiters.
 * Use the "g" flag to return all matches, otherwise only the
 * first is returned. Be careful to ensure that the left and
 * right format delimiters produce mutually exclusive matches.
 * Backreferences are not supported within the right delimiter
 * due to how it is internally combined with the left delimiter.
 * When matching strings whose format delimiters are unbalanced
 * to the left or right, the output is intentionally as a
 * conventional regex library with recursion support would
 * produce, e.g. "<<x>" and "<x>>" both produce ["x"] when using
 * "<" and ">" as the delimiters (both strings contain a single,
 * balanced instance of "<x>").
 *
 * examples:
 * matchRecursiveRegExp("test", "\\(", "\\)")
 * returns: []
 * matchRecursiveRegExp("<t<<e>><s>>t<>", "<", ">", "g")
 * returns: ["t<<e>><s>", ""]
 * matchRecursiveRegExp("<div id=\"x\">test</div>", "<div\\b[^>]*>", "</div>", "gi")
 * returns: ["test"]
 */
showdown.helper.matchRecursiveRegExp = function (str, left, right, flags) {
  'use strict';

  var matchPos = rgxFindMatchPos (str, left, right, flags),
      results = [];

  for (var i = 0; i < matchPos.length; ++i) {
    results.push([
      str.slice(matchPos[i].wholeMatch.start, matchPos[i].wholeMatch.end),
      str.slice(matchPos[i].match.start, matchPos[i].match.end),
      str.slice(matchPos[i].left.start, matchPos[i].left.end),
      str.slice(matchPos[i].right.start, matchPos[i].right.end)
    ]);
  }
  return results;
};

/**
 *
 * @param {string} str
 * @param {string|function} replacement
 * @param {string} left
 * @param {string} right
 * @param {string} flags
 * @returns {string}
 */
showdown.helper.replaceRecursiveRegExp = function (str, replacement, left, right, flags) {
  'use strict';

  if (!showdown.helper.isFunction(replacement)) {
    var repStr = replacement;
    replacement = function () {
      return repStr;
    };
  }

  var matchPos = rgxFindMatchPos(str, left, right, flags),
      finalStr = str,
      lng = matchPos.length;

  if (lng > 0) {
    var bits = [];
    if (matchPos[0].wholeMatch.start !== 0) {
      bits.push(str.slice(0, matchPos[0].wholeMatch.start));
    }
    for (var i = 0; i < lng; ++i) {
      bits.push(
        replacement(
          str.slice(matchPos[i].wholeMatch.start, matchPos[i].wholeMatch.end),
          str.slice(matchPos[i].match.start, matchPos[i].match.end),
          str.slice(matchPos[i].left.start, matchPos[i].left.end),
          str.slice(matchPos[i].right.start, matchPos[i].right.end)
        )
      );
      if (i < lng - 1) {
        bits.push(str.slice(matchPos[i].wholeMatch.end, matchPos[i + 1].wholeMatch.start));
      }
    }
    if (matchPos[lng - 1].wholeMatch.end < str.length) {
      bits.push(str.slice(matchPos[lng - 1].wholeMatch.end));
    }
    finalStr = bits.join('');
  }
  return finalStr;
};

/**
 * Returns the index within the passed String object of the first occurrence of the specified regex,
 * starting the search at fromIndex. Returns -1 if the value is not found.
 *
 * @param {string} str string to search
 * @param {RegExp} regex Regular expression to search
 * @param {int} [fromIndex = 0] Index to start the search
 * @returns {Number}
 * @throws InvalidArgumentError
 */
showdown.helper.regexIndexOf = function (str, regex, fromIndex) {
  'use strict';
  if (!showdown.helper.isString(str)) {
    throw 'InvalidArgumentError: first parameter of showdown.helper.regexIndexOf function must be a string';
  }
  if (regex instanceof RegExp === false) {
    throw 'InvalidArgumentError: second parameter of showdown.helper.regexIndexOf function must be an instance of RegExp';
  }
  var indexOf = str.substring(fromIndex || 0).search(regex);
  return (indexOf >= 0) ? (indexOf + (fromIndex || 0)) : indexOf;
};

/**
 * Splits the passed string object at the defined index, and returns an array composed of the two substrings
 * @param {string} str string to split
 * @param {int} index index to split string at
 * @returns {[string,string]}
 * @throws InvalidArgumentError
 */
showdown.helper.splitAtIndex = function (str, index) {
  'use strict';
  if (!showdown.helper.isString(str)) {
    throw 'InvalidArgumentError: first parameter of showdown.helper.regexIndexOf function must be a string';
  }
  return [str.substring(0, index), str.substring(index)];
};

/**
 * Obfuscate an e-mail address through the use of Character Entities,
 * transforming ASCII characters into their equivalent decimal or hex entities.
 *
 * Since it has a random component, subsequent calls to this function produce different results
 *
 * @param {string} mail
 * @returns {string}
 */
showdown.helper.encodeEmailAddress = function (mail) {
  'use strict';
  var encode = [
    function (ch) {
      return '&#' + ch.charCodeAt(0) + ';';
    },
    function (ch) {
      return '&#x' + ch.charCodeAt(0).toString(16) + ';';
    },
    function (ch) {
      return ch;
    }
  ];

  mail = mail.replace(/./g, function (ch) {
    if (ch === '@') {
      // this *must* be encoded. I insist.
      ch = encode[Math.floor(Math.random() * 2)](ch);
    } else {
      var r = Math.random();
      // roughly 10% raw, 45% hex, 45% dec
      ch = (
        r > 0.9 ? encode[2](ch) : r > 0.45 ? encode[1](ch) : encode[0](ch)
      );
    }
    return ch;
  });

  return mail;
};

/**
 * POLYFILLS
 */
// use this instead of builtin is undefined for IE8 compatibility
if (typeof(console) === 'undefined') {
  console = {
    warn: function (msg) {
      'use strict';
      alert(msg);
    },
    log: function (msg) {
      'use strict';
      alert(msg);
    },
    error: function (msg) {
      'use strict';
      throw msg;
    }
  };
}

/**
 * Common regexes.
 * We declare some common regexes to improve performance
 */
showdown.helper.regexes = {
  asteriskAndDash: /([*_])/g
};

/**
 * Created by Estevao on 31-05-2015.
 */

/**
 * Showdown Converter class
 * @class
 * @param {object} [converterOptions]
 * @returns {Converter}
 */
showdown.Converter = function (converterOptions) {
  'use strict';

  var
      /**
       * Options used by this converter
       * @private
       * @type {{}}
       */
      options = {},

      /**
       * Language extensions used by this converter
       * @private
       * @type {Array}
       */
      langExtensions = [],

      /**
       * Output modifiers extensions used by this converter
       * @private
       * @type {Array}
       */
      outputModifiers = [],

      /**
       * Event listeners
       * @private
       * @type {{}}
       */
      listeners = {},

      /**
       * The flavor set in this converter
       */
      setConvFlavor = setFlavor;

  _constructor();

  /**
   * Converter constructor
   * @private
   */
  function _constructor () {
    converterOptions = converterOptions || {};

    for (var gOpt in globalOptions) {
      if (globalOptions.hasOwnProperty(gOpt)) {
        options[gOpt] = globalOptions[gOpt];
      }
    }

    // Merge options
    if (typeof converterOptions === 'object') {
      for (var opt in converterOptions) {
        if (converterOptions.hasOwnProperty(opt)) {
          options[opt] = converterOptions[opt];
        }
      }
    } else {
      throw Error('Converter expects the passed parameter to be an object, but ' + typeof converterOptions +
      ' was passed instead.');
    }

    if (options.extensions) {
      showdown.helper.forEach(options.extensions, _parseExtension);
    }
  }

  /**
   * Parse extension
   * @param {*} ext
   * @param {string} [name='']
   * @private
   */
  function _parseExtension (ext, name) {

    name = name || null;
    // If it's a string, the extension was previously loaded
    if (showdown.helper.isString(ext)) {
      ext = showdown.helper.stdExtName(ext);
      name = ext;

      // LEGACY_SUPPORT CODE
      if (showdown.extensions[ext]) {
        console.warn('DEPRECATION WARNING: ' + ext + ' is an old extension that uses a deprecated loading method.' +
          'Please inform the developer that the extension should be updated!');
        legacyExtensionLoading(showdown.extensions[ext], ext);
        return;
      // END LEGACY SUPPORT CODE

      } else if (!showdown.helper.isUndefined(extensions[ext])) {
        ext = extensions[ext];

      } else {
        throw Error('Extension "' + ext + '" could not be loaded. It was either not found or is not a valid extension.');
      }
    }

    if (typeof ext === 'function') {
      ext = ext();
    }

    if (!showdown.helper.isArray(ext)) {
      ext = [ext];
    }

    var validExt = validate(ext, name);
    if (!validExt.valid) {
      throw Error(validExt.error);
    }

    for (var i = 0; i < ext.length; ++i) {
      switch (ext[i].type) {

        case 'lang':
          langExtensions.push(ext[i]);
          break;

        case 'output':
          outputModifiers.push(ext[i]);
          break;
      }
      if (ext[i].hasOwnProperty('listeners')) {
        for (var ln in ext[i].listeners) {
          if (ext[i].listeners.hasOwnProperty(ln)) {
            listen(ln, ext[i].listeners[ln]);
          }
        }
      }
    }

  }

  /**
   * LEGACY_SUPPORT
   * @param {*} ext
   * @param {string} name
   */
  function legacyExtensionLoading (ext, name) {
    if (typeof ext === 'function') {
      ext = ext(new showdown.Converter());
    }
    if (!showdown.helper.isArray(ext)) {
      ext = [ext];
    }
    var valid = validate(ext, name);

    if (!valid.valid) {
      throw Error(valid.error);
    }

    for (var i = 0; i < ext.length; ++i) {
      switch (ext[i].type) {
        case 'lang':
          langExtensions.push(ext[i]);
          break;
        case 'output':
          outputModifiers.push(ext[i]);
          break;
        default:// should never reach here
          throw Error('Extension loader error: Type unrecognized!!!');
      }
    }
  }

  /**
   * Listen to an event
   * @param {string} name
   * @param {function} callback
   */
  function listen (name, callback) {
    if (!showdown.helper.isString(name)) {
      throw Error('Invalid argument in converter.listen() method: name must be a string, but ' + typeof name + ' given');
    }

    if (typeof callback !== 'function') {
      throw Error('Invalid argument in converter.listen() method: callback must be a function, but ' + typeof callback + ' given');
    }

    if (!listeners.hasOwnProperty(name)) {
      listeners[name] = [];
    }
    listeners[name].push(callback);
  }

  function rTrimInputText (text) {
    var rsp = text.match(/^\s*/)[0].length,
        rgx = new RegExp('^\\s{0,' + rsp + '}', 'gm');
    return text.replace(rgx, '');
  }

  /**
   * Dispatch an event
   * @private
   * @param {string} evtName Event name
   * @param {string} text Text
   * @param {{}} options Converter Options
   * @param {{}} globals
   * @returns {string}
   */
  this._dispatch = function dispatch (evtName, text, options, globals) {
    if (listeners.hasOwnProperty(evtName)) {
      for (var ei = 0; ei < listeners[evtName].length; ++ei) {
        var nText = listeners[evtName][ei](evtName, text, this, options, globals);
        if (nText && typeof nText !== 'undefined') {
          text = nText;
        }
      }
    }
    return text;
  };

  /**
   * Listen to an event
   * @param {string} name
   * @param {function} callback
   * @returns {showdown.Converter}
   */
  this.listen = function (name, callback) {
    listen(name, callback);
    return this;
  };

  /**
   * Converts a markdown string into HTML
   * @param {string} text
   * @returns {*}
   */
  this.makeHtml = function (text) {
    //check if text is not falsy
    if (!text) {
      return text;
    }

    var globals = {
      gHtmlBlocks:     [],
      gHtmlMdBlocks:   [],
      gHtmlSpans:      [],
      gUrls:           {},
      gTitles:         {},
      gDimensions:     {},
      gListLevel:      0,
      hashLinkCounts:  {},
      langExtensions:  langExtensions,
      outputModifiers: outputModifiers,
      converter:       this,
      ghCodeBlocks:    []
    };

    // This lets us use ¨ trema as an escape char to avoid md5 hashes
    // The choice of character is arbitrary; anything that isn't
    // magic in Markdown will work.
    text = text.replace(/¨/g, '¨T');

    // Replace $ with ¨D
    // RegExp interprets $ as a special character
    // when it's in a replacement string
    text = text.replace(/\$/g, '¨D');

    // Standardize line endings
    text = text.replace(/\r\n/g, '\n'); // DOS to Unix
    text = text.replace(/\r/g, '\n'); // Mac to Unix

    // Stardardize line spaces (nbsp causes trouble in older browsers and some regex flavors)
    text = text.replace(/\u00A0/g, ' ');

    if (options.smartIndentationFix) {
      text = rTrimInputText(text);
    }

    // Make sure text begins and ends with a couple of newlines:
    text = '\n\n' + text + '\n\n';

    // detab
    text = showdown.subParser('detab')(text, options, globals);

    /**
     * Strip any lines consisting only of spaces and tabs.
     * This makes subsequent regexs easier to write, because we can
     * match consecutive blank lines with /\n+/ instead of something
     * contorted like /[ \t]*\n+/
     */
    text = text.replace(/^[ \t]+$/mg, '');

    //run languageExtensions
    showdown.helper.forEach(langExtensions, function (ext) {
      text = showdown.subParser('runExtension')(ext, text, options, globals);
    });

    // run the sub parsers
    text = showdown.subParser('hashPreCodeTags')(text, options, globals);
    text = showdown.subParser('githubCodeBlocks')(text, options, globals);
    text = showdown.subParser('hashHTMLBlocks')(text, options, globals);
    text = showdown.subParser('hashCodeTags')(text, options, globals);
    text = showdown.subParser('stripLinkDefinitions')(text, options, globals);
    text = showdown.subParser('blockGamut')(text, options, globals);
    text = showdown.subParser('unhashHTMLSpans')(text, options, globals);
    text = showdown.subParser('unescapeSpecialChars')(text, options, globals);

    // attacklab: Restore dollar signs
    text = text.replace(/¨D/g, '$$');

    // attacklab: Restore tremas
    text = text.replace(/¨T/g, '¨');

    // Run output modifiers
    showdown.helper.forEach(outputModifiers, function (ext) {
      text = showdown.subParser('runExtension')(ext, text, options, globals);
    });

    return text;
  };

  /**
   * Set an option of this Converter instance
   * @param {string} key
   * @param {*} value
   */
  this.setOption = function (key, value) {
    options[key] = value;
  };

  /**
   * Get the option of this Converter instance
   * @param {string} key
   * @returns {*}
   */
  this.getOption = function (key) {
    return options[key];
  };

  /**
   * Get the options of this Converter instance
   * @returns {{}}
   */
  this.getOptions = function () {
    return options;
  };

  /**
   * Add extension to THIS converter
   * @param {{}} extension
   * @param {string} [name=null]
   */
  this.addExtension = function (extension, name) {
    name = name || null;
    _parseExtension(extension, name);
  };

  /**
   * Use a global registered extension with THIS converter
   * @param {string} extensionName Name of the previously registered extension
   */
  this.useExtension = function (extensionName) {
    _parseExtension(extensionName);
  };

  /**
   * Set the flavor THIS converter should use
   * @param {string} name
   */
  this.setFlavor = function (name) {
    if (!flavor.hasOwnProperty(name)) {
      throw Error(name + ' flavor was not found');
    }
    var preset = flavor[name];
    setConvFlavor = name;
    for (var option in preset) {
      if (preset.hasOwnProperty(option)) {
        options[option] = preset[option];
      }
    }
  };

  /**
   * Get the currently set flavor of this converter
   * @returns {string}
   */
  this.getFlavor = function () {
    return setConvFlavor;
  };

  /**
   * Remove an extension from THIS converter.
   * Note: This is a costly operation. It's better to initialize a new converter
   * and specify the extensions you wish to use
   * @param {Array} extension
   */
  this.removeExtension = function (extension) {
    if (!showdown.helper.isArray(extension)) {
      extension = [extension];
    }
    for (var a = 0; a < extension.length; ++a) {
      var ext = extension[a];
      for (var i = 0; i < langExtensions.length; ++i) {
        if (langExtensions[i] === ext) {
          langExtensions[i].splice(i, 1);
        }
      }
      for (var ii = 0; ii < outputModifiers.length; ++i) {
        if (outputModifiers[ii] === ext) {
          outputModifiers[ii].splice(i, 1);
        }
      }
    }
  };

  /**
   * Get all extension of THIS converter
   * @returns {{language: Array, output: Array}}
   */
  this.getAllExtensions = function () {
    return {
      language: langExtensions,
      output: outputModifiers
    };
  };
};

/**
 * Turn Markdown link shortcuts into XHTML <a> tags.
 */
showdown.subParser('anchors', function (text, options, globals) {
  'use strict';

  text = globals.converter._dispatch('anchors.before', text, options, globals);

  var writeAnchorTag = function (wholeMatch, linkText, linkId, url, m5, m6, title) {
    if (showdown.helper.isUndefined(title)) {
      title = '';
    }
    linkId = linkId.toLowerCase();

    // Special case for explicit empty url
    if (wholeMatch.search(/\(<?\s*>? ?(['"].*['"])?\)$/m) > -1) {
      url = '';
    } else if (!url) {
      if (!linkId) {
        // lower-case and turn embedded newlines into spaces
        linkId = linkText.toLowerCase().replace(/ ?\n/g, ' ');
      }
      url = '#' + linkId;

      if (!showdown.helper.isUndefined(globals.gUrls[linkId])) {
        url = globals.gUrls[linkId];
        if (!showdown.helper.isUndefined(globals.gTitles[linkId])) {
          title = globals.gTitles[linkId];
        }
      } else {
        return wholeMatch;
      }
    }

    //url = showdown.helper.escapeCharacters(url, '*_', false); // replaced line to improve performance
    url = url.replace(showdown.helper.regexes.asteriskAndDash, showdown.helper.escapeCharactersCallback);

    var result = '<a href="' + url + '"';

    if (title !== '' && title !== null) {
      title = title.replace(/"/g, '&quot;');
      //title = showdown.helper.escapeCharacters(title, '*_', false); // replaced line to improve performance
      title = title.replace(showdown.helper.regexes.asteriskAndDash, showdown.helper.escapeCharactersCallback);
      result += ' title="' + title + '"';
    }

    if (options.openLinksInNewWindow) {
      // escaped _
      result += ' target="¨E95Eblank"';
    }

    result += '>' + linkText + '</a>';

    return result;
  };

  // First, handle reference-style links: [link text] [id]
  text = text.replace(/\[((?:\[[^\]]*]|[^\[\]])*)] ?(?:\n *)?\[(.*?)]()()()()/g, writeAnchorTag);

  // Next, inline-style links: [link text](url "optional title")
  // cases with crazy urls like ./image/cat1).png
  text = text.replace(/\[((?:\[[^\]]*]|[^\[\]])*)]()[ \t]*\([ \t]?<([^>]*)>(?:[ \t]*((["'])([^"]*?)\5))?[ \t]?\)/g,
    writeAnchorTag);

  // normal cases
  text = text.replace(/\[((?:\[[^\]]*]|[^\[\]])*)]()[ \t]*\([ \t]?<?([\S]+?(?:\([\S]*?\)[\S]*?)?)>?(?:[ \t]*((["'])([^"]*?)\5))?[ \t]?\)/g,
                      writeAnchorTag);

  // handle reference-style shortcuts: [link text]
  // These must come last in case you've also got [link test][1]
  // or [link test](/foo)
  text = text.replace(/\[([^\[\]]+)]()()()()()/g, writeAnchorTag);

  // Lastly handle GithubMentions if option is enabled
  if (options.ghMentions) {
    text = text.replace(/(^|\s)(\\)?(@([a-z\d\-]+))(?=[.!?;,[\]()]|\s|$)/gmi, function (wm, st, escape, mentions, username) {
      if (escape === '\\') {
        return st + mentions;
      }

      //check if options.ghMentionsLink is a string
      if (!showdown.helper.isString(options.ghMentionsLink)) {
        throw new Error('ghMentionsLink option must be a string');
      }
      var lnk = options.ghMentionsLink.replace(/\{u}/g, username);
      return st + '<a href="' + lnk + '">' + mentions + '</a>';
    });
  }

  text = globals.converter._dispatch('anchors.after', text, options, globals);
  return text;
});

// url allowed chars [a-z\d_.~:/?#[]@!$&'()*+,;=-]

var simpleURLRegex  = /\b(((https?|ftp|dict):\/\/|www\.)[^'">\s]+\.[^'">\s]+)()(?=\s|$)(?!["<>])/gi,
    simpleURLRegex2 = /\b(((https?|ftp|dict):\/\/|www\.)[^'">\s]+\.[^'">\s]+?)([.!?,()\[\]]?)(?=\s|$)(?!["<>])/gi,
    //simpleURLRegex3 = /\b(((https?|ftp):\/\/|www\.)[a-z\d.-]+\.[a-z\d_.~:/?#\[\]@!$&'()*+,;=-]+?)([.!?()]?)(?=\s|$)(?!["<>])/gi,
    delimUrlRegex   = /<(((https?|ftp|dict):\/\/|www\.)[^'">\s]+)()>/gi,
    simpleMailRegex = /(^|\s)(?:mailto:)?([A-Za-z0-9!#$%&'*+-/=?^_`{|}~.]+@[-a-z0-9]+(\.[-a-z0-9]+)*\.[a-z]+)(?=$|\s)/gmi,
    delimMailRegex  = /<()(?:mailto:)?([-.\w]+@[-a-z0-9]+(\.[-a-z0-9]+)*\.[a-z]+)>/gi,

    replaceLink = function (options) {
      'use strict';

      return function (wm, link, m2, m3, trailingPunctuation) {
        var lnkTxt = link,
            append = '',
            target = '';
        if (/^www\./i.test(link)) {
          link = link.replace(/^www\./i, 'http://www.');
        }
        if (options.excludeTrailingPunctuationFromURLs && trailingPunctuation) {
          append = trailingPunctuation;
        }
        if (options.openLinksInNewWindow) {
          target = ' target="¨E95Eblank"';
        }
        return '<a href="' + link + '"' + target + '>' + lnkTxt + '</a>' + append;
      };
    },

    replaceMail = function (options, globals) {
      'use strict';
      return function (wholeMatch, b, mail) {
        var href = 'mailto:';
        b = b || '';
        mail = showdown.subParser('unescapeSpecialChars')(mail, options, globals);
        if (options.encodeEmails) {
          href = showdown.helper.encodeEmailAddress(href + mail);
          mail = showdown.helper.encodeEmailAddress(mail);
        } else {
          href = href + mail;
        }
        return b + '<a href="' + href + '">' + mail + '</a>';
      };
    };

showdown.subParser('autoLinks', function (text, options, globals) {
  'use strict';

  text = globals.converter._dispatch('autoLinks.before', text, options, globals);

  text = text.replace(delimUrlRegex, replaceLink(options));
  text = text.replace(delimMailRegex, replaceMail(options, globals));

  text = globals.converter._dispatch('autoLinks.after', text, options, globals);

  return text;
});

showdown.subParser('simplifiedAutoLinks', function (text, options, globals) {
  'use strict';

  if (!options.simplifiedAutoLink) {
    return text;
  }

  text = globals.converter._dispatch('simplifiedAutoLinks.before', text, options, globals);

  if (options.excludeTrailingPunctuationFromURLs) {
    text = text.replace(simpleURLRegex2, replaceLink(options));
  } else {
    text = text.replace(simpleURLRegex, replaceLink(options));
  }
  text = text.replace(simpleMailRegex, replaceMail(options, globals));

  text = globals.converter._dispatch('simplifiedAutoLinks.after', text, options, globals);

  return text;
});

/**
 * These are all the transformations that form block-level
 * tags like paragraphs, headers, and list items.
 */
showdown.subParser('blockGamut', function (text, options, globals) {
  'use strict';

  text = globals.converter._dispatch('blockGamut.before', text, options, globals);

  // we parse blockquotes first so that we can have headings and hrs
  // inside blockquotes
  text = showdown.subParser('blockQuotes')(text, options, globals);
  text = showdown.subParser('headers')(text, options, globals);

  // Do Horizontal Rules:
  text = showdown.subParser('horizontalRule')(text, options, globals);

  text = showdown.subParser('lists')(text, options, globals);
  text = showdown.subParser('codeBlocks')(text, options, globals);
  text = showdown.subParser('tables')(text, options, globals);

  // We already ran _HashHTMLBlocks() before, in Markdown(), but that
  // was to escape raw HTML in the original Markdown source. This time,
  // we're escaping the markup we've just created, so that we don't wrap
  // <p> tags around block-level tags.
  text = showdown.subParser('hashHTMLBlocks')(text, options, globals);
  text = showdown.subParser('paragraphs')(text, options, globals);

  text = globals.converter._dispatch('blockGamut.after', text, options, globals);

  return text;
});

showdown.subParser('blockQuotes', function (text, options, globals) {
  'use strict';

  text = globals.converter._dispatch('blockQuotes.before', text, options, globals);

  text = text.replace(/((^ {0,3}>[ \t]?.+\n(.+\n)*\n*)+)/gm, function (wholeMatch, m1) {
    var bq = m1;

    // attacklab: hack around Konqueror 3.5.4 bug:
    // "----------bug".replace(/^-/g,"") == "bug"
    bq = bq.replace(/^[ \t]*>[ \t]?/gm, '¨0'); // trim one level of quoting

    // attacklab: clean up hack
    bq = bq.replace(/¨0/g, '');

    bq = bq.replace(/^[ \t]+$/gm, ''); // trim whitespace-only lines
    bq = showdown.subParser('githubCodeBlocks')(bq, options, globals);
    bq = showdown.subParser('blockGamut')(bq, options, globals); // recurse

    bq = bq.replace(/(^|\n)/g, '$1  ');
    // These leading spaces screw with <pre> content, so we need to fix that:
    bq = bq.replace(/(\s*<pre>[^\r]+?<\/pre>)/gm, function (wholeMatch, m1) {
      var pre = m1;
      // attacklab: hack around Konqueror 3.5.4 bug:
      pre = pre.replace(/^  /mg, '¨0');
      pre = pre.replace(/¨0/g, '');
      return pre;
    });

    return showdown.subParser('hashBlock')('<blockquote>\n' + bq + '\n</blockquote>', options, globals);
  });

  text = globals.converter._dispatch('blockQuotes.after', text, options, globals);
  return text;
});

/**
 * Process Markdown `<pre><code>` blocks.
 */
showdown.subParser('codeBlocks', function (text, options, globals) {
  'use strict';

  text = globals.converter._dispatch('codeBlocks.before', text, options, globals);

  // sentinel workarounds for lack of \A and \Z, safari\khtml bug
  text += '¨0';

  var pattern = /(?:\n\n|^)((?:(?:[ ]{4}|\t).*\n+)+)(\n*[ ]{0,3}[^ \t\n]|(?=¨0))/g;
  text = text.replace(pattern, function (wholeMatch, m1, m2) {
    var codeblock = m1,
        nextChar = m2,
        end = '\n';

    codeblock = showdown.subParser('outdent')(codeblock, options, globals);
    codeblock = showdown.subParser('encodeCode')(codeblock, options, globals);
    codeblock = showdown.subParser('detab')(codeblock, options, globals);
    codeblock = codeblock.replace(/^\n+/g, ''); // trim leading newlines
    codeblock = codeblock.replace(/\n+$/g, ''); // trim trailing newlines

    if (options.omitExtraWLInCodeBlocks) {
      end = '';
    }

    codeblock = '<pre><code>' + codeblock + end + '</code></pre>';

    return showdown.subParser('hashBlock')(codeblock, options, globals) + nextChar;
  });

  // strip sentinel
  text = text.replace(/¨0/, '');

  text = globals.converter._dispatch('codeBlocks.after', text, options, globals);
  return text;
});

/**
 *
 *   *  Backtick quotes are used for <code></code> spans.
 *
 *   *  You can use multiple backticks as the delimiters if you want to
 *     include literal backticks in the code span. So, this input:
 *
 *         Just type ``foo `bar` baz`` at the prompt.
 *
 *       Will translate to:
 *
 *         <p>Just type <code>foo `bar` baz</code> at the prompt.</p>
 *
 *    There's no arbitrary limit to the number of backticks you
 *    can use as delimters. If you need three consecutive backticks
 *    in your code, use four for delimiters, etc.
 *
 *  *  You can use spaces to get literal backticks at the edges:
 *
 *         ... type `` `bar` `` ...
 *
 *       Turns to:
 *
 *         ... type <code>`bar`</code> ...
 */
showdown.subParser('codeSpans', function (text, options, globals) {
  'use strict';

  text = globals.converter._dispatch('codeSpans.before', text, options, globals);

  if (typeof(text) === 'undefined') {
    text = '';
  }
  text = text.replace(/(^|[^\\])(`+)([^\r]*?[^`])\2(?!`)/gm,
    function (wholeMatch, m1, m2, m3) {
      var c = m3;
      c = c.replace(/^([ \t]*)/g, '');	// leading whitespace
      c = c.replace(/[ \t]*$/g, '');	// trailing whitespace
      c = showdown.subParser('encodeCode')(c, options, globals);
      return m1 + '<code>' + c + '</code>';
    }
  );

  text = globals.converter._dispatch('codeSpans.after', text, options, globals);
  return text;
});

/**
 * Convert all tabs to spaces
 */
showdown.subParser('detab', function (text, options, globals) {
  'use strict';
  text = globals.converter._dispatch('detab.before', text, options, globals);

  // expand first n-1 tabs
  text = text.replace(/\t(?=\t)/g, '    '); // g_tab_width

  // replace the nth with two sentinels
  text = text.replace(/\t/g, '¨A¨B');

  // use the sentinel to anchor our regex so it doesn't explode
  text = text.replace(/¨B(.+?)¨A/g, function (wholeMatch, m1) {
    var leadingText = m1,
        numSpaces = 4 - leadingText.length % 4;  // g_tab_width

    // there *must* be a better way to do this:
    for (var i = 0; i < numSpaces; i++) {
      leadingText += ' ';
    }

    return leadingText;
  });

  // clean up sentinels
  text = text.replace(/¨A/g, '    ');  // g_tab_width
  text = text.replace(/¨B/g, '');

  text = globals.converter._dispatch('detab.after', text, options, globals);
  return text;
});

/**
 * Smart processing for ampersands and angle brackets that need to be encoded.
 */
showdown.subParser('encodeAmpsAndAngles', function (text, options, globals) {
  'use strict';
  text = globals.converter._dispatch('encodeAmpsAndAngles.before', text, options, globals);

  // Ampersand-encoding based entirely on Nat Irons's Amputator MT plugin:
  // http://bumppo.net/projects/amputator/
  text = text.replace(/&(?!#?[xX]?(?:[0-9a-fA-F]+|\w+);)/g, '&amp;');

  // Encode naked <'s
  text = text.replace(/<(?![a-z\/?$!])/gi, '&lt;');

  // Encode <
  text = text.replace(/</g, '&lt;');

  // Encode >
  text = text.replace(/>/g, '&gt;');

  text = globals.converter._dispatch('encodeAmpsAndAngles.after', text, options, globals);
  return text;
});

/**
 * Returns the string, with after processing the following backslash escape sequences.
 *
 * attacklab: The polite way to do this is with the new escapeCharacters() function:
 *
 *    text = escapeCharacters(text,"\\",true);
 *    text = escapeCharacters(text,"`*_{}[]()>#+-.!",true);
 *
 * ...but we're sidestepping its use of the (slow) RegExp constructor
 * as an optimization for Firefox.  This function gets called a LOT.
 */
showdown.subParser('encodeBackslashEscapes', function (text, options, globals) {
  'use strict';
  text = globals.converter._dispatch('encodeBackslashEscapes.before', text, options, globals);

  text = text.replace(/\\(\\)/g, showdown.helper.escapeCharactersCallback);
  text = text.replace(/\\([`*_{}\[\]()>#+.!~=|-])/g, showdown.helper.escapeCharactersCallback);

  text = globals.converter._dispatch('encodeBackslashEscapes.after', text, options, globals);
  return text;
});

/**
 * Encode/escape certain characters inside Markdown code runs.
 * The point is that in code, these characters are literals,
 * and lose their special Markdown meanings.
 */
showdown.subParser('encodeCode', function (text, options, globals) {
  'use strict';

  text = globals.converter._dispatch('encodeCode.before', text, options, globals);

  // Encode all ampersands; HTML entities are not
  // entities within a Markdown code span.
  text = text
    .replace(/&/g, '&amp;')
  // Do the angle bracket song and dance:
    .replace(/</g, '&lt;')
    .replace(/>/g, '&gt;')
  // Now, escape characters that are magic in Markdown:
    .replace(/([*_{}\[\]\\=~-])/g, showdown.helper.escapeCharactersCallback);

  text = globals.converter._dispatch('encodeCode.after', text, options, globals);
  return text;
});

/**
 * Within tags -- meaning between < and > -- encode [\ ` * _ ~ =] so they
 * don't conflict with their use in Markdown for code, italics and strong.
 */
showdown.subParser('escapeSpecialCharsWithinTagAttributes', function (text, options, globals) {
  'use strict';
  text = globals.converter._dispatch('escapeSpecialCharsWithinTagAttributes.before', text, options, globals);

  // Build a regex to find HTML tags and comments.  See Friedl's
  // "Mastering Regular Expressions", 2nd Ed., pp. 200-201.
  var regex = /(<[a-z\/!$]("[^"]*"|'[^']*'|[^'">])*>|<!(--.*?--\s*)+>)/gi;

  text = text.replace(regex, function (wholeMatch) {
    return wholeMatch
      .replace(/(.)<\/?code>(?=.)/g, '$1`')
      .replace(/([\\`*_~=|])/g, showdown.helper.escapeCharactersCallback);
  });

  text = globals.converter._dispatch('escapeSpecialCharsWithinTagAttributes.after', text, options, globals);
  return text;
});

/**
 * Handle github codeblocks prior to running HashHTML so that
 * HTML contained within the codeblock gets escaped properly
 * Example:
 * ```ruby
 *     def hello_world(x)
 *       puts "Hello, #{x}"
 *     end
 * ```
 */
showdown.subParser('githubCodeBlocks', function (text, options, globals) {
  'use strict';

  // early exit if option is not enabled
  if (!options.ghCodeBlocks) {
    return text;
  }

  text = globals.converter._dispatch('githubCodeBlocks.before', text, options, globals);

  text += '¨0';

  text = text.replace(/(?:^|\n)```(.*)\n([\s\S]*?)\n```/g, function (wholeMatch, language, codeblock) {
    var end = (options.omitExtraWLInCodeBlocks) ? '' : '\n';

    // First parse the github code block
    codeblock = showdown.subParser('encodeCode')(codeblock, options, globals);
    codeblock = showdown.subParser('detab')(codeblock, options, globals);
    codeblock = codeblock.replace(/^\n+/g, ''); // trim leading newlines
    codeblock = codeblock.replace(/\n+$/g, ''); // trim trailing whitespace

    codeblock = '<pre><code' + (language ? ' class="' + language + ' language-' + language + '"' : '') + '>' + codeblock + end + '</code></pre>';

    codeblock = showdown.subParser('hashBlock')(codeblock, options, globals);

    // Since GHCodeblocks can be false positives, we need to
    // store the primitive text and the parsed text in a global var,
    // and then return a token
    return '\n\n¨G' + (globals.ghCodeBlocks.push({text: wholeMatch, codeblock: codeblock}) - 1) + 'G\n\n';
  });

  // attacklab: strip sentinel
  text = text.replace(/¨0/, '');

  return globals.converter._dispatch('githubCodeBlocks.after', text, options, globals);
});

showdown.subParser('hashBlock', function (text, options, globals) {
  'use strict';
  text = globals.converter._dispatch('hashBlock.before', text, options, globals);
  text = text.replace(/(^\n+|\n+$)/g, '');
  text = '\n\n¨K' + (globals.gHtmlBlocks.push(text) - 1) + 'K\n\n';
  text = globals.converter._dispatch('hashBlock.after', text, options, globals);
  return text;
});

/**
 * Hash and escape <code> elements that should not be parsed as markdown
 */
showdown.subParser('hashCodeTags', function (text, options, globals) {
  'use strict';
  text = globals.converter._dispatch('hashCodeTags.before', text, options, globals);

  var repFunc = function (wholeMatch, match, left, right) {
    var codeblock = left + showdown.subParser('encodeCode')(match, options, globals) + right;
    return '¨C' + (globals.gHtmlSpans.push(codeblock) - 1) + 'C';
  };

  // Hash naked <code>
  text = showdown.helper.replaceRecursiveRegExp(text, repFunc, '<code\\b[^>]*>', '</code>', 'gim');

  text = globals.converter._dispatch('hashCodeTags.after', text, options, globals);
  return text;
});

showdown.subParser('hashElement', function (text, options, globals) {
  'use strict';

  return function (wholeMatch, m1) {
    var blockText = m1;

    // Undo double lines
    blockText = blockText.replace(/\n\n/g, '\n');
    blockText = blockText.replace(/^\n/, '');

    // strip trailing blank lines
    blockText = blockText.replace(/\n+$/g, '');

    // Replace the element text with a marker ("¨KxK" where x is its key)
    blockText = '\n\n¨K' + (globals.gHtmlBlocks.push(blockText) - 1) + 'K\n\n';

    return blockText;
  };
});

showdown.subParser('hashHTMLBlocks', function (text, options, globals) {
  'use strict';
  text = globals.converter._dispatch('hashHTMLBlocks.before', text, options, globals);

  var blockTags = [
        'pre',
        'div',
        'h1',
        'h2',
        'h3',
        'h4',
        'h5',
        'h6',
        'blockquote',
        'table',
        'dl',
        'ol',
        'ul',
        'script',
        'noscript',
        'form',
        'fieldset',
        'iframe',
        'math',
        'style',
        'section',
        'header',
        'footer',
        'nav',
        'article',
        'aside',
        'address',
        'audio',
        'canvas',
        'figure',
        'hgroup',
        'output',
        'video',
        'p'
      ],
      repFunc = function (wholeMatch, match, left, right) {
        var txt = wholeMatch;
        // check if this html element is marked as markdown
        // if so, it's contents should be parsed as markdown
        if (left.search(/\bmarkdown\b/) !== -1) {
          txt = left + globals.converter.makeHtml(match) + right;
        }
        return '\n\n¨K' + (globals.gHtmlBlocks.push(txt) - 1) + 'K\n\n';
      };

  for (var i = 0; i < blockTags.length; ++i) {

    var opTagPos,
        rgx1     = new RegExp('^ {0,3}<' + blockTags[i] + '\\b[^>]*>', 'im'),
        patLeft  = '<' + blockTags[i] + '\\b[^>]*>',
        patRight = '</' + blockTags[i] + '>';
    // 1. Look for the first position of the first opening HTML tag in the text
    while ((opTagPos = showdown.helper.regexIndexOf(text, rgx1)) !== -1) {
      //2. Split the text in that position
      var subTexts = showdown.helper.splitAtIndex(text, opTagPos),
      //3. Match recursively
          newSubText1 = showdown.helper.replaceRecursiveRegExp(subTexts[1], repFunc, patLeft, patRight, 'im');

      // prevent an infinite loop
      if (newSubText1 === subTexts[1]) {
        break;
      }
      text = subTexts[0].concat(newSubText1);
    }
  }
  // HR SPECIAL CASE
  text = text.replace(/(\n {0,3}(<(hr)\b([^<>])*?\/?>)[ \t]*(?=\n{2,}))/g,
    showdown.subParser('hashElement')(text, options, globals));

  // Special case for standalone HTML comments
  text = showdown.helper.replaceRecursiveRegExp(text, function (txt) {
    return '\n\n¨K' + (globals.gHtmlBlocks.push(txt) - 1) + 'K\n\n';
  }, '^ {0,3}<!--', '-->', 'gm');

  // PHP and ASP-style processor instructions (<?...?> and <%...%>)
  text = text.replace(/(?:\n\n)( {0,3}(?:<([?%])[^\r]*?\2>)[ \t]*(?=\n{2,}))/g,
    showdown.subParser('hashElement')(text, options, globals));

  text = globals.converter._dispatch('hashHTMLBlocks.after', text, options, globals);
  return text;
});

/**
 * Hash span elements that should not be parsed as markdown
 */
showdown.subParser('hashHTMLSpans', function (text, options, globals) {
  'use strict';
  text = globals.converter._dispatch('hashHTMLSpans.before', text, options, globals);

  function hashHTMLSpan (html) {
    return '¨C' + (globals.gHtmlSpans.push(html) - 1) + 'C';
  }

  // Hash Self Closing tags
  text = text.replace(/<[^>]+?\/>/gi, function (wm) {
    return hashHTMLSpan(wm);
  });

  // Hash tags without properties
  text = text.replace(/<([^>]+?)>[\s\S]*?<\/\1>/g, function (wm) {
    return hashHTMLSpan(wm);
  });

  // Hash tags with properties
  text = text.replace(/<([^>]+?)\s[^>]+?>[\s\S]*?<\/\1>/g, function (wm) {
    return hashHTMLSpan(wm);
  });

  // Hash self closing tags without />
  text = text.replace(/<[^>]+?>/gi, function (wm) {
    return hashHTMLSpan(wm);
  });

  /*showdown.helper.matchRecursiveRegExp(text, '<code\\b[^>]*>', '</code>', 'gi');*/

  text = globals.converter._dispatch('hashHTMLSpans.after', text, options, globals);
  return text;
});

/**
 * Unhash HTML spans
 */
showdown.subParser('unhashHTMLSpans', function (text, options, globals) {
  'use strict';
  text = globals.converter._dispatch('unhashHTMLSpans.before', text, options, globals);

  for (var i = 0; i < globals.gHtmlSpans.length; ++i) {
    var repText = globals.gHtmlSpans[i],
        // limiter to prevent infinite loop (assume 10 as limit for recurse)
        limit = 0;

    while (/¨C(\d+)C/.test(repText)) {
      var num = RegExp.$1;
      repText = repText.replace('¨C' + num + 'C', globals.gHtmlSpans[num]);
      if (limit === 10) {
        break;
      }
      ++limit;
    }
    text = text.replace('¨C' + i + 'C', repText);
  }

  text = globals.converter._dispatch('unhashHTMLSpans.after', text, options, globals);
  return text;
});

/**
 * Hash and escape <pre><code> elements that should not be parsed as markdown
 */
showdown.subParser('hashPreCodeTags', function (text, options, globals) {
  'use strict';
  text = globals.converter._dispatch('hashPreCodeTags.before', text, options, globals);

  var repFunc = function (wholeMatch, match, left, right) {
    // encode html entities
    var codeblock = left + showdown.subParser('encodeCode')(match, options, globals) + right;
    return '\n\n¨G' + (globals.ghCodeBlocks.push({text: wholeMatch, codeblock: codeblock}) - 1) + 'G\n\n';
  };

  // Hash <pre><code>
  text = showdown.helper.replaceRecursiveRegExp(text, repFunc, '^ {0,3}<pre\\b[^>]*>\\s*<code\\b[^>]*>', '^ {0,3}</code>\\s*</pre>', 'gim');

  text = globals.converter._dispatch('hashPreCodeTags.after', text, options, globals);
  return text;
});

showdown.subParser('headers', function (text, options, globals) {
  'use strict';

  text = globals.converter._dispatch('headers.before', text, options, globals);

  var headerLevelStart = (isNaN(parseInt(options.headerLevelStart))) ? 1 : parseInt(options.headerLevelStart),
      ghHeaderId = options.ghCompatibleHeaderId,

  // Set text-style headers:
  //	Header 1
  //	========
  //
  //	Header 2
  //	--------
  //
      setextRegexH1 = (options.smoothLivePreview) ? /^(.+)[ \t]*\n={2,}[ \t]*\n+/gm : /^(.+)[ \t]*\n=+[ \t]*\n+/gm,
      setextRegexH2 = (options.smoothLivePreview) ? /^(.+)[ \t]*\n-{2,}[ \t]*\n+/gm : /^(.+)[ \t]*\n-+[ \t]*\n+/gm;

  text = text.replace(setextRegexH1, function (wholeMatch, m1) {

    var spanGamut = showdown.subParser('spanGamut')(m1, options, globals),
        hID = (options.noHeaderId) ? '' : ' id="' + headerId(m1) + '"',
        hLevel = headerLevelStart,
        hashBlock = '<h' + hLevel + hID + '>' + spanGamut + '</h' + hLevel + '>';
    return showdown.subParser('hashBlock')(hashBlock, options, globals);
  });

  text = text.replace(setextRegexH2, function (matchFound, m1) {
    var spanGamut = showdown.subParser('spanGamut')(m1, options, globals),
        hID = (options.noHeaderId) ? '' : ' id="' + headerId(m1) + '"',
        hLevel = headerLevelStart + 1,
        hashBlock = '<h' + hLevel + hID + '>' + spanGamut + '</h' + hLevel + '>';
    return showdown.subParser('hashBlock')(hashBlock, options, globals);
  });

  // atx-style headers:
  //  # Header 1
  //  ## Header 2
  //  ## Header 2 with closing hashes ##
  //  ...
  //  ###### Header 6
  //
  var atxStyle = (options.requireSpaceBeforeHeadingText) ? /^(#{1,6})[ \t]+(.+?)[ \t]*#*\n+/gm : /^(#{1,6})[ \t]*(.+?)[ \t]*#*\n+/gm;

  text = text.replace(atxStyle, function (wholeMatch, m1, m2) {
    var hText = m2;
    if (options.customizedHeaderId) {
      hText = m2.replace(/\s?\{([^{]+?)}\s*$/, '');
    }

    var span = showdown.subParser('spanGamut')(hText, options, globals),
        hID = (options.noHeaderId) ? '' : ' id="' + headerId(m2) + '"',
        hLevel = headerLevelStart - 1 + m1.length,
        header = '<h' + hLevel + hID + '>' + span + '</h' + hLevel + '>';

    return showdown.subParser('hashBlock')(header, options, globals);
  });

  function headerId (m) {
    var title;

    // It is separate from other options to allow combining prefix and customized
    if (options.customizedHeaderId) {
      var match = m.match(/\{([^{]+?)}\s*$/);
      if (match && match[1]) {
        m = match[1];
      }
    }

    // Prefix id to prevent causing inadvertent pre-existing style matches.
    if (showdown.helper.isString(options.prefixHeaderId)) {
      title = options.prefixHeaderId + m;
    } else if (options.prefixHeaderId === true) {
      title = 'section ' + m;
    } else {
      title = m;
    }

    if (ghHeaderId) {
      title = title
        .replace(/ /g, '-')
        // replace previously escaped chars (&, ¨ and $)
        .replace(/&amp;/g, '')
        .replace(/¨T/g, '')
        .replace(/¨D/g, '')
        // replace rest of the chars (&~$ are repeated as they might have been escaped)
        // borrowed from github's redcarpet (some they should produce similar results)
        .replace(/[&+$,\/:;=?@"#{}|^¨~\[\]`\\*)(%.!'<>]/g, '')
        .toLowerCase();
    } else {
      title = title
        .replace(/[^\w]/g, '')
        .toLowerCase();
    }

    if (globals.hashLinkCounts[title]) {
      title = title + '-' + (globals.hashLinkCounts[title]++);
    } else {
      globals.hashLinkCounts[title] = 1;
    }
    return title;
  }

  text = globals.converter._dispatch('headers.after', text, options, globals);
  return text;
});

/**
 * Turn Markdown link shortcuts into XHTML <a> tags.
 */
showdown.subParser('horizontalRule', function (text, options, globals) {
  'use strict';
  text = globals.converter._dispatch('horizontalRule.before', text, options, globals);

  var key = showdown.subParser('hashBlock')('<hr />', options, globals);
  text = text.replace(/^ {0,2}( ?-){3,}[ \t]*$/gm, key);
  text = text.replace(/^ {0,2}( ?\*){3,}[ \t]*$/gm, key);
  text = text.replace(/^ {0,2}( ?_){3,}[ \t]*$/gm, key);

  text = globals.converter._dispatch('horizontalRule.after', text, options, globals);
  return text;
});

/**
 * Turn Markdown image shortcuts into <img> tags.
 */
showdown.subParser('images', function (text, options, globals) {
  'use strict';

  text = globals.converter._dispatch('images.before', text, options, globals);

  var inlineRegExp      = /!\[([^\]]*?)][ \t]*()\([ \t]?<?([\S]+?(?:\([\S]*?\)[\S]*?)?)>?(?: =([*\d]+[A-Za-z%]{0,4})x([*\d]+[A-Za-z%]{0,4}))?[ \t]*(?:(["'])([^"]*?)\6)?[ \t]?\)/g,
      crazyRegExp       = /!\[([^\]]*?)][ \t]*()\([ \t]?<([^>]*)>(?: =([*\d]+[A-Za-z%]{0,4})x([*\d]+[A-Za-z%]{0,4}))?[ \t]*(?:(?:(["'])([^"]*?)\6))?[ \t]?\)/g,
      referenceRegExp   = /!\[([^\]]*?)] ?(?:\n *)?\[(.*?)]()()()()()/g,
      refShortcutRegExp = /!\[([^\[\]]+)]()()()()()/g;

  function writeImageTag (wholeMatch, altText, linkId, url, width, height, m5, title) {

    var gUrls   = globals.gUrls,
        gTitles = globals.gTitles,
        gDims   = globals.gDimensions;

    linkId = linkId.toLowerCase();

    if (!title) {
      title = '';
    }
    // Special case for explicit empty url
    if (wholeMatch.search(/\(<?\s*>? ?(['"].*['"])?\)$/m) > -1) {
      url = '';

    } else if (url === '' || url === null) {
      if (linkId === '' || linkId === null) {
        // lower-case and turn embedded newlines into spaces
        linkId = altText.toLowerCase().replace(/ ?\n/g, ' ');
      }
      url = '#' + linkId;

      if (!showdown.helper.isUndefined(gUrls[linkId])) {
        url = gUrls[linkId];
        if (!showdown.helper.isUndefined(gTitles[linkId])) {
          title = gTitles[linkId];
        }
        if (!showdown.helper.isUndefined(gDims[linkId])) {
          width = gDims[linkId].width;
          height = gDims[linkId].height;
        }
      } else {
        return wholeMatch;
      }
    }

    altText = altText
      .replace(/"/g, '&quot;')
    //altText = showdown.helper.escapeCharacters(altText, '*_', false);
      .replace(showdown.helper.regexes.asteriskAndDash, showdown.helper.escapeCharactersCallback);
    //url = showdown.helper.escapeCharacters(url, '*_', false);
    url = url.replace(showdown.helper.regexes.asteriskAndDash, showdown.helper.escapeCharactersCallback);
    var result = '<img src="' + url + '" alt="' + altText + '"';

    if (title) {
      title = title
        .replace(/"/g, '&quot;')
      //title = showdown.helper.escapeCharacters(title, '*_', false);
        .replace(showdown.helper.regexes.asteriskAndDash, showdown.helper.escapeCharactersCallback);
      result += ' title="' + title + '"';
    }

    if (width && height) {
      width  = (width === '*') ? 'auto' : width;
      height = (height === '*') ? 'auto' : height;

      result += ' width="' + width + '"';
      result += ' height="' + height + '"';
    }

    result += ' />';

    return result;
  }

  // First, handle reference-style labeled images: ![alt text][id]
  text = text.replace(referenceRegExp, writeImageTag);

  // Next, handle inline images:  ![alt text](url =<width>x<height> "optional title")
  // cases with crazy urls like ./image/cat1).png
  text = text.replace(crazyRegExp, writeImageTag);

  // normal cases
  text = text.replace(inlineRegExp, writeImageTag);

  // handle reference-style shortcuts: |[img text]
  text = text.replace(refShortcutRegExp, writeImageTag);

  text = globals.converter._dispatch('images.after', text, options, globals);
  return text;
});

showdown.subParser('italicsAndBold', function (text, options, globals) {
  'use strict';

  text = globals.converter._dispatch('italicsAndBold.before', text, options, globals);

  // it's faster to have 3 separate regexes for each case than have just one
  // because of backtracing, in some cases, it could lead to an exponential effect
  // called "catastrophic backtrace". Ominous!

  function parseInside (txt, left, right) {
    if (options.simplifiedAutoLink) {
      txt = showdown.subParser('simplifiedAutoLinks')(txt, options, globals);
    }
    return left + txt + right;
  }

  // Parse underscores
  if (options.literalMidWordUnderscores) {
    text = text.replace(/\b___(\S[\s\S]*)___\b/g, function (wm, txt) {
      return parseInside (txt, '<strong><em>', '</em></strong>');
    });
    text = text.replace(/\b__(\S[\s\S]*)__\b/g, function (wm, txt) {
      return parseInside (txt, '<strong>', '</strong>');
    });
    text = text.replace(/\b_(\S[\s\S]*?)_\b/g, function (wm, txt) {
      return parseInside (txt, '<em>', '</em>');
    });
  } else {
    text = text.replace(/___(\S[\s\S]*?)___/g, function (wm, m) {
      return (/\S$/.test(m)) ? parseInside (m, '<strong><em>', '</em></strong>') : wm;
    });
    text = text.replace(/__(\S[\s\S]*?)__/g, function (wm, m) {
      return (/\S$/.test(m)) ? parseInside (m, '<strong>', '</strong>') : wm;
    });
    text = text.replace(/_([^\s_][\s\S]*?)_/g, function (wm, m) {
      // !/^_[^_]/.test(m) - test if it doesn't start with __ (since it seems redundant, we removed it)
      return (/\S$/.test(m)) ? parseInside (m, '<em>', '</em>') : wm;
    });
  }

  // Now parse asterisks
  if (options.literalMidWordAsterisks) {
    text = text.trim().replace(/(?:^| +)\*{3}(\S[\s\S]*?)\*{3}(?: +|$)/g, function (wm, txt) {
      return parseInside (txt, ' <strong><em>', '</em></strong> ');
    });
    text = text.trim().replace(/(?:^| +)\*{2}(\S[\s\S]*?)\*{2}(?: +|$)/g, function (wm, txt) {
      return parseInside (txt, ' <strong>', '</strong> ');
    });
    text = text.trim().replace(/(?:^| +)\*{1}(\S[\s\S]*?)\*{1}(?: +|$)/g, function (wm, txt) {
      return parseInside (txt, ' <em>', '</em>' + (wm.slice(-1) === ' ' ? ' ' : ''));
    });
  } else {
    text = text.replace(/\*\*\*(\S[\s\S]*?)\*\*\*/g, function (wm, m) {
      return (/\S$/.test(m)) ? parseInside (m, '<strong><em>', '</em></strong>') : wm;
    });
    text = text.replace(/\*\*(\S[\s\S]*?)\*\*/g, function (wm, m) {
      return (/\S$/.test(m)) ? parseInside (m, '<strong>', '</strong>') : wm;
    });
    text = text.replace(/\*([^\s*][\s\S]*?)\*/g, function (wm, m) {
      // !/^\*[^*]/.test(m) - test if it doesn't start with ** (since it seems redundant, we removed it)
      return (/\S$/.test(m)) ? parseInside (m, '<em>', '</em>') : wm;
    });
  }


  text = globals.converter._dispatch('italicsAndBold.after', text, options, globals);
  return text;
});

/**
 * Form HTML ordered (numbered) and unordered (bulleted) lists.
 */
showdown.subParser('lists', function (text, options, globals) {
  'use strict';
  text = globals.converter._dispatch('lists.before', text, options, globals);

  /**
   * Process the contents of a single ordered or unordered list, splitting it
   * into individual list items.
   * @param {string} listStr
   * @param {boolean} trimTrailing
   * @returns {string}
   */
  function processListItems (listStr, trimTrailing) {
    // The $g_list_level global keeps track of when we're inside a list.
    // Each time we enter a list, we increment it; when we leave a list,
    // we decrement. If it's zero, we're not in a list anymore.
    //
    // We do this because when we're not inside a list, we want to treat
    // something like this:
    //
    //    I recommend upgrading to version
    //    8. Oops, now this line is treated
    //    as a sub-list.
    //
    // As a single paragraph, despite the fact that the second line starts
    // with a digit-period-space sequence.
    //
    // Whereas when we're inside a list (or sub-list), that line will be
    // treated as the start of a sub-list. What a kludge, huh? This is
    // an aspect of Markdown's syntax that's hard to parse perfectly
    // without resorting to mind-reading. Perhaps the solution is to
    // change the syntax rules such that sub-lists must start with a
    // starting cardinal number; e.g. "1." or "a.".
    globals.gListLevel++;

    // trim trailing blank lines:
    listStr = listStr.replace(/\n{2,}$/, '\n');

    // attacklab: add sentinel to emulate \z
    listStr += '¨0';

    var rgx = /(\n)?(^ {0,3})([*+-]|\d+[.])[ \t]+((\[(x|X| )?])?[ \t]*[^\r]+?(\n{1,2}))(?=\n*(¨0| {0,3}([*+-]|\d+[.])[ \t]+))/gm,
        isParagraphed = (/\n[ \t]*\n(?!¨0)/.test(listStr));

    // Since version 1.5, nesting sublists requires 4 spaces (or 1 tab) indentation,
    // which is a syntax breaking change
    // activating this option reverts to old behavior
    if (options.disableForced4SpacesIndentedSublists) {
      rgx = /(\n)?(^ {0,3})([*+-]|\d+[.])[ \t]+((\[(x|X| )?])?[ \t]*[^\r]+?(\n{1,2}))(?=\n*(¨0|\2([*+-]|\d+[.])[ \t]+))/gm;
    }

    listStr = listStr.replace(rgx, function (wholeMatch, m1, m2, m3, m4, taskbtn, checked) {
      checked = (checked && checked.trim() !== '');

      var item = showdown.subParser('outdent')(m4, options, globals),
          bulletStyle = '';

      // Support for github tasklists
      if (taskbtn && options.tasklists) {
        bulletStyle = ' class="task-list-item" style="list-style-type: none;"';
        item = item.replace(/^[ \t]*\[(x|X| )?]/m, function () {
          var otp = '<input type="checkbox" disabled style="margin: 0px 0.35em 0.25em -1.6em; vertical-align: middle;"';
          if (checked) {
            otp += ' checked';
          }
          otp += '>';
          return otp;
        });
      }

      // ISSUE #312
      // This input: - - - a
      // causes trouble to the parser, since it interprets it as:
      // <ul><li><li><li>a</li></li></li></ul>
      // instead of:
      // <ul><li>- - a</li></ul>
      // So, to prevent it, we will put a marker (¨A)in the beginning of the line
      // Kind of hackish/monkey patching, but seems more effective than overcomplicating the list parser
      item = item.replace(/^([-*+]|\d\.)[ \t]+[\S\n ]*/g, function (wm2) {
        return '¨A' + wm2;
      });

      // m1 - Leading line or
      // Has a double return (multi paragraph) or
      // Has sublist
      if (m1 || (item.search(/\n{2,}/) > -1)) {
        item = showdown.subParser('githubCodeBlocks')(item, options, globals);
        item = showdown.subParser('blockGamut')(item, options, globals);
      } else {
        // Recursion for sub-lists:
        item = showdown.subParser('lists')(item, options, globals);
        item = item.replace(/\n$/, ''); // chomp(item)
        item = showdown.subParser('hashHTMLBlocks')(item, options, globals);
        // Colapse double linebreaks
        item = item.replace(/\n\n+/g, '\n\n');
        // replace double linebreaks with a placeholder
        item = item.replace(/\n\n/g, '¨B');
        if (isParagraphed) {
          item = showdown.subParser('paragraphs')(item, options, globals);
        } else {
          item = showdown.subParser('spanGamut')(item, options, globals);
        }
        item = item.replace(/¨B/g, '\n\n');
      }

      // now we need to remove the marker (¨A)
      item = item.replace('¨A', '');
      // we can finally wrap the line in list item tags
      item =  '<li' + bulletStyle + '>' + item + '</li>\n';

      return item;
    });

    // attacklab: strip sentinel
    listStr = listStr.replace(/¨0/g, '');

    globals.gListLevel--;

    if (trimTrailing) {
      listStr = listStr.replace(/\s+$/, '');
    }

    return listStr;
  }

  /**
   * Check and parse consecutive lists (better fix for issue #142)
   * @param {string} list
   * @param {string} listType
   * @param {boolean} trimTrailing
   * @returns {string}
   */
  function parseConsecutiveLists (list, listType, trimTrailing) {
    // check if we caught 2 or more consecutive lists by mistake
    // we use the counterRgx, meaning if listType is UL we look for OL and vice versa
    var olRgx = (options.disableForced4SpacesIndentedSublists) ? /^ ?\d+\.[ \t]/gm : /^ {0,3}\d+\.[ \t]/gm,
        ulRgx = (options.disableForced4SpacesIndentedSublists) ? /^ ?[*+-][ \t]/gm : /^ {0,3}[*+-][ \t]/gm,
        counterRxg = (listType === 'ul') ? olRgx : ulRgx,
        result = '';

    if (list.search(counterRxg) !== -1) {
      (function parseCL (txt) {
        var pos = txt.search(counterRxg);
        if (pos !== -1) {
          // slice
          result += '\n<' + listType + '>\n' + processListItems(txt.slice(0, pos), !!trimTrailing) + '</' + listType + '>\n';

          // invert counterType and listType
          listType = (listType === 'ul') ? 'ol' : 'ul';
          counterRxg = (listType === 'ul') ? olRgx : ulRgx;

          //recurse
          parseCL(txt.slice(pos));
        } else {
          result += '\n<' + listType + '>\n' + processListItems(txt, !!trimTrailing) + '</' + listType + '>\n';
        }
      })(list);
    } else {
      result = '\n<' + listType + '>\n' + processListItems(list, !!trimTrailing) + '</' + listType + '>\n';
    }

    return result;
  }

  // add sentinel to hack around khtml/safari bug:
  // http://bugs.webkit.org/show_bug.cgi?id=11231
  text += '¨0';

  if (globals.gListLevel) {
    text = text.replace(/^(( {0,3}([*+-]|\d+[.])[ \t]+)[^\r]+?(¨0|\n{2,}(?=\S)(?![ \t]*(?:[*+-]|\d+[.])[ \t]+)))/gm,
      function (wholeMatch, list, m2) {
        var listType = (m2.search(/[*+-]/g) > -1) ? 'ul' : 'ol';
        return parseConsecutiveLists(list, listType, true);
      }
    );
  } else {
    text = text.replace(/(\n\n|^\n?)(( {0,3}([*+-]|\d+[.])[ \t]+)[^\r]+?(¨0|\n{2,}(?=\S)(?![ \t]*(?:[*+-]|\d+[.])[ \t]+)))/gm,
      function (wholeMatch, m1, list, m3) {
        var listType = (m3.search(/[*+-]/g) > -1) ? 'ul' : 'ol';
        return parseConsecutiveLists(list, listType, false);
      }
    );
  }

  // strip sentinel
  text = text.replace(/¨0/, '');
  text = globals.converter._dispatch('lists.after', text, options, globals);
  return text;
});

/**
 * Remove one level of line-leading tabs or spaces
 */
showdown.subParser('outdent', function (text, options, globals) {
  'use strict';
  text = globals.converter._dispatch('outdent.before', text, options, globals);

  // attacklab: hack around Konqueror 3.5.4 bug:
  // "----------bug".replace(/^-/g,"") == "bug"
  text = text.replace(/^(\t|[ ]{1,4})/gm, '¨0'); // attacklab: g_tab_width

  // attacklab: clean up hack
  text = text.replace(/¨0/g, '');

  text = globals.converter._dispatch('outdent.after', text, options, globals);
  return text;
});

/**
 *
 */
showdown.subParser('paragraphs', function (text, options, globals) {
  'use strict';

  text = globals.converter._dispatch('paragraphs.before', text, options, globals);
  // Strip leading and trailing lines:
  text = text.replace(/^\n+/g, '');
  text = text.replace(/\n+$/g, '');

  var grafs = text.split(/\n{2,}/g),
      grafsOut = [],
      end = grafs.length; // Wrap <p> tags

  for (var i = 0; i < end; i++) {
    var str = grafs[i];
    // if this is an HTML marker, copy it
    if (str.search(/¨(K|G)(\d+)\1/g) >= 0) {
      grafsOut.push(str);

    // test for presence of characters to prevent empty lines being parsed
    // as paragraphs (resulting in undesired extra empty paragraphs)
    } else if (str.search(/\S/) >= 0) {
      str = showdown.subParser('spanGamut')(str, options, globals);
      str = str.replace(/^([ \t]*)/g, '<p>');
      str += '</p>';
      grafsOut.push(str);
    }
  }

  /** Unhashify HTML blocks */
  end = grafsOut.length;
  for (i = 0; i < end; i++) {
    var blockText = '',
        grafsOutIt = grafsOut[i],
        codeFlag = false;
    // if this is a marker for an html block...
    // use RegExp.test instead of string.search because of QML bug
    while (/¨(K|G)(\d+)\1/.test(grafsOutIt)) {
      var delim = RegExp.$1,
          num   = RegExp.$2;

      if (delim === 'K') {
        blockText = globals.gHtmlBlocks[num];
      } else {
        // we need to check if ghBlock is a false positive
        if (codeFlag) {
          // use encoded version of all text
          blockText = showdown.subParser('encodeCode')(globals.ghCodeBlocks[num].text, options, globals);
        } else {
          blockText = globals.ghCodeBlocks[num].codeblock;
        }
      }
      blockText = blockText.replace(/\$/g, '$$$$'); // Escape any dollar signs

      grafsOutIt = grafsOutIt.replace(/(\n\n)?¨(K|G)\d+\2(\n\n)?/, blockText);
      // Check if grafsOutIt is a pre->code
      if (/^<pre\b[^>]*>\s*<code\b[^>]*>/.test(grafsOutIt)) {
        codeFlag = true;
      }
    }
    grafsOut[i] = grafsOutIt;
  }
  text = grafsOut.join('\n');
  // Strip leading and trailing lines:
  text = text.replace(/^\n+/g, '');
  text = text.replace(/\n+$/g, '');
  return globals.converter._dispatch('paragraphs.after', text, options, globals);
});

/**
 * Run extension
 */
showdown.subParser('runExtension', function (ext, text, options, globals) {
  'use strict';

  if (ext.filter) {
    text = ext.filter(text, globals.converter, options);

  } else if (ext.regex) {
    // TODO remove this when old extension loading mechanism is deprecated
    var re = ext.regex;
    if (!(re instanceof RegExp)) {
      re = new RegExp(re, 'g');
    }
    text = text.replace(re, ext.replace);
  }

  return text;
});

/**
 * These are all the transformations that occur *within* block-level
 * tags like paragraphs, headers, and list items.
 */
showdown.subParser('spanGamut', function (text, options, globals) {
  'use strict';

  text = globals.converter._dispatch('spanGamut.before', text, options, globals);
  text = showdown.subParser('codeSpans')(text, options, globals);
  text = showdown.subParser('escapeSpecialCharsWithinTagAttributes')(text, options, globals);
  text = showdown.subParser('encodeBackslashEscapes')(text, options, globals);

  // Process anchor and image tags. Images must come first,
  // because ![foo][f] looks like an anchor.
  text = showdown.subParser('images')(text, options, globals);
  text = showdown.subParser('anchors')(text, options, globals);

  // Make links out of things like `<http://example.com/>`
  // Must come after anchors, because you can use < and >
  // delimiters in inline links like [this](<url>).
  text = showdown.subParser('autoLinks')(text, options, globals);
  text = showdown.subParser('italicsAndBold')(text, options, globals);
  text = showdown.subParser('strikethrough')(text, options, globals);
  text = showdown.subParser('simplifiedAutoLinks')(text, options, globals);

  // we need to hash HTML tags inside spans
  text = showdown.subParser('hashHTMLSpans')(text, options, globals);

  // now we encode amps and angles
  text = showdown.subParser('encodeAmpsAndAngles')(text, options, globals);

  // Do hard breaks
  if (options.simpleLineBreaks) {
    // GFM style hard breaks
    text = text.replace(/\n/g, '<br />\n');
  } else {
    // Vanilla hard breaks
    text = text.replace(/  +\n/g, '<br />\n');
  }

  text = globals.converter._dispatch('spanGamut.after', text, options, globals);
  return text;
});

showdown.subParser('strikethrough', function (text, options, globals) {
  'use strict';

  function parseInside (txt) {
    if (options.simplifiedAutoLink) {
      txt = showdown.subParser('simplifiedAutoLinks')(txt, options, globals);
    }
    return '<del>' + txt + '</del>';
  }

  if (options.strikethrough) {
    text = globals.converter._dispatch('strikethrough.before', text, options, globals);
    text = text.replace(/(?:~){2}([\s\S]+?)(?:~){2}/g, function (wm, txt) { return parseInside(txt); });
    text = globals.converter._dispatch('strikethrough.after', text, options, globals);
  }

  return text;
});

/**
 * Strips link definitions from text, stores the URLs and titles in
 * hash references.
 * Link defs are in the form: ^[id]: url "optional title"
 */
showdown.subParser('stripLinkDefinitions', function (text, options, globals) {
  'use strict';

  var regex = /^ {0,3}\[(.+)]:[ \t]*\n?[ \t]*<?([^>\s]+)>?(?: =([*\d]+[A-Za-z%]{0,4})x([*\d]+[A-Za-z%]{0,4}))?[ \t]*\n?[ \t]*(?:(\n*)["|'(](.+?)["|')][ \t]*)?(?:\n+|(?=¨0))/gm;

  // attacklab: sentinel workarounds for lack of \A and \Z, safari\khtml bug
  text += '¨0';

  text = text.replace(regex, function (wholeMatch, linkId, url, width, height, blankLines, title) {
    linkId = linkId.toLowerCase();
    globals.gUrls[linkId] = showdown.subParser('encodeAmpsAndAngles')(url, options, globals);  // Link IDs are case-insensitive

    if (blankLines) {
      // Oops, found blank lines, so it's not a title.
      // Put back the parenthetical statement we stole.
      return blankLines + title;

    } else {
      if (title) {
        globals.gTitles[linkId] = title.replace(/"|'/g, '&quot;');
      }
      if (options.parseImgDimensions && width && height) {
        globals.gDimensions[linkId] = {
          width:  width,
          height: height
        };
      }
    }
    // Completely remove the definition from the text
    return '';
  });

  // attacklab: strip sentinel
  text = text.replace(/¨0/, '');

  return text;
});

showdown.subParser('tables', function (text, options, globals) {
  'use strict';

  if (!options.tables) {
    return text;
  }

  var tableRgx = /^ {0,3}\|?.+\|.+\n[ \t]{0,3}\|?[ \t]*:?[ \t]*(?:-|=){2,}[ \t]*:?[ \t]*\|[ \t]*:?[ \t]*(?:-|=){2,}[\s\S]+?(?:\n\n|¨0)/gm;

  function parseStyles (sLine) {
    if (/^:[ \t]*--*$/.test(sLine)) {
      return ' style="text-align:left;"';
    } else if (/^--*[ \t]*:[ \t]*$/.test(sLine)) {
      return ' style="text-align:right;"';
    } else if (/^:[ \t]*--*[ \t]*:$/.test(sLine)) {
      return ' style="text-align:center;"';
    } else {
      return '';
    }
  }

  function parseHeaders (header, style) {
    var id = '';
    header = header.trim();
    if (options.tableHeaderId) {
      id = ' id="' + header.replace(/ /g, '_').toLowerCase() + '"';
    }
    header = showdown.subParser('spanGamut')(header, options, globals);

    return '<th' + id + style + '>' + header + '</th>\n';
  }

  function parseCells (cell, style) {
    var subText = showdown.subParser('spanGamut')(cell, options, globals);
    return '<td' + style + '>' + subText + '</td>\n';
  }

  function buildTable (headers, cells) {
    var tb = '<table>\n<thead>\n<tr>\n',
        tblLgn = headers.length;

    for (var i = 0; i < tblLgn; ++i) {
      tb += headers[i];
    }
    tb += '</tr>\n</thead>\n<tbody>\n';

    for (i = 0; i < cells.length; ++i) {
      tb += '<tr>\n';
      for (var ii = 0; ii < tblLgn; ++ii) {
        tb += cells[i][ii];
      }
      tb += '</tr>\n';
    }
    tb += '</tbody>\n</table>\n';
    return tb;
  }

  text = globals.converter._dispatch('tables.before', text, options, globals);

  // find escaped pipe characters
  text = text.replace(/\\(\|)/g, showdown.helper.escapeCharactersCallback);

  // parse tables
  text = text.replace(tableRgx, function (rawTable) {

    var i, tableLines = rawTable.split('\n');

    // strip wrong first and last column if wrapped tables are used
    for (i = 0; i < tableLines.length; ++i) {
      if (/^ {0,3}\|/.test(tableLines[i])) {
        tableLines[i] = tableLines[i].replace(/^ {0,3}\|/, '');
      }
      if (/\|[ \t]*$/.test(tableLines[i])) {
        tableLines[i] = tableLines[i].replace(/\|[ \t]*$/, '');
      }
    }

    var rawHeaders = tableLines[0].split('|').map(function (s) { return s.trim();}),
        rawStyles = tableLines[1].split('|').map(function (s) { return s.trim();}),
        rawCells = [],
        headers = [],
        styles = [],
        cells = [];

    tableLines.shift();
    tableLines.shift();

    for (i = 0; i < tableLines.length; ++i) {
      if (tableLines[i].trim() === '') {
        continue;
      }
      rawCells.push(
        tableLines[i]
          .split('|')
          .map(function (s) {
            return s.trim();
          })
      );
    }

    if (rawHeaders.length < rawStyles.length) {
      return rawTable;
    }

    for (i = 0; i < rawStyles.length; ++i) {
      styles.push(parseStyles(rawStyles[i]));
    }

    for (i = 0; i < rawHeaders.length; ++i) {
      if (showdown.helper.isUndefined(styles[i])) {
        styles[i] = '';
      }
      headers.push(parseHeaders(rawHeaders[i], styles[i]));
    }

    for (i = 0; i < rawCells.length; ++i) {
      var row = [];
      for (var ii = 0; ii < headers.length; ++ii) {
        if (showdown.helper.isUndefined(rawCells[i][ii])) {

        }
        row.push(parseCells(rawCells[i][ii], styles[ii]));
      }
      cells.push(row);
    }

    return buildTable(headers, cells);
  });

  text = globals.converter._dispatch('tables.after', text, options, globals);

  return text;
});

/**
 * Swap back in all the special characters we've hidden.
 */
showdown.subParser('unescapeSpecialChars', function (text, options, globals) {
  'use strict';
  text = globals.converter._dispatch('unescapeSpecialChars.before', text, options, globals);

  text = text.replace(/¨E(\d+)E/g, function (wholeMatch, m1) {
    var charCodeToReplace = parseInt(m1);
    return String.fromCharCode(charCodeToReplace);
  });

  text = globals.converter._dispatch('unescapeSpecialChars.after', text, options, globals);
  return text;
});

var root = this;

// CommonJS/nodeJS Loader
if (typeof module !== 'undefined' && module.exports) {
  module.exports = showdown;

// AMD Loader
} else if (typeof define === 'function' && define.amd) {
  define(function () {
    'use strict';
    return showdown;
  });

// Regular Browser loader
} else {
  root.showdown = showdown;
}
}).call(this);

//# sourceMappingURL=showdown.js.map

/*! showdown-twitter 26-11-2016 */(function (extension) {
  'use strict';

  if (typeof showdown !== 'undefined') {
    extension(showdown);
  } else if (typeof define === 'function' && define.amd) {
    define(['showdown'], extension);
  } else if (typeof exports === 'object') {
    module.exports = extension(require('showdown'));
  } else {
    throw Error('Could not find showdown library');
  }

}(function (showdown) {
  'use strict';

  showdown.extension('twitter', function () {
    return [
      {
        type:    'lang',
        regex:   '\\B(\\\\)?@([\\S]+)\\b',
        replace: function (match, leadingSlash, username) {
          if (leadingSlash === '\\') {
            return match;
          } else {
            return '<a href="http://twitter.com/' + username + '">@' + username + '</a>';
          }
        }
      },
      {
        type:    'lang',
        regex:   '\\B(\\\\)?#([\\S]+)\\b',
        replace: function (match, leadingSlash, tag) {
          if (leadingSlash === '\\') {
            return match;
          } else {
            return '<a href="http://twitter.com/search/%23' + tag + '">#' + tag + '</a>';
          }
        }
      },
      {
        type:    'lang',
        regex:   '\\\\@',
        replace: '@'
      }
    ];
  });
}));

//# sourceMappingURL=showdown-twitter.js.map
/*! showdown-prettify 06-01-2016 */
(function (extension) {
  'use strict';

  if (typeof showdown !== 'undefined') {
    extension(showdown);
  } else if (typeof define === 'function' && define.amd) {
    define(['showdown'], extension);
  } else if (typeof exports === 'object') {
    module.exports = extension(require('showdown'));
  } else {
    throw Error('Could not find showdown library');
  }

}(function (showdown) {
  'use strict';
  showdown.extension('prettify', function () {
    return [{
      type:   'output',
      filter: function (source) {
        return source.replace(/(<pre[^>]*>)?[\n\s]?<code([^>]*)>/gi, function (match, pre, codeClass) {
          if (pre) {
            return '<pre class="prettyprint linenums"><code' + codeClass + '>';
          } else {
            return ' <code class="prettyprint">';
          }
        });
      }
    }];
  });
}));

//# sourceMappingURL=showdown-prettify.js.map
"use strict";!function(){function e(){window.removeEventListener("load",e);var t=window.hg.util.debounce(c,300);window.addEventListener("resize",t,!1)}function t(e){Object.keys(R.transientJobs).forEach(function(t){var i=window.hg[R.transientJobs[t].constructorName].config;i.isRecurring&&R.transientJobs[t].toggleRecurrence(e,!0,i.avgDelay,i.delayDeviationRange)})}function i(e,t,i,n,o){return new window.hg[R.transientJobs[e].constructorName](t,i,n,o)}function n(e,t,n,o,r){function a(){R.transientJobs[t].jobs[n.index].splice(R.transientJobs[t].jobs[n.index].indexOf(l),1)}var l;return!n.isPostOpen||R.transientJobs[t].canRunWithOpenGrid?(e=e||i.bind(R,t),l=e(n,o,a,r),R.transientJobs[t].jobs[n.index].push(l),window.hg.animator.startJob(l),l):(console.log("Cannot create a "+R.transientJobs[t].constructorName+" while the Grid is expanded"),null)}function o(e,t){return R.transientJobs[e].create(t,d(t))}function r(e,t,i,n,o){function r(){var i=Math.random()*l+a;R.transientJobs[e].createRandom(t),s[t.index]=setTimeout(r,i)}var a,l,s;s=R.transientJobs[e].timeouts,l=n+.5*o-(a=(a=n-.5*o)>0?a:1),s[t.index]&&(clearTimeout(s[t.index]),s[t.index]=null),i&&(s[t.index]=setTimeout(r,n))}function a(e,t){var i,n;i=R.persistentJobs[e],n=new window.hg[i.constructorName](t),i.jobs[t.index].push(n),i.start(t,i.jobs[t.index].length-1)}function l(e,t,i){void 0!==i?window.hg.animator.startJob(R.persistentJobs[e].jobs[t.index][i]):R.persistentJobs[e].jobs[t.index].forEach(window.hg.animator.startJob)}function s(e,t,i){void 0!==i?R.persistentJobs[e].jobs[t.index][i].cancel():R.persistentJobs[e].jobs[t.index].forEach(function(e){e.cancel()})}function c(){L.grids.forEach(f)}function d(e){var t=parseInt(Math.random()*e.originalTiles.length);return e.originalTiles[t]}function u(e){var t=parseInt(Math.random()*e.contentTiles.length);return e.contentTiles[t]}function g(e,t,i){return window.hg.LineJob.createRandomLineJob(e,i)}function h(e,t,i){function n(){o.lineJobs.forEach(function(t){R.transientJobs.LineJob.jobs[e.index].splice(R.transientJobs.LineJob.jobs[e.index].indexOf(t),1)}),i()}var o=new window.hg.LinesRadiateJob(e,t,n);return o.lineJobs.forEach(function(t){R.transientJobs.LineJob.jobs[e.index].push(t)}),o}function p(e){return e.isPostOpen?null:R.transientJobs.OpenPostJob.create(e,u(e))}function m(e){return e.isPostOpen?R.transientJobs.ClosePostJob.create(e,e.expandedTile):null}function b(e,i,n){var o,r,a,l;return r=L.grids.length,function(e){Object.keys(R.persistentJobs).forEach(function(t){R.persistentJobs[t].jobs[e]=[]}),Object.keys(R.transientJobs).forEach(function(t){R.transientJobs[t].jobs[e]=[]})}(r),o=new window.hg.Grid(r,e,i,n),L.grids.push(o),a=o.annotations,L.annotations.push(a),l=new window.hg.Input(o),L.inputs.push(l),window.hg.animator.startJob(o),R.persistentJobs.ColorResetJob.create(o),R.persistentJobs.DisplacementResetJob.create(o),window.hg.animator.startJob(a),R.persistentJobs.ColorShiftJob.create(o),R.persistentJobs.ColorWaveJob.create(o),R.persistentJobs.DisplacementWaveJob.create(o),t(o),T(o),N(),A(),o}function f(e){var t,i=e.isPostOpen?e.expandedTile.postData.id:null;window.hg.animator.cancelAll(),e.resize(),w(e),i&&(t=function(e,t){var i,n;for(i=0,n=e.originalTiles.length;i<n;i+=1)if(e.originalTiles[i].holdsContent&&e.originalTiles[i].postData.id===t)return e.originalTiles[i];return null}(e,i),R.transientJobs.OpenPostJob.create(e,t)),L.performanceCheckJob&&D(),T(e),N(),A()}function w(e){window.hg.animator.startJob(e),R.persistentJobs.ColorResetJob.start(e),R.persistentJobs.DisplacementResetJob.start(e),window.hg.animator.startJob(L.annotations[e.index]),R.isLowPerformanceBrowser||(R.persistentJobs.ColorShiftJob.start(e),R.persistentJobs.ColorWaveJob.start(e),R.persistentJobs.DisplacementWaveJob.start(e))}function v(e){R.persistentJobs.ColorShiftJob.cancel(e),R.persistentJobs.ColorWaveJob.cancel(e),R.persistentJobs.DisplacementWaveJob.cancel(e)}function y(e,t){L.postData[e.index]=t,x(e,t)}function C(e,t){var i=L.postData[e.index];x(e,"all"!==t?i.filter(function(e){return e.categories.indexOf(t)>=0}):i.slice(0))}function x(e,t){e.isPostOpen=!1,e.pagePost=null,e.isTransitioning=!1,e.expandedTile=null,e.sectors=null,e.allNonContentTiles=null,e.postData=t,e.computeContentIndices(),f(e)}function T(e){window.hg.util.checkForSafari()&&(console.info("Is a Safari browser"),R.isSafariBrowser=!0,e.svg.style.width=e.parent.offsetWidth+"px",e.svg.style.height=e.parent.offsetHeight+"px")}function N(){window.hg.util.checkForIos()&&(console.info("Is an iOS browser"),R.isIosBrowser=!0)}function A(){document.documentElement.clientWidth<800?(console.info("Is a small-screen browser"),R.isSmallScreen=!0):R.isSmallScreen=!1}function S(){function e(){console.info("Is a low-performance browser");var e=document.createElement("div"),t=document.getElementsByTagName("body")[0];t.appendChild(e),e.innerHTML="Switching to low-performance mode.",e.style.zIndex=5e3,e.style.position="absolute",e.style.top="0",e.style.right="0",e.style.bottom="0",e.style.left="0",e.style.width="70%",e.style.height="70%",e.style.margin="auto",e.style.padding="5%",e.style.fontSize="5em",e.style.fontWeight="bold",e.style.opacity="1",e.style.color="white",e.style.backgroundColor="rgba(60,0,0,0.6)",window.hg.util.setTransition(e,"opacity 1s linear 1.5s"),setTimeout(function(){e.style.opacity="0",setTimeout(function(){t.removeChild(e)},2500)},10)}window.hg.util.requestAnimationFrame(function(){R.isLowPerformanceBrowser=!0,L.grids.forEach(v),c(),e()})}function D(){var e,t;L.performanceCheckJob={start:function(i){e=0,t=0,L.performanceCheckJob.startTime=i,L.performanceCheckJob.isComplete=!1},update:function(i,n){e++,n>=window.hg.animator.config.deltaTimeUpperThreshold&&t++,e>=20&&(L.performanceCheckJob.isComplete=!0,L.performanceCheckJob=null,console.info("--- PERFORMANCE DIAGNOSTICS ---"),console.info("maxDeltaTimeFrameCount",t),console.info("frameCount",e),console.info("-------------------------------"),t/e>.25&&S())},draw:function(){},cancel:function(){},init:function(){},isComplete:!0},window.hg.util.requestAnimationFrame(function(){window.hg.animator.startJob(L.performanceCheckJob)})}var R={},P={},L={};R.persistentJobs={ColorShiftJob:{constructorName:"ColorShiftJob",jobs:[],create:a.bind(R,"ColorShiftJob"),start:l.bind(R,"ColorShiftJob"),cancel:s.bind(R,"ColorShiftJob")},ColorWaveJob:{constructorName:"ColorWaveJob",jobs:[],create:a.bind(R,"ColorWaveJob"),start:l.bind(R,"ColorWaveJob"),cancel:s.bind(R,"ColorWaveJob")},DisplacementWaveJob:{constructorName:"DisplacementWaveJob",jobs:[],create:a.bind(R,"DisplacementWaveJob"),start:l.bind(R,"DisplacementWaveJob"),cancel:s.bind(R,"DisplacementWaveJob")},ColorResetJob:{constructorName:"ColorResetJob",jobs:[],create:a.bind(R,"ColorResetJob"),start:l.bind(R,"ColorResetJob"),cancel:s.bind(R,"ColorResetJob")},DisplacementResetJob:{constructorName:"DisplacementResetJob",jobs:[],create:a.bind(R,"DisplacementResetJob"),start:l.bind(R,"DisplacementResetJob"),cancel:s.bind(R,"DisplacementResetJob")}},R.transientJobs={OpenPostJob:{constructorName:"OpenPostJob",jobs:[],timeouts:[],create:n.bind(R,null,"OpenPostJob"),createRandom:p,toggleRecurrence:r.bind(R,"OpenPostJob"),canRunWithOpenGrid:!1},ClosePostJob:{constructorName:"ClosePostJob",jobs:[],timeouts:[],create:n.bind(R,null,"ClosePostJob"),createRandom:m,toggleRecurrence:r.bind(R,"ClosePostJob"),canRunWithOpenGrid:!0},CarouselImageSlideJob:{constructorName:"CarouselImageSlideJob",jobs:[],timeouts:[],create:n.bind(R,null,"CarouselImageSlideJob"),createRandom:null,toggleRecurrence:null,canRunWithOpenGrid:!0},DilateSectorsJob:{constructorName:"DilateSectorsJob",jobs:[],timeouts:[],create:n.bind(R,null,"DilateSectorsJob"),createRandom:null,toggleRecurrence:null,canRunWithOpenGrid:!0},FadePostJob:{constructorName:"FadePostJob",jobs:[],timeouts:[],create:n.bind(R,null,"FadePostJob"),createRandom:null,toggleRecurrence:null,canRunWithOpenGrid:!0},DisplacementRadiateJob:{constructorName:"DisplacementRadiateJob",jobs:[],timeouts:[],create:n.bind(R,null,"DisplacementRadiateJob"),createRandom:o.bind(R,"DisplacementRadiateJob"),toggleRecurrence:r.bind(R,"DisplacementRadiateJob"),canRunWithOpenGrid:!0},HighlightHoverJob:{constructorName:"HighlightHoverJob",jobs:[],timeouts:[],create:n.bind(R,null,"HighlightHoverJob"),createRandom:o.bind(R,"HighlightHoverJob"),toggleRecurrence:r.bind(R,"HighlightHoverJob"),canRunWithOpenGrid:!0},HighlightRadiateJob:{constructorName:"HighlightRadiateJob",jobs:[],timeouts:[],create:n.bind(R,null,"HighlightRadiateJob"),createRandom:o.bind(R,"HighlightRadiateJob"),toggleRecurrence:r.bind(R,"HighlightRadiateJob"),canRunWithOpenGrid:!0},IntraTileRadiateJob:{constructorName:"IntraTileRadiateJob",jobs:[],timeouts:[],create:n.bind(R,null,"IntraTileRadiateJob"),createRandom:o.bind(R,"IntraTileRadiateJob"),toggleRecurrence:r.bind(R,"IntraTileRadiateJob"),canRunWithOpenGrid:!0},LineJob:{constructorName:"LineJob",jobs:[],timeouts:[],create:n.bind(R,g,"LineJob"),createRandom:o.bind(R,"LineJob"),toggleRecurrence:r.bind(R,"LineJob"),canRunWithOpenGrid:!1},LinesRadiateJob:{constructorName:"LinesRadiateJob",jobs:[],timeouts:[],create:n.bind(R,h,"LinesRadiateJob"),createRandom:o.bind(R,"LinesRadiateJob"),toggleRecurrence:r.bind(R,"LinesRadiateJob"),canRunWithOpenGrid:!1},PanJob:{constructorName:"PanJob",jobs:[],timeouts:[],create:n.bind(R,null,"PanJob"),createRandom:o.bind(R,"PanJob"),toggleRecurrence:r.bind(R,"PanJob"),canRunWithOpenGrid:!0},SpreadJob:{constructorName:"SpreadJob",jobs:[],timeouts:[],create:n.bind(R,null,"SpreadJob"),createRandom:o.bind(R,"SpreadJob"),toggleRecurrence:r.bind(R,"SpreadJob"),canRunWithOpenGrid:!0},TileBorderJob:{constructorName:"TileBorderJob",jobs:[],timeouts:[],create:n.bind(R,null,"TileBorderJob"),createRandom:o.bind(R,"TileBorderJob"),toggleRecurrence:r.bind(R,"TileBorderJob"),canRunWithOpenGrid:!0}},L.grids=[],L.inputs=[],L.annotations=[],L.postData=[],L.performanceCheckJob=!0,R.isLowPerformanceBrowser=!1,R.isSafariBrowser=!1,R.isIosBrowser=!1,R.isSmallScreen=!1,R.config=P,R.createNewHexGrid=b,R.resetGrid=f,R.resetPersistentJobs=w,R.setGridPostData=y,R.filterGridPostDataByCategory=C,window.hg=window.hg||{},window.hg.controller=R,window.addEventListener("load",e,!1),console.log("controller module loaded")}(),function(){function e(e,t,i){e.forEach(function(e){t.forEach(function(t){E.listen(e,t,i)})})}function t(e,t,i,n){var o=document.createElement(e);return t&&t.appendChild(o),i&&(o.id=i),n&&n.forEach(function(e){l(o,e)}),o}function i(e,t){var i,n;return(i=e.className.indexOf(t))>=0&&!(0!==i&&" "!==e.className[i-1]||(n=i+t.length)!==e.className.length&&" "!==e.className[n])}function n(e,t,n){void 0===n?i(e,t)?s(e,t):l(e,t):n?l(e,t):s(e,t)}function o(e){for(var t=0,i=0;e;)t+=e.offsetLeft,i+=e.offsetTop,e=e.offsetParent;return t-=E.getScrollLeft(),i-=E.getScrollTop(),{x:t,y:i}}function r(){var e,t;return void 0!==window.innerWidth?(e=window.innerWidth,t=window.innerHeight):void 0!==document.documentElement&&void 0!==document.documentElement.clientWidth&&0!==document.documentElement.clientWidth?(e=document.documentElement.clientWidth,t=document.documentElement.clientHeight):(e=document.getElementsByTagName("body")[0].clientWidth,t=document.getElementsByTagName("body")[0].clientHeight),{w:e,h:t}}function a(e,t){return!(!t||t.parentNode!==e)&&(e.removeChild(t),!0)}function l(e,t){e.setAttribute("class",e.className+" "+t)}function s(e,t){e.setAttribute("class",e.className.split(" ").filter(function(e){return e!==t}).join(" "))}function c(e){e.className=""}function d(e,t,i,n,o){var r,a;return i=i||document.getElementsByTagName("body")[0],r=E.createElement(t,null,n,o),r.style.position="absolute",r.style.visibility="hidden",r.style.whiteSpace="nowrap",i.appendChild(r),r.innerHTML=e,a=r.clientWidth,i.removeChild(r),a}function u(e){var t,i;i=[];for(t in e)e.hasOwnProperty(t)&&i.push(encodeURIComponent(t)+"="+encodeURIComponent(e[t]));return"?"+i.join("&")}function g(e,t){var i,n;return t=encodeURIComponent(t),t=t.replace(/[\[]/,"\\[").replace(/[\]]/,"\\]"),i=new RegExp("[\\?&]"+t+"=([^&#]*)","i"),n=i.exec(e),null===n?null:decodeURIComponent(n[1].replace(/\+/g," "))}function h(e,t){e.style.transition=t,e.style.WebkitTransition=t,e.style.MozTransition=t,e.style.msTransition=t,e.style.OTransition=t}function p(e,t){e.style.transitionDuration=t+"s",e.style.WebkitTransitionDuration=t+"s",e.style.MozTransitionDuration=t+"s",e.style.msTransitionDuration=t+"s",e.style.OTransitionDuration=t+"s"}function m(e,t){e.style.transitionDelay=t+"s",e.style.WebkitTransitionDelay=t+"s",e.style.MozTransitionDelay=t+"s",e.style.msTransitionDelay=t+"s",e.style.OTransitionDelay=t+"s"}function b(e){e.style.userSelect="none",e.style.webkitUserSelect="none",e.style.MozUserSelect="none",e.style.msUserSelect="none"}function f(e,t){var i,n,o;for(n=0,o=(i=e.querySelectorAll("."+t)).length;n<o;n++)e.removeChild(i[n])}function w(e,t){var i="cubic-bezier("+t.p1x+","+t.p1y+","+t.p2x+","+t.p2y+")";e.style.transitionTimingFunction=i,e.style.WebkitTransitionTimingFunction=i,e.style.MozTransitionTimingFunction=i,e.style.msTransitionTimingFunction=i,e.style.OTransitionTimingFunction=i}function v(e,t){var i,n,o,r,a,l,s;return o=1-e,r=o*o*o,a=3*e*o*o,l=3*e*e*o,s=e*e*e,i=t[0].x*r+t[1].x*a+t[2].x*l+t[3].x*s,n=t[0].y*r+t[1].y*a+t[2].y*l+t[3].y*s,{x:i,y:n}}function y(e,t){e.style.webkitTransform=t,e.style.MozTransform=t,e.style.msTransform=t,e.style.OTransform=t,e.style.transform=t}function C(e){var t,i,n,o;for(t=0,n=e.length;t<n;t+=1)o=e[i=parseInt(Math.random()*n)],e[i]=e[t],e[t]=o;return e}function x(e,t,i,n){var o,r,a,l,s,c,d,u,g,h,p;if(o=!1,n){if(i.length<6)return o;u=i[i.length-4],g=i[i.length-3]}else{if(i.length<4)return o;u=i[i.length-2],g=i[i.length-1]}for(r=0,a=i.length-2;r<a;r+=2)h=i[r],p=i[r+1],h>u?(l=u,s=g,c=h,d=p):(l=h,s=p,c=u,d=g),h<e==e<=u&&(t-s)*(c-l)<(d-s)*(e-l)&&(o=!o),u=h,g=p;return o}function T(e){var t,i;if("object"==typeof e){i={};for(t in e)i[t]=e[t];return i}return e}function N(e){var t,i;if("object"==typeof e){i=e instanceof Array?[]:{};for(t in e)"object"==typeof e[t]?i[t]=N(e[t]):i[t]=e[t];return i}return e}function A(e){var t=e.s*(e.l<.5?e.l:1-e.l);return{h:e.h,s:2*t/(e.l+t),v:e.l+t}}function S(e){var t=(2-e.s)*e.v;return{h:e.h,s:e.s*e.v/(t<1?t:2.00000001-t),l:.5*t}}function D(e,t){for(;e;)if(window.hg.util.containsClass(e,t))return e;return null}function R(e){I||(I=document.createElement("style"),document.getElementsByTagName("head")[0].appendChild(I)),I.styleSheet?I.styleSheet.cssText=e:I.appendChild(document.createTextNode(e))}function P(){return/Safari/i.test(window.navigator.userAgent)&&!/Chrome/i.test(window.navigator.userAgent)}function L(){return/iPhone|iPod|iPad/i.test(window.navigator.userAgent)}function J(e,t,i){var n;return function(){var o=this,r=arguments,a=i&&!n,l=function(){n=null,i||e.apply(o,r)};clearTimeout(n),n=setTimeout(l,t),a&&e.apply(o,r)}}var I,E={listenToMultipleForMultiple:e,createElement:t,containsClass:i,toggleClass:n,getPageOffset:o,getViewportSize:r,removeChildIfPresent:a,addClass:l,removeClass:s,clearClasses:c,getTextWidth:d,encodeQueryString:u,getQueryStringParameterValue:g,setTransition:h,setTransitionDurationSeconds:p,setTransitionDelaySeconds:m,setUserSelectNone:b,removeChildrenWithClass:f,setTransitionCubicBezierTimingFunction:w,easingFunctions:{linear:function(e){return e},easeInQuad:function(e){return e*e},easeOutQuad:function(e){return e*(2-e)},easeInOutQuad:function(e){return e<.5?2*e*e:(4-2*e)*e-1},easeInCubic:function(e){return e*e*e},easeOutCubic:function(e){return 1+--e*e*e},easeInOutCubic:function(e){return e<.5?4*e*e*e:(e-1)*(2*e-2)*(2*e-2)+1},easeInQuart:function(e){return e*e*e*e},easeOutQuart:function(e){return 1- --e*e*e*e},easeInOutQuart:function(e){return e<.5?8*e*e*e*e:1-8*--e*e*e*e},easeInQuint:function(e){return e*e*e*e*e},easeOutQuint:function(e){return 1+--e*e*e*e*e},easeInOutQuint:function(e){return e<.5?16*e*e*e*e*e:1+16*--e*e*e*e*e}},inverseEasingFunctions:{linear:function(e){return e},easeInQuad:function(e){return Math.sqrt(e)},easeOutQuad:function(e){return 1-Math.sqrt(1-e)},easeInOutQuad:function(e){return e<.5?Math.sqrt(.5*e):1-.70710678*Math.sqrt(1-e)}},requestAnimationFrame:(window.requestAnimationFrame||window.webkitRequestAnimationFrame||window.mozRequestAnimationFrame||window.oRequestAnimationFrame||window.msRequestAnimationFrame||function(e){window.setTimeout(e,16)}).bind(window),getXYFromPercentWithBezier:v,setTransform:y,shuffle:C,isPointInsidePolyline:x,shallowCopy:T,deepCopy:N,hsvToHsl:S,hslToHsv:A,findClassInSelfOrAncestors:D,addRuleToStyleSheet:R,checkForSafari:P,checkForIos:L,debounce:J,svgNamespace:"http://www.w3.org/2000/svg",xlinkNamespace:"http://www.w3.org/1999/xlink"};window.hg=window.hg||{},window.hg.util=E,console.log("util module loaded")}(),function(){function e(i){var o=i-s.previousTime;o=o>c.deltaTimeUpperThreshold?c.deltaTimeUpperThreshold:o,s.isLooping=!0,s.isPaused?s.isLooping=!1:(t(i,o),n(),window.hg.util.requestAnimationFrame(e)),s.previousTime=i}function t(e,t){var n,o;for(n=0,o=s.jobs.length;n<o;n+=1)s.jobs[n].update(e,t),s.jobs[n].isComplete&&(i(s.jobs[n],n),n--,o--)}function i(e,t){var i;if("number"==typeof t)s.jobs.splice(t,1);else for(t=0,i=s.jobs.length;t<i;t+=1)if(s.jobs[t]===e){s.jobs.splice(t,1);break}0===s.jobs.length&&(s.isPaused=!0)}function n(){var e,t;for(e=0,t=s.jobs.length;e<t;e+=1)s.jobs[e].draw()}function o(){function t(t){s.previousTime=t,window.hg.util.requestAnimationFrame(e)}s.isPaused=!1,s.isLooping||(s.isLooping=!0,window.hg.util.requestAnimationFrame(t))}function r(e){e.isComplete?(console.log("Job starting: "+e.constructor.name),e.init(),e.start(s.previousTime),s.jobs.push(e)):(console.log("Job restarting: "+e.constructor.name),e.refresh?e.refresh():(e.cancel(),e.init(),e.start(s.previousTime))),o()}function a(e){console.log("Job cancelling: "+e.constructor.name),e.cancel(),i(e)}function l(){for(;s.jobs.length;)a(s.jobs[0])}var s={},c={};c.deltaTimeUpperThreshold=160,s.jobs=[],s.previousTime=window.performance&&window.performance.now()||0,s.isLooping=!1,s.isPaused=!0,s.startJob=r,s.cancelJob=a,s.cancelAll=l,s.config=c,window.hg=window.hg||{},window.hg.animator=s,console.log("animator module loaded")}(),function(){function e(e){var t=this;t.grid=e,t.startTime=0,t.isComplete=!0,t.annotations=window.hg.util.shallowCopy(ie.annotations),t.contentAreaGuideLines=[],t.tileParticleCenters=[],t.tileAnchorLines=[],t.tileAnchorCenters=[],t.tileDisplacementCircles=[],t.tileInnerRadii=[],t.tileOuterRadii=[],t.neighborLines=[],t.forceLines=[],t.velocityLines=[],t.indexTexts=[],t.lineAnimationGapDots=[],t.lineAnimationSelfCornerDots=[],t.lineAnimationLowerNeighborCornerDots=[],t.lineAnimationUpperNeighborCornerDots=[],t.sectorAnchorLines=[],t.sectorAnchorCenters=[],t.originalGridCenterDot=null,t.currentGridCenterDot=null,t.panCenterDot=null,t.toggleAnnotationEnabled=U,t.createAnnotations=Y,t.destroyAnnotations=q,t.setExpandedAnnotations=z,t.start=Q,t.update=K,t.draw=Z,t.cancel=$,t.init=ee,t.refresh=te}function t(){var e,t,i;for(t=0,i=(e=this).grid.originalTiles.length;t<i;t+=1)e.grid.originalTiles[t].holdsContent&&(e.grid.originalTiles[t].currentColor.h=ie.contentTileHue,e.grid.originalTiles[t].currentColor.s=ie.contentTileSaturation,e.grid.originalTiles[t].currentColor.l=ie.contentTileLightness)}function i(){var e,t,i;for(t=0,i=(e=this).grid.allTiles.length;t<i;t+=1)e.grid.allTiles[t].getIsBorderTile()&&(e.grid.allTiles[t].currentColor.h=ie.borderTileHue,e.grid.allTiles[t].currentColor.s=ie.borderTileSaturation,e.grid.allTiles[t].currentColor.l=ie.borderTileLightness)}function n(){var e,t,i;for(t=0,i=(e=this).grid.originalBorderTiles.length;t<i;t+=1)e.grid.originalBorderTiles[t].isCornerTile&&(e.grid.originalTiles[t].currentColor.h=ie.cornerTileHue,e.grid.originalTiles[t].currentColor.s=ie.cornerTileSaturation,e.grid.originalTiles[t].currentColor.l=ie.cornerTileLightness)}function o(){var e,t,i;for(t=0,i=(e=this).grid.allTiles.length;t<i;t+=1)e.grid.allTiles[t].element.setAttribute("opacity","0")}function r(){var e,t;(e=this).contentAreaGuideLines=[],t=document.createElementNS(window.hg.util.svgNamespace,"line"),e.grid.svg.appendChild(t),e.contentAreaGuideLines[0]=t,t.setAttribute("x1",e.grid.contentAreaLeft),t.setAttribute("y1",0),t.setAttribute("x2",e.grid.contentAreaLeft),t.setAttribute("y2",e.grid.height),t.setAttribute("stroke","red"),t.setAttribute("stroke-width","2"),t=document.createElementNS(window.hg.util.svgNamespace,"line"),e.grid.svg.appendChild(t),e.contentAreaGuideLines[1]=t,t.setAttribute("x1",e.grid.contentAreaRight),t.setAttribute("y1",0),t.setAttribute("x2",e.grid.contentAreaRight),t.setAttribute("y2",e.grid.height),t.setAttribute("stroke","red"),t.setAttribute("stroke-width","2")}function a(){var e,t,i;for((e=this).tileParticleCenters=[],t=0,i=e.grid.allTiles.length;t<i;t+=1)e.tileParticleCenters[t]=document.createElementNS(window.hg.util.svgNamespace,"circle"),e.grid.svg.appendChild(e.tileParticleCenters[t]),e.tileParticleCenters[t].setAttribute("r","4"),e.tileParticleCenters[t].setAttribute("fill","gray")}function l(){var e,t,i;for((e=this).tileAnchorLines=[],e.tileAnchorCenters=[],t=0,i=e.grid.allTiles.length;t<i;t+=1)e.tileAnchorLines[t]=document.createElementNS(window.hg.util.svgNamespace,"line"),e.grid.svg.appendChild(e.tileAnchorLines[t]),e.tileAnchorLines[t].setAttribute("stroke","#666666"),e.tileAnchorLines[t].setAttribute("stroke-width","2"),e.tileAnchorCenters[t]=document.createElementNS(window.hg.util.svgNamespace,"circle"),e.grid.svg.appendChild(e.tileAnchorCenters[t]),e.tileAnchorCenters[t].setAttribute("r","4"),e.tileAnchorCenters[t].setAttribute("fill","#888888")}function s(){var e,t,i;for((e=this).tileDisplacementCircles=[],t=0,i=e.grid.allTiles.length;t<i;t+=1)e.tileDisplacementCircles[t]=document.createElementNS(window.hg.util.svgNamespace,"circle"),e.grid.svg.appendChild(e.tileDisplacementCircles[t]),e.tileDisplacementCircles[t].setAttribute("r","80"),e.tileDisplacementCircles[t].setAttribute("opacity","0.4"),e.tileDisplacementCircles[t].setAttribute("fill","white")}function c(){var e,t,i;for((e=this).tileInnerRadii=[],t=0,i=e.grid.allTiles.length;t<i;t+=1)e.tileInnerRadii[t]=document.createElementNS(window.hg.util.svgNamespace,"circle"),e.grid.svg.appendChild(e.tileInnerRadii[t]),e.tileInnerRadii[t].setAttribute("stroke","blue"),e.tileInnerRadii[t].setAttribute("stroke-width","1"),e.tileInnerRadii[t].setAttribute("fill","transparent")}function d(){var e,t,i;for((e=this).tileOuterRadii=[],t=0,i=e.grid.allTiles.length;t<i;t+=1)e.tileOuterRadii[t]=document.createElementNS(window.hg.util.svgNamespace,"circle"),e.grid.svg.appendChild(e.tileOuterRadii[t]),e.tileOuterRadii[t].setAttribute("stroke","green"),e.tileOuterRadii[t].setAttribute("stroke-width","1"),e.tileOuterRadii[t].setAttribute("fill","transparent")}function u(){var e,t,i,n,o,r;for((e=this).neighborLines=[],t=0,n=e.grid.allTiles.length;t<n;t+=1)for(r=e.grid.allTiles[t].getNeighborStates(),e.neighborLines[t]=[],i=0,o=r.length;i<o;i+=1)r[i]&&(e.neighborLines[t][i]=document.createElementNS(window.hg.util.svgNamespace,"line"),e.grid.svg.appendChild(e.neighborLines[t][i]),e.neighborLines[t][i].setAttribute("stroke","purple"),e.neighborLines[t][i].setAttribute("stroke-width","1"))}function g(){var e,t,i;for((e=this).forceLines=[],t=0,i=e.grid.allTiles.length;t<i;t+=1)e.forceLines[t]=document.createElementNS(window.hg.util.svgNamespace,"line"),e.grid.svg.appendChild(e.forceLines[t]),e.forceLines[t].setAttribute("stroke","orange"),e.forceLines[t].setAttribute("stroke-width","2")}function h(){var e,t,i;for((e=this).velocityLines=[],t=0,i=e.grid.allTiles.length;t<i;t+=1)e.velocityLines[t]=document.createElementNS(window.hg.util.svgNamespace,"line"),e.grid.svg.appendChild(e.velocityLines[t]),e.velocityLines[t].setAttribute("stroke","red"),e.velocityLines[t].setAttribute("stroke-width","2")}function p(){var e,t,i;for((e=this).indexTexts=[],t=0,i=e.grid.allTiles.length;t<i;t+=1)e.indexTexts[t]=document.createElementNS(window.hg.util.svgNamespace,"text"),e.indexTexts[t].innerHTML=isNaN(e.grid.allTiles[t].originalIndex)?"?":e.grid.allTiles[t].originalIndex,e.grid.svg.appendChild(e.indexTexts[t]),e.indexTexts[t].setAttribute("font-size","16"),e.indexTexts[t].setAttribute("fill","black"),e.indexTexts[t].setAttribute("pointer-events","none")}function m(){var e,t,i,n,o,r,a;for(t=0,i=(e=this).grid.sectors.length;t<i;t+=1)for(a=60*t+20,n=0,o=(r=e.grid.sectors[t]).tiles.length;n<o;n+=1)r.tiles[n].currentColor.h=a,r.tiles[n].currentColor.s=window.hg.Grid.config.tileSaturation,r.tiles[n].currentColor.l=window.hg.Grid.config.tileLightness}function b(){var e;(e=this).currentGridCenterDot=document.createElementNS(window.hg.util.svgNamespace,"circle"),e.grid.svg.appendChild(e.currentGridCenterDot),e.currentGridCenterDot.setAttribute("r","8"),e.currentGridCenterDot.setAttribute("fill","chartreuse"),e.panCenterDot=document.createElementNS(window.hg.util.svgNamespace,"circle"),e.grid.svg.appendChild(e.panCenterDot),e.panCenterDot.setAttribute("r","5"),e.panCenterDot.setAttribute("fill","red"),e.originalGridCenterDot=document.createElementNS(window.hg.util.svgNamespace,"circle"),e.grid.svg.appendChild(e.originalGridCenterDot),e.originalGridCenterDot.setAttribute("r","2"),e.originalGridCenterDot.setAttribute("fill","yellow")}function f(){var e,t;for((e=this).sectorAnchorLines=[],e.sectorAnchorCenters=[],t=0;t<e.grid.sectors.length;t+=1)e.sectorAnchorLines[t]=document.createElementNS(window.hg.util.svgNamespace,"line"),e.grid.svg.appendChild(e.sectorAnchorLines[t]),e.sectorAnchorLines[t].setAttribute("stroke","#999999"),e.sectorAnchorLines[t].setAttribute("stroke-width","2"),e.sectorAnchorCenters[t]=document.createElementNS(window.hg.util.svgNamespace,"circle"),e.grid.svg.appendChild(e.sectorAnchorCenters[t]),e.sectorAnchorCenters[t].setAttribute("r","5"),e.sectorAnchorCenters[t].setAttribute("fill","#BBBBBB")}function w(){var e,t,i;for(t=0,i=(e=this).grid.originalTiles.length;t<i;t+=1)e.grid.originalTiles[t].element.setAttribute("opacity","1")}function v(){var e,t,i;for(t=0,i=(e=this).contentAreaGuideLines.length;t<i;t+=1)e.grid.svg.removeChild(e.contentAreaGuideLines[t]);e.contentAreaGuideLines=[]}function y(){var e,t,i;for(t=0,i=(e=this).tileParticleCenters.length;t<i;t+=1)e.grid.svg.removeChild(e.tileParticleCenters[t]);e.tileParticleCenters=[]}function C(){var e,t,i;for(t=0,i=(e=this).tileAnchorLines.length;t<i;t+=1)e.grid.svg.removeChild(e.tileAnchorLines[t]),e.grid.svg.removeChild(e.tileAnchorCenters[t]);e.tileAnchorLines=[],e.tileAnchorCenters=[]}function x(){var e,t,i;for(t=0,i=(e=this).tileDisplacementCircles.length;t<i;t+=1)e.grid.svg.removeChild(e.tileDisplacementCircles[t]);e.tileDisplacementCircles=[]}function T(){var e,t,i;for(t=0,i=(e=this).tileInnerRadii.length;t<i;t+=1)e.grid.svg.removeChild(e.tileInnerRadii[t]);e.tileInnerRadii=[]}function N(){var e,t,i;for(t=0,i=(e=this).tileOuterRadii.length;t<i;t+=1)e.grid.svg.removeChild(e.tileOuterRadii[t]);e.tileOuterRadii=[]}function A(){var e,t,i,n,o;for(t=0,n=(e=this).neighborLines.length;t<n;t+=1)for(i=0,o=e.neighborLines[t].length;i<o;i+=1)e.neighborLines[t][i]&&e.grid.svg.removeChild(e.neighborLines[t][i]);e.neighborLines=[]}function S(){var e,t,i;for(t=0,i=(e=this).forceLines.length;t<i;t+=1)e.grid.svg.removeChild(e.forceLines[t]);e.forceLines=[]}function D(){var e,t,i;for(t=0,i=(e=this).velocityLines.length;t<i;t+=1)e.grid.svg.removeChild(e.velocityLines[t]);e.velocityLines=[]}function R(){var e,t,i;for(t=0,i=(e=this).indexTexts.length;t<i;t+=1)e.grid.svg.removeChild(e.indexTexts[t]);e.indexTexts=[]}function P(){var e,t,i;for(t=0,i=(e=this).lineAnimationGapDots.length;t<i;t+=1)e.grid.svg.removeChild(e.lineAnimationGapDots[t]);e.lineAnimationGapDots=[]}function L(){var e,t,i;for(t=0,i=(e=this).lineAnimationSelfCornerDots.length;t<i;t+=1)e.grid.svg.removeChild(e.lineAnimationSelfCornerDots[t]);for(t=0,i=e.lineAnimationLowerNeighborCornerDots.length;t<i;t+=1)e.grid.svg.removeChild(e.lineAnimationLowerNeighborCornerDots[t]);for(t=0,i=e.lineAnimationUpperNeighborCornerDots.length;t<i;t+=1)e.grid.svg.removeChild(e.lineAnimationUpperNeighborCornerDots[t]);e.lineAnimationSelfCornerDots=[],e.lineAnimationLowerNeighborCornerDots=[],e.lineAnimationUpperNeighborCornerDots=[]}function J(){var e;(e=this).originalGridCenterDot&&(e.grid.svg.removeChild(e.originalGridCenterDot),e.grid.svg.removeChild(e.currentGridCenterDot),e.grid.svg.removeChild(e.panCenterDot),e.originalGridCenterDot=null,e.currentGridCenterDot=null,e.panCenterDot=null)}function I(){var e,t;for(e=this,t=0;t<e.sectorAnchorLines.length;t+=1)e.grid.svg.removeChild(e.sectorAnchorLines[t]),e.grid.svg.removeChild(e.sectorAnchorCenters[t]);e.sectorAnchorLines=[],e.sectorAnchorCenters=[]}function E(){var e,t,i;for(t=0,i=(e=this).grid.allTiles.length;t<i;t+=1)e.tileParticleCenters[t].setAttribute("cx",e.grid.allTiles[t].particle.px),e.tileParticleCenters[t].setAttribute("cy",e.grid.allTiles[t].particle.py)}function O(){var e,t,i;for(t=0,i=(e=this).grid.allTiles.length;t<i;t+=1)e.tileAnchorLines[t].setAttribute("x1",e.grid.allTiles[t].particle.px),e.tileAnchorLines[t].setAttribute("y1",e.grid.allTiles[t].particle.py),e.tileAnchorLines[t].setAttribute("x2",e.grid.allTiles[t].currentAnchor.x),e.tileAnchorLines[t].setAttribute("y2",e.grid.allTiles[t].currentAnchor.y),e.tileAnchorCenters[t].setAttribute("cx",e.grid.allTiles[t].currentAnchor.x),e.tileAnchorCenters[t].setAttribute("cy",e.grid.allTiles[t].currentAnchor.y)}function G(){var e,t,i,n,o,r;for(t=0,i=(e=this).grid.allTiles.length;t<i;t+=1)n=e.grid.allTiles[t].particle.px-e.grid.allTiles[t].originalAnchor.x,o=e.grid.allTiles[t].particle.py-e.grid.allTiles[t].originalAnchor.y,r="hsl("+180*Math.atan2(n,o)/Math.PI+","+Math.sqrt(n*n+o*o)/window.hg.DisplacementWaveJob.config.displacementAmplitude*100+"%,80%)",e.tileDisplacementCircles[t].setAttribute("fill",r),e.tileDisplacementCircles[t].setAttribute("cx",e.grid.allTiles[t].particle.px),e.tileDisplacementCircles[t].setAttribute("cy",e.grid.allTiles[t].particle.py)}function H(){var e,t,i;for(t=0,i=(e=this).grid.allTiles.length;t<i;t+=1)e.tileInnerRadii[t].setAttribute("cx",e.grid.allTiles[t].particle.px),e.tileInnerRadii[t].setAttribute("cy",e.grid.allTiles[t].particle.py),e.tileInnerRadii[t].setAttribute("r",e.grid.allTiles[t].outerRadius*window.hg.Grid.config.sqrtThreeOverTwo)}function k(){var e,t,i;for(t=0,i=(e=this).grid.allTiles.length;t<i;t+=1)e.tileOuterRadii[t].setAttribute("cx",e.grid.allTiles[t].particle.px),e.tileOuterRadii[t].setAttribute("cy",e.grid.allTiles[t].particle.py),e.tileOuterRadii[t].setAttribute("r",e.grid.allTiles[t].outerRadius)}function B(){var e,t,i,n,o,r,a,l;for(t=0,n=(e=this).grid.allTiles.length;t<n;t+=1)for(i=0,o=(a=(r=e.grid.allTiles[t]).getNeighborStates()).length;i<o;i+=1)(l=a[i])&&(e.neighborLines[t][i].setAttribute("x1",r.particle.px),e.neighborLines[t][i].setAttribute("y1",r.particle.py),e.neighborLines[t][i].setAttribute("x2",l.tile.particle.px),e.neighborLines[t][i].setAttribute("y2",l.tile.particle.py))}function W(){var e,t,i;for(t=0,i=(e=this).grid.allTiles.length;t<i;t+=1)e.forceLines[t].setAttribute("x1",e.grid.allTiles[t].particle.px),e.forceLines[t].setAttribute("y1",e.grid.allTiles[t].particle.py),e.forceLines[t].setAttribute("x2",e.grid.allTiles[t].particle.px+e.grid.allTiles[t].particle.fx*ie.forceLineLengthMultiplier),e.forceLines[t].setAttribute("y2",e.grid.allTiles[t].particle.py+e.grid.allTiles[t].particle.fy*ie.forceLineLengthMultiplier)}function M(){var e,t,i;for(t=0,i=(e=this).grid.allTiles.length;t<i;t+=1)e.velocityLines[t].setAttribute("x1",e.grid.allTiles[t].particle.px),e.velocityLines[t].setAttribute("y1",e.grid.allTiles[t].particle.py),e.velocityLines[t].setAttribute("x2",e.grid.allTiles[t].particle.px+e.grid.allTiles[t].particle.vx*ie.velocityLineLengthMultiplier),e.velocityLines[t].setAttribute("y2",e.grid.allTiles[t].particle.py+e.grid.allTiles[t].particle.vy*ie.velocityLineLengthMultiplier)}function F(){var e,t,i;for(t=0,i=(e=this).grid.allTiles.length;t<i;t+=1)e.indexTexts[t].setAttribute("x",e.grid.allTiles[t].particle.px-10),e.indexTexts[t].setAttribute("y",e.grid.allTiles[t].particle.py+6)}function V(){var e,t,i,n,o,r,a;for(e=this,P.call(e),e.lineAnimationGapDots=[],r=0,t=0,i=window.hg.controller.transientJobs.LineJob.jobs[e.grid.index].length;t<i;t+=1)for(n=0,o=(a=window.hg.controller.transientJobs.LineJob.jobs[e.grid.index][t]).gapPoints.length;n<o;n+=1,r+=1)e.lineAnimationGapDots[r]=document.createElementNS(window.hg.util.svgNamespace,"circle"),e.lineAnimationGapDots[r].setAttribute("cx",a.gapPoints[n].x),e.lineAnimationGapDots[r].setAttribute("cy",a.gapPoints[n].y),e.lineAnimationGapDots[r].setAttribute("r","4"),e.lineAnimationGapDots[r].setAttribute("fill","white"),e.grid.svg.appendChild(e.lineAnimationGapDots[r])}function j(){function e(e,t){return{x:e.vertices[2*t],y:e.vertices[2*t+1]}}var t,i,n,o,r,a,l,s;for(t=this,L.call(t),t.lineAnimationSelfCornerDots=[],t.lineAnimationLowerNeighborCornerDots=[],t.lineAnimationUpperNeighborCornerDots=[],i=0,n=window.hg.controller.transientJobs.LineJob.jobs[t.grid.index].length;i<n;i+=1)for(o=0,r=(a=window.hg.controller.transientJobs.LineJob.jobs[t.grid.index][i]).corners.length;o<r;o+=1)l=e(a.tiles[o],a.corners[o]),(s=document.createElementNS(window.hg.util.svgNamespace,"circle")).setAttribute("cx",l.x),s.setAttribute("cy",l.y),s.setAttribute("r","3"),s.setAttribute("fill","#ffaaaa"),t.grid.svg.appendChild(s),t.lineAnimationSelfCornerDots.push(s),a.lowerNeighbors[o]&&(l=e(a.lowerNeighbors[o].tile,a.lowerNeighborCorners[o]),(s=document.createElementNS(window.hg.util.svgNamespace,"circle")).setAttribute("cx",l.x),s.setAttribute("cy",l.y),s.setAttribute("r","3"),s.setAttribute("fill","#aaffaa"),t.grid.svg.appendChild(s),t.lineAnimationLowerNeighborCornerDots.push(s)),a.upperNeighbors[o]&&(l=e(a.upperNeighbors[o].tile,a.upperNeighborCorners[o]),(s=document.createElementNS(window.hg.util.svgNamespace,"circle")).setAttribute("cx",l.x),s.setAttribute("cy",l.y),s.setAttribute("r","3"),s.setAttribute("fill","#aaaaff"),t.grid.svg.appendChild(s),t.lineAnimationUpperNeighborCornerDots.push(s))}function X(){var e,t;(e=this).originalGridCenterDot&&(e.originalGridCenterDot.setAttribute("cx",e.grid.originalCenter.x),e.originalGridCenterDot.setAttribute("cy",e.grid.originalCenter.y),e.currentGridCenterDot.setAttribute("cx",e.grid.currentCenter.x),e.currentGridCenterDot.setAttribute("cy",e.grid.currentCenter.y),e.panCenterDot.setAttribute("cx",e.grid.panCenter.x),e.panCenterDot.setAttribute("cy",e.grid.panCenter.y),(t=window.hg.controller.transientJobs.PanJob.jobs[e.grid.index][0])&&(t.baseTile.currentColor.h=0,t.baseTile.currentColor.s=0,t.baseTile.currentColor.l=90))}function _(){var e,t,i,n,o,r;for(e=this,t=0;t<e.sectorAnchorLines.length;t+=1)i=e.grid.sectors[t].currentAnchor.x,n=e.grid.sectors[t].currentAnchor.y,o=e.grid.sectors[t].originalAnchor.x-e.grid.sectors[t].expandedDisplacement.x,r=e.grid.sectors[t].originalAnchor.y-e.grid.sectors[t].expandedDisplacement.y,e.sectorAnchorLines[t].setAttribute("x1",i),e.sectorAnchorLines[t].setAttribute("y1",n),e.sectorAnchorLines[t].setAttribute("x2",o),e.sectorAnchorLines[t].setAttribute("y2",r),e.sectorAnchorCenters[t].setAttribute("cx",o),e.sectorAnchorCenters[t].setAttribute("cy",r)}function U(e,t){var i;(i=this).annotations[e].enabled=t,t?i.annotations[e].create.call(i):i.annotations[e].destroy.call(i)}function Y(){var e,t,i;for(e=this,t=0,i=ie.annotationsArray.length;t<i;t+=1)ie.annotationsArray[t].enabled&&ie.annotationsArray[t].create.call(e)}function q(){var e,t,i;for(e=this,t=0,i=ie.annotationsArray.length;t<i;t+=1)ie.annotationsArray[t].destroy.call(e)}function z(e){var t;(t=this).annotations.tileNeighborConnections.enabled&&(A.call(t),u.call(t))}function Q(){this.isComplete=!1}function K(e,t){var i,n,o;for(i=this,n=0,o=ie.annotationsArray.length;n<o;n+=1)ie.annotationsArray[n].enabled&&ie.annotationsArray[n].update.call(i)}function Z(){}function $(){this.isComplete=!0}function ee(){ie.computeDependentValues()}function te(){var e=this;ee(),e.annotations=window.hg.util.shallowCopy(ie.annotations)}var ie={};ie.forceLineLengthMultiplier=4e3,ie.velocityLineLengthMultiplier=300,ie.contentTileHue=187,ie.contentTileSaturation=50,ie.contentTileLightness=30,ie.borderTileHue=267,ie.borderTileSaturation=0,ie.borderTileLightness=30,ie.cornerTileHue=267,ie.cornerTileSaturation=50,ie.cornerTileLightness=30,ie.annotations={tileNeighborConnections:{enabled:!1,create:u,destroy:A,update:B,priority:1300},tileAnchorCenters:{enabled:!1,create:l,destroy:C,update:O,priority:500},transparentTiles:{enabled:!1,create:o,destroy:w,update:function(){},priority:400},tileIndices:{enabled:!1,create:p,destroy:R,update:F,priority:1e3},tileForces:{enabled:!1,create:g,destroy:S,update:W,priority:1100},tileVelocities:{enabled:!1,create:h,destroy:D,update:M,priority:1200},sectorColors:{enabled:!1,create:m,destroy:function(){},update:m,priority:0},borderTiles:{enabled:!1,create:i,destroy:function(){},update:i,priority:200},contentTiles:{enabled:!1,create:t,destroy:function(){},update:t,priority:100},cornerTiles:{enabled:!1,create:n,destroy:function(){},update:n,priority:300},tileParticleCenters:{enabled:!1,create:a,destroy:y,update:E,priority:600},tileDisplacementColors:{enabled:!1,create:s,destroy:x,update:G,priority:700},tileInnerRadii:{enabled:!1,create:c,destroy:T,update:H,priority:800},tileOuterRadii:{enabled:!1,create:d,destroy:N,update:k,priority:900},contentAreaGuidelines:{enabled:!1,create:r,destroy:v,update:function(){},priority:1400},lineAnimationGapPoints:{enabled:!1,create:function(){},destroy:P,update:V,priority:1500},lineAnimationCornerData:{enabled:!1,create:function(){},destroy:L,update:j,priority:1600},panCenterPoints:{enabled:!1,create:b,destroy:J,update:X,priority:1700},sectorAnchorCenters:{enabled:!1,create:f,destroy:I,update:_,priority:1800}},ie.annotationsArray=[],ie.computeDependentValues=function(){ie.annotationsArray=Object.keys(ie.annotations).map(function(e){return ie.annotations[e]}),ie.annotationsArray.sort(function(e,t){return e.priority-t.priority})},ie.computeDependentValues(),e.config=ie,window.hg=window.hg||{},window.hg.Annotations=e,console.log("Annotations module loaded")}(),function(){function e(e,n,o,r,a,u){var g=this;g.grid=e,g.pagePost=n,g.parent=o,g.elements=null,g.currentIndex=0,g.previousIndex=0,g.mediaMetadata=null,g.currentIndexPositionRatio=0,g.loadMedia=l,g.onSlideFinished=s,g.draw=c,g.destroy=d,t.call(g,r,a),i.call(g,u),console.log("Carousel created")}function t(e,t){this.mediaMetadata=t.concat(e).map(function(e){return e.isVideo=!!e.videoHost,e})}function i(e){var t=this,i=document.createElement("div"),a=document.createElement("div"),s=document.createElement("div"),c=document.createElement("div"),d=document.createElement("div"),g=document.createElement("div"),h=document.createElement("p"),p=document.createElement("div"),m=document.createElementNS(window.hg.util.svgNamespace,"svg"),b=document.createElementNS(window.hg.util.svgNamespace,"use"),f=document.createElement("div"),w=document.createElementNS(window.hg.util.svgNamespace,"svg"),v=document.createElementNS(window.hg.util.svgNamespace,"use");t.parent.appendChild(i),i.appendChild(a),a.appendChild(s),a.appendChild(c),a.appendChild(d),d.appendChild(p),p.appendChild(m),m.appendChild(b),d.appendChild(f),f.appendChild(w),w.appendChild(v),i.appendChild(g),g.appendChild(h),t.elements={},t.elements.container=i,t.elements.slidersContainer=a,t.elements.mainMediaRibbon=s,t.elements.thumbnailsRibbon=c,t.elements.buttonsContainer=d,t.elements.captionsPanel=g,t.elements.captionsText=h,t.elements.previousButtonPanel=p,t.elements.previousButtonSvg=m,t.elements.previousButtonUse=b,t.elements.nextButtonPanel=f,t.elements.nextButtonSvg=w,t.elements.nextButtonUse=v,t.elements.mainMedia=[],t.elements.thumbnails=[],t.elements.thumbnailScreens=[],i.setAttribute("data-hg-carousel-container","data-hg-carousel-container"),a.setAttribute("data-hg-carousel-sliders-container","data-hg-carousel-sliders-container"),a.style.position="relative",a.style.overflow="hidden",a.style.width="100%",window.hg.util.setUserSelectNone(i),s.style.position="relative",s.style.width="100%",s.style.height="0",s.style.padding="56.25% 0 0 0",c.style.position="relative",c.style.width=u.thumbnailWidth*t.mediaMetadata.length+"px",c.style.height=u.thumbnailHeight+"px",c.style.left="calc(50% - "+u.thumbnailWidth/2+"px)",c.style.paddingTop=u.thumbnailRibbonPadding+"px",d.style.position="absolute",d.style.top="0",d.style.width="100%",d.style.height="0",d.style.padding="56.25% 0 0 0",p.setAttribute("data-hg-carousel-button","data-hg-carousel-button"),p.style.position="absolute",p.style.top="0",p.style.left="0",p.style.width="calc(33.33% - "+u.prevNextButtonPadding+"px)",p.style.height="100%",p.style.cursor="pointer",p.addEventListener("click",o.bind(t),!1),m.style.position="absolute",m.style.top="0",m.style.bottom="0",m.style.left="0",m.style.margin="auto",m.style.height=u.prevNextButtonHeight+"px",m.style.width=u.prevNextButtonWidth+"px",m.style.paddingLeft=u.prevNextButtonPadding+"px",b.setAttributeNS(window.hg.util.xlinkNamespace,"xlink:href","#chevron-left"),f.setAttribute("data-hg-carousel-button","data-hg-carousel-button"),f.style.position="absolute",f.style.top="0",f.style.right="0",f.style.width="calc(66.67% - "+u.prevNextButtonPadding+"px)",f.style.height="100%",f.style.cursor="pointer",f.addEventListener("click",r.bind(t),!1),window.hg.util.setTransform(w,"scaleX(-1)"),w.style.position="absolute",w.style.top="0",w.style.bottom="0",w.style.right="0",w.style.margin="auto",w.style.height=u.prevNextButtonHeight+"px",w.style.width=u.prevNextButtonWidth+"px",w.style.paddingLeft=u.prevNextButtonPadding+"px",v.setAttributeNS(window.hg.util.xlinkNamespace,"xlink:href","#chevron-left"),g.setAttribute("data-hg-captions-panel","data-hg-captions-panel"),h.style.margin="0",h.style.padding="0",t.elements.captionsPanel.setAttribute("data-hg-selected","data-hg-selected"),e||l.call(t),0===t.mediaMetadata.length?(i.style.display="none",g.style.display="none"):(h.innerHTML=t.mediaMetadata[0].description,1===t.mediaMetadata.length&&(c.style.display="none")),n.call(t)}function n(){var e,t,i,n=this;!n.mediaMetadata.length||n.mediaMetadata[n.currentIndex].isVideo?(e="hidden",t="hidden",i="hidden"):(e=n.currentIndex>0?"visible":"hidden",t=n.currentIndex<n.mediaMetadata.length-1?"visible":"hidden",i="visible"),n.elements.previousButtonPanel.style.visibility=e,n.elements.nextButtonPanel.style.visibility=t,n.elements.buttonsContainer.style.visibility=i}function o(){var e,t=this;t.currentIndex>0?(e=(t.currentIndex+t.mediaMetadata.length-1)%t.mediaMetadata.length,a.call(t,e)):console.warn("Carousel cannot go to previous. Already at first medium.")}function r(){var e,t=this;t.currentIndex<t.mediaMetadata.length-1?(e=(t.currentIndex+1)%t.mediaMetadata.length,a.call(t,e)):console.warn("Carousel cannot go to next. Already at last medium.")}function a(e){var t=this;if(t.previousIndex=t.currentIndex,t.currentIndex=e,window.hg.controller.transientJobs.CarouselImageSlideJob.create(t.grid,null,t),t.mediaMetadata[t.previousIndex].isVideo)switch(t.mediaMetadata[t.previousIndex].videoHost){case"youtube":t.elements.mainMedia[t.previousIndex].querySelector("iframe").contentWindow.postMessage('{"event":"command","func":"pauseVideo","args":""}',"*");break;case"vimeo":t.elements.mainMedia[t.previousIndex].querySelector("iframe").contentWindow.postMessage('{"method": "pause", "value": ""}',"*");break;default:throw new Error("Invalid video host: "+t.mediaMetadata[t.previousIndex].videoHost)}t.elements.captionsPanel.removeAttribute("data-hg-selected"),t.elements.thumbnails[t.previousIndex].removeAttribute("data-hg-selected"),t.elements.thumbnails[t.currentIndex].setAttribute("data-hg-selected","data-hg-selected"),n.call(t)}function l(){function e(e,i){var n,o,r,l,s;if(e.isVideo)switch((o=document.createElement("iframe")).setAttribute("src",e.videoSrc),o.setAttribute("allowfullscreen","allowfullscreen"),o.setAttribute("frameborder","0"),o.style.position="absolute",o.style.top="0",o.style.width="100%",o.style.height="100%",(n=document.createElement("div")).appendChild(o),e.videoHost){case"youtube":s=e.thumbnailSrc;break;case"vimeo":s="",function(e,i){function n(){var n;console.log("Vimeo metadata response status="+l.status+" ("+l.statusText+")");try{n=JSON.parse(l.response)}catch(e){return void console.error("Unable to parse Vimeo metadata response body as JSON: "+l.response)}e.thumbnailSrc=n[0].thumbnail_large,t.elements.thumbnails[i].style.backgroundImage="url("+e.thumbnailSrc+")"}function o(){console.error("An error occurred while loading the Vimeo thumbnail")}function r(){console.error("The Vimeo thumbnail load has been cancelled by the user")}var a=u.vimeoMetadataBaseUrl+"/"+e.id+".json",l=new XMLHttpRequest;l.addEventListener("load",n,!1),l.addEventListener("error",o,!1),l.addEventListener("abort",r,!1),console.log("Sending request for Vimeo metadata to "+a),l.open("GET",a,!0),l.send()}(e,i);break;default:throw new Error("Invalid video host: "+e.videoHost)}else(n=document.createElement("div")).style.backgroundImage="url("+e.src+")",n.style.backgroundSize="contain",n.style.backgroundRepeat="no-repeat",n.style.backgroundPosition="50% 50%",s=e.src;n.setAttribute("data-hg-carousel-main-media","data-hg-carousel-main-media"),n.style.position="absolute",n.style.top="0",n.style.left=100*i+"%",n.style.width="100%",n.style.height="0",n.style.padding="56.25% 0 0 0",(r=document.createElement("div")).setAttribute("data-hg-carousel-thumbnail","data-hg-carousel-thumbnail"),r.style.backgroundImage="url("+s+")",r.style.backgroundSize="contain",r.style.backgroundRepeat="no-repeat",r.style.backgroundPosition="50% 50%",r.style.width=u.thumbnailWidth+"px",r.style.height=u.thumbnailHeight+"px",r.style.styleFloat="left",r.style.cssFloat="left",(l=document.createElement("div")).setAttribute("data-hg-carousel-thumbnail-screen","data-hg-carousel-thumbnail-screen"),l.style.width="100%",l.style.height="100%",l.style.cursor="pointer",l.addEventListener("click",a.bind(t,i),!1),t.elements.mainMedia.push(n),t.elements.thumbnails.push(r),t.elements.thumbnailScreens.push(l),t.elements.mainMediaRibbon.appendChild(n),t.elements.thumbnailsRibbon.appendChild(r),r.appendChild(l)}var t=this;0===t.elements.mainMedia.length&&t.mediaMetadata.forEach(e),t.mediaMetadata.length>0&&t.elements.thumbnails[0].setAttribute("data-hg-selected","data-hg-selected")}function s(){var e=this;e.elements.captionsText.innerHTML=e.mediaMetadata[e.currentIndex].description,e.elements.captionsPanel.setAttribute("data-hg-selected","data-hg-selected")}function c(){var e=this;e.elements.mainMediaRibbon.style.left=100*-e.currentIndexPositionRatio+"%",e.elements.thumbnailsRibbon.style.left="calc(50% - "+(u.thumbnailWidth/2+e.currentIndexPositionRatio*u.thumbnailWidth)+"px"}function d(){var e=this;e.parent.removeChild(e.elements.container),e.elements.container=null}var u;(u={}).thumbnailHeight=80,u.thumbnailRibbonPadding=3,u.prevNextButtonPadding=10,u.prevNextButtonHeight=41,u.prevNextButtonWidth=24,u.aspectRatio=16/9,u.vimeoMetadataBaseUrl="http://vimeo.com/api/v2/video",u.computeDependentValues=function(){u.thumbnailWidth=u.thumbnailHeight*u.aspectRatio},u.computeDependentValues(),function(){var e=document.querySelector("body"),t=document.createElementNS(window.hg.util.svgNamespace,"svg"),i=document.createElementNS(window.hg.util.svgNamespace,"symbol"),n=document.createElementNS(window.hg.util.svgNamespace,"path");e.appendChild(t),t.appendChild(i),i.appendChild(n),t.style.display="none",i.setAttribute("id","chevron-left"),i.setAttribute("viewBox","0 0 247.88 428.75"),n.setAttribute("d","M149.03125,428.29625,0.54125,214.36625,149.03125,0.44725l97.959,0.000001-148.49,213.92,148.49,213.92z")}(),e.config=u,window.hg=window.hg||{},window.hg.Carousel=e,console.log("Carousel module loaded")}(),function(){function e(e,t,o,r){var a=this;a.index=e,a.parent=t,a.postData=o,a.isVertical=r,a.actualContentAreaWidth=N.targetContentAreaWidth,a.isComplete=!0,a.svg=null,a.svgDefs=null,a.originalTiles=[],a.originalBorderTiles=[],a.contentTiles=[],a.originalContentInnerIndices=null,a.innerIndexOfLastContentTile=null,a.originalCenter=null,a.currentCenter=null,a.panCenter=null,a.isPostOpen=!1,a.pagePost=null,a.isTransitioning=!1,a.expandedTile=null,a.sectors=null,a.allTiles=null,a.allNonContentTiles=null,a.lastExpansionJob=null,a.scrollTop=Number.NaN,a.annotations=new window.hg.Annotations(a),a.actualContentAreaWidth=Number.NaN,a.rowDeltaY=Number.NaN,a.tileDeltaX=Number.NaN,a.tileNeighborDistance=Number.NaN,a.oddRowTileCount=Number.NaN,a.evenRowTileCount=Number.NaN,a.oddRowXOffset=Number.NaN,a.rowCount=Number.NaN,a.evenRowXOffset=Number.NaN,a.contentAreaLeft=Number.NaN,a.contentAreaRight=Number.NaN,a.oddRowContentStartIndex=Number.NaN,a.evenRowContentStartIndex=Number.NaN,a.oddRowContentTileCount=Number.NaN,a.evenRowContentTileCount=Number.NaN,a.oddRowContentEndIndex=Number.NaN,a.evenRowContentEndIndex=Number.NaN,a.actualContentInnerIndices=Number.NaN,a.innerIndexOfLastContentTile=Number.NaN,a.rowCount=Number.NaN,a.height=Number.NaN,a.resize=u,a.start=m,a.update=b,a.draw=f,a.cancel=w,a.init=T,a.setBackgroundColor=g,a.updateTileColor=h,a.updateTileMass=p,a.setHoveredTile=v,a.createPagePost=y,a.destroyPagePost=C,a.updateAllTilesCollection=x,a.computeContentIndices=i,a.parent.setAttribute("data-hg-grid-parent","data-hg-grid-parent"),n.call(a),g.call(a),i.call(a),u.call(a)}function t(){var e,t,i,n,o,r,a,l,s;for(t=.5*(e=this).parent.clientWidth,i=e.parent.clientHeight,e.originalCenter.x=t,e.originalCenter.y=.5*i,e.currentCenter.x=e.originalCenter.x,e.currentCenter.y=e.originalCenter.y,e.panCenter.x=e.originalCenter.x,e.panCenter.y=e.originalCenter.y,e.actualContentAreaWidth=e.parent.clientWidth<N.targetContentAreaWidth?e.parent.clientWidth:N.targetContentAreaWidth,e.isVertical?(e.rowDeltaY=1.5*N.tileOuterRadius+N.tileGap*N.sqrtThreeOverTwo,e.tileDeltaX=N.tileShortLengthWithGap,e.oddRowTileCount=2*Math.ceil((t-(N.tileInnerRadius+N.tileGap))/N.tileShortLengthWithGap)+1,e.evenRowTileCount=2*Math.ceil((t-(N.tileShortLengthWithGap+.5*N.tileGap))/N.tileShortLengthWithGap)+2,e.oddRowXOffset=t-N.tileShortLengthWithGap*(e.oddRowTileCount-1)/2,e.rowCount=Math.ceil((i-(N.firstRowYOffset+2*N.tileOuterRadius+N.tileGap*Math.sqrt(3)))/e.rowDeltaY)+2):(e.rowDeltaY=N.tileInnerRadius+.5*N.tileGap,e.tileDeltaX=3*N.tileOuterRadius+N.tileGap*Math.sqrt(3),e.oddRowTileCount=2*Math.ceil((t-(e.tileDeltaX-N.tileOuterRadius))/e.tileDeltaX)+1,e.evenRowTileCount=2*Math.ceil((t-(e.tileDeltaX+N.tileGap*N.sqrtThreeOverTwo+.5*N.tileOuterRadius))/e.tileDeltaX)+2,e.oddRowXOffset=t-e.tileDeltaX*(e.oddRowTileCount-1)/2,e.rowCount=Math.ceil((i-(N.firstRowYOffset+3*N.tileInnerRadius+2*N.tileGap))/e.rowDeltaY)+4),e.evenRowXOffset=e.oddRowXOffset+(e.evenRowTileCount>e.oddRowTileCount?-1:1)*e.tileDeltaX*.5,e.contentAreaLeft=t-.5*e.actualContentAreaWidth,e.contentAreaRight=e.contentAreaLeft+e.actualContentAreaWidth,e.isVertical?(e.oddRowContentStartIndex=Math.ceil((e.contentAreaLeft-(e.oddRowXOffset-N.tileInnerRadius))/e.tileDeltaX),e.evenRowContentStartIndex=Math.ceil((e.contentAreaLeft-(e.evenRowXOffset-N.tileInnerRadius))/e.tileDeltaX)):(e.oddRowContentStartIndex=Math.ceil((e.contentAreaLeft-(e.oddRowXOffset-N.tileOuterRadius))/e.tileDeltaX),e.evenRowContentStartIndex=Math.ceil((e.contentAreaLeft-(e.evenRowXOffset-N.tileOuterRadius))/e.tileDeltaX)),e.oddRowContentTileCount=e.oddRowTileCount-2*e.oddRowContentStartIndex,e.evenRowContentTileCount=e.evenRowTileCount-2*e.evenRowContentStartIndex,e.oddRowContentEndIndex=e.oddRowContentStartIndex+e.oddRowContentTileCount-1,e.evenRowContentEndIndex=e.evenRowContentStartIndex+e.evenRowContentTileCount-1,e.actualContentInnerIndices=[],l=Math.ceil(N.contentStartingRowIndex/2)*e.oddRowContentTileCount+Math.floor(N.contentStartingRowIndex/2)*e.evenRowContentTileCount,r=0,a=e.originalContentInnerIndices.length;r<a;r+=1)e.actualContentInnerIndices[r]=e.originalContentInnerIndices[r]+l;for(e.innerIndexOfLastContentTile=e.actualContentInnerIndices[e.actualContentInnerIndices.length-1],s=l+e.innerIndexOfLastContentTile+1,n=0,o=0;s>n;)n+=o%2==0?e.oddRowContentTileCount:e.evenRowContentTileCount,o+=1;o>e.rowCount?(e.rowCount=o+(e.isVertical?0:1),e.height=(e.rowCount-2)*e.rowDeltaY):e.height=i}function i(){var e,t,i,n,o;for(o=[],n=(e=this).postData.length,t=0;t<n;t+=1)o[t]=1;for(n=1/N.contentDensity*e.postData.length,t=e.postData.length;t<n;t+=1)o[t]=0;for(o=window.hg.util.shuffle(o),e.originalContentInnerIndices=[],t=0,i=0,n=o.length;t<n;t+=1)o[t]&&(e.originalContentInnerIndices[i++]=t)}function n(){var e;(e=this).svg=document.createElementNS(window.hg.util.svgNamespace,"svg"),e.parent.appendChild(e.svg),e.svg.style.display="block",e.svg.style.position="relative",e.svg.style.width="1px",e.svg.style.height="1px",e.svg.style.zIndex="1000",e.svg.style.overflow="visible",e.svg.setAttribute("data-hg-svg","data-hg-svg"),e.svgDefs=document.createElementNS(window.hg.util.svgNamespace,"defs"),e.svg.appendChild(e.svgDefs)}function o(){var e,t,i,n,o,s,c,d,u,g,h,p,m,b,f,w,v,y;for((e=this).originalTiles=[],e.originalBorderTiles=[],t=0,m=0,b=0,d=N.firstRowYOffset,n=e.rowCount,w=[],f=l.call(e),v=e.oddRowTileCount>e.evenRowTileCount,i=0;i<n;i+=1,d+=e.rowDeltaY)for(p=i%2==0,y=v&&p||!v&&!p,p?(c=e.oddRowXOffset,s=e.oddRowTileCount):(c=e.evenRowXOffset,s=e.evenRowTileCount),o=0;o<s;t+=1,o+=1,c+=e.tileDeltaX)u=p?o<e.oddRowContentStartIndex||o>e.oddRowContentEndIndex:o<e.evenRowContentStartIndex||o>e.evenRowContentEndIndex,h=(g=e.isVertical?0===o||o===s-1||0===i||i===n-1:i<=1||i>=n-2||y&&(0===o||o===s-1))&&(e.isVertical?!(0!==o&&o!==s-1||0!==i&&i!==n-1):(i<=1||i>=n-2)&&y&&(0===o||o===s-1)),e.originalTiles[t]=new window.hg.Tile(e.svg,e,c,d,N.tileOuterRadius,e.isVertical,N.tileHue,N.tileSaturation,N.tileLightness,null,t,i,o,u,g,h,y,N.tileMass),g&&e.originalBorderTiles.push(e.originalTiles[t]),u||(m===e.actualContentInnerIndices[b]&&(e.originalTiles[t].setContent(e.postData[b]),e.contentTiles[b]=e.originalTiles[t],b+=1),m+=1),w[t]=a.call(e,i,n,o,s,y,f);r.call(e,w),x.call(e,e.originalTiles)}function r(e){var t,i,n,o,r,a;for(a=[],i=0,o=(t=this).originalTiles.length;i<o;i+=1){for(n=0,r=6;n<r;n+=1)a[n]=isNaN(e[i][n])?null:t.originalTiles[i+e[i][n]];t.originalTiles[i].setNeighborTiles(a)}}function a(e,t,i,n,o,r){var a,l;return a=this,l=r.slice(0),a.isVertical?(o?(0===i&&(l[3]=Number.NaN,l[4]=Number.NaN,l[5]=Number.NaN),i===n-1&&(l[0]=Number.NaN,l[1]=Number.NaN,l[2]=Number.NaN)):(0===i&&(l[4]=Number.NaN),i===n-1&&(l[1]=Number.NaN)),0===e&&(l[0]=Number.NaN,l[5]=Number.NaN),e===t-1&&(l[2]=Number.NaN,l[3]=Number.NaN)):(o&&(0===i&&(l[4]=Number.NaN,l[5]=Number.NaN),i===n-1&&(l[1]=Number.NaN,l[2]=Number.NaN)),0===e?(l[0]=Number.NaN,l[1]=Number.NaN,l[5]=Number.NaN):1===e&&(l[0]=Number.NaN),e===t-1?(l[2]=Number.NaN,l[3]=Number.NaN,l[4]=Number.NaN):e===t-2&&(l[3]=Number.NaN)),l}function l(){var e,t,i;return e=this,i=[],t=e.oddRowTileCount>e.evenRowTileCount?e.oddRowTileCount:e.evenRowTileCount,e.isVertical?(i[0]=1-t,i[1]=1,i[2]=t,i[3]=t-1,i[4]=-1,i[5]=-t):(i[0]=2*-t+1,i[1]=1-t,i[2]=t,i[3]=2*t-1,i[4]=t-1,i[5]=-t),i}function s(){var e,t;for(t=(e=this).svg,e.annotations.destroyAnnotations();t.firstChild;)t.removeChild(t.firstChild);e.svg.appendChild(e.svgDefs)}function c(){var e,t,i;for(t=0,i=(e=this).allTiles.length;t<i;t+=1)e.allTiles[t].element.setAttribute("data-hg-index",t)}function d(){var e=this;console.log("// --- Grid Info: ------- //"),console.log("// - Tile count="+e.originalTiles.length),console.log("// - Row count="+e.rowCount),console.log("// - Odd row tile count="+e.oddRowTileCount),console.log("// - Even row tile count="+e.evenRowTileCount),console.log("// ------------------------- //")}function u(){var e;(e=this).allTiles&&e.allTiles.forEach(function(e){e.destroy()}),e.isPostOpen&&e.pagePost.destroy(),e.originalCenter={x:Number.NaN,y:Number.NaN},e.currentCenter={x:Number.NaN,y:Number.NaN},e.panCenter={x:Number.NaN,y:Number.NaN},e.isPostOpen=!1,e.isTransitioning=!1,e.expandedTile=null,e.sectors=[],e.allTiles=null,e.allNonContentTiles=null,e.lastExpansionJob=null,e.parent.style.overflowX="hidden",e.parent.style.overflowY="auto",s.call(e),t.call(e),o.call(e),d.call(e)}function g(){this.parent.style.backgroundColor="hsl("+N.backgroundHue+","+N.backgroundSaturation+"%,"+N.backgroundLightness+"%)"}function h(){var e,t,i;for(t=0,i=(e=this).allNonContentTiles.length;t<i;t+=1)e.allNonContentTiles[t].setColor(N.tileHue,N.tileSaturation,N.tileLightness)}function p(e){var t,i,n;for(i=0,n=(t=this).allTiles.length;i<n;i+=1)t.allTiles[i].particle.m=e}function m(){this.isComplete=!1}function b(e,t){var i,n,o;for(n=0,o=(i=this).allTiles.length;n<o;n+=1)i.allTiles[n].update(e,t)}function f(){var e,t,i;for(t=0,i=(e=this).allTiles.length;t<i;t+=1)e.allTiles[t].draw();e.isPostOpen&&e.pagePost.draw()}function w(){this.isComplete=!0}function v(e){var t=this;t.hoveredTile&&t.hoveredTile.setIsHighlighted(!1),e&&e.setIsHighlighted(!0),t.hoveredTile=e}function y(e,t){var i=this;return i.pagePost=new window.hg.PagePost(e,t),i.pagePost}function C(){var e=this;e.pagePost.destroy(),e.pagePost=null}function x(e){var t,i,n,o=this;for(o.allTiles=e,o.allNonContentTiles=[],n=0,t=0,i=e.length;t<i;t+=1)e[t].holdsContent||(o.allNonContentTiles[n++]=e[t]);o.annotations.destroyAnnotations(),o.annotations.createAnnotations(),c.call(o)}function T(){N.computeDependentValues()}var N={};N.targetContentAreaWidth=800,N.backgroundHue=230,N.backgroundSaturation=1,N.backgroundLightness=4,N.tileHue=230,N.tileSaturation=67,N.tileLightness=22,N.tileOuterRadius=80,N.tileGap=12,N.contentStartingRowIndex=2,N.firstRowYOffset=-.8*N.tileOuterRadius,N.contentDensity=1,N.tileMass=1,N.computeDependentValues=function(){N.sqrtThreeOverTwo=Math.sqrt(3)/2,N.twoOverSqrtThree=2/Math.sqrt(3),N.tileInnerRadius=N.tileOuterRadius*N.sqrtThreeOverTwo,N.longGap=N.tileGap*N.twoOverSqrtThree,N.tileShortLengthWithGap=2*N.tileInnerRadius+N.tileGap,N.tileLongLengthWithGap=2*N.tileOuterRadius+N.longGap},N.computeDependentValues(),e.config=N,window.hg=window.hg||{},window.hg.Grid=e,console.log("Grid module loaded")}(),function(){function e(e){var i=this;i.grid=e,t.call(i)}function t(){function e(e){var t;(t=a(e))&&(t.element.getAttribute("data-hg-post-tile"),l.grid.setHoveredTile(t))}function t(e){var t;e.relatedTarget&&"HTML"!==e.relatedTarget.nodeName?(t=a(e))&&(t.element.getAttribute("data-hg-post-tile"),l.grid.setHoveredTile(null),window.hg.controller.transientJobs.HighlightHoverJob.create(l.grid,t),e.stopPropagation()):(console.log("The mouse left the viewport"),l.grid.setHoveredTile(null))}function n(e){e.target.getAttribute("data-hg-post-tile")||e.target.getAttribute("data-hg-tile")}function o(e){e.target.getAttribute("data-hg-post-tile")}function r(e){var t;0===e.button&&(t=a(e))&&(t.element.getAttribute("data-hg-post-tile"),i(l.grid,t))}function a(e){var t;return e.target.getAttribute("data-hg-tile")?(t=e.target.getAttribute("data-hg-index"),l.grid.allTiles[t]):null}var l;l=this,document.addEventListener("mouseover",e,!1),document.addEventListener("mouseout",t,!1),document.addEventListener("mousemove",n,!1),document.addEventListener("mousedown",o,!1),document.addEventListener("mouseup",r,!1)}function i(e,t){t.holdsContent?(n.possibleClickAnimations[n.contentTileClickAnimation](e,t),e.isPostOpen&&window.hg.controller.transientJobs.ClosePostJob.create(e,e.expandedTile),window.hg.controller.transientJobs.OpenPostJob.create(e,t)):(n.possibleClickAnimations[n.emptyTileClickAnimation](e,t),e.isPostOpen&&window.hg.controller.transientJobs.ClosePostJob.create(e,e.expandedTile))}var n={};n.contentTileClickAnimation="Radiate Highlight",n.emptyTileClickAnimation="Radiate Highlight",n.possibleClickAnimations={"Radiate Highlight":window.hg.controller.transientJobs.HighlightRadiateJob.create,"Radiate Lines":window.hg.controller.transientJobs.LinesRadiateJob.create,"Random Line":window.hg.controller.transientJobs.LineJob.create,None:function(){}},e.config=n,window.hg=window.hg||{},window.hg.Input=e,console.log("Input module loaded")}(),function(){function e(e,i){var n=this;n.tile=e,n.elements=null,n.carousel=null,n.opacity=0,n.paddingX=Number.NaN,n.paddingY=Number.NaN,n.halfWidth=Number.NaN,n.halfHeight=Number.NaN,n.innerWrapperPaddingFromCss=Number.NaN,n.center={x:i.x,y:i.y},n.loadCarouselMedia=r,n.draw=a,n.destroy=l,t.call(n),console.log("PagePost created: postId="+e.postData.id+", tileIndex="+e.originalIndex)}function t(){var e=this,t=new showdown.Converter;t.setFlavor("github");var r=window.hg.Grid.config.tileShortLengthWithGap*(window.hg.OpenPostJob.config.expandedDisplacementTileCount+4.25),l=window.hg.Grid.config.longGap*(2*window.hg.OpenPostJob.config.expandedDisplacementTileCount)+window.hg.Grid.config.tileOuterRadius*(3*window.hg.OpenPostJob.config.expandedDisplacementTileCount+2);switch(window.hg.OpenPostJob.config.expandedDisplacementTileCount){case 2:l+=window.hg.Grid.config.tileOuterRadius;break;case 1:l+=3*window.hg.Grid.config.tileOuterRadius,r-=window.hg.Grid.config.tileShortLengthWithGap;break;case 0:l+=4*window.hg.Grid.config.tileOuterRadius,r-=window.hg.Grid.config.tileShortLengthWithGap}var s,c,d,u,g,h,p,m,b=1.15*window.hg.Grid.config.tileShortLengthWithGap,f=2.25*window.hg.Grid.config.tileOuterRadius;e.tile.grid.isVertical?(s=r,c=l,d=b,u=f):(s=l,c=r,d=f,u=b),s-=2*d,c-=2*u,e.paddingX=d,e.paddingY=u,e.halfWidth=s/2,e.halfHeight=c/2,g="hsl("+window.hg.Grid.config.backgroundHue+","+window.hg.Grid.config.backgroundSaturation+"%,"+window.hg.Grid.config.backgroundLightness+"%)",h="hsla("+window.hg.Grid.config.backgroundHue+","+window.hg.Grid.config.backgroundSaturation+"%,"+window.hg.Grid.config.backgroundLightness+"%,0)";var w=document.createElement("div"),v=document.createElement("div"),y=document.createElement("div"),C=document.createElement("h1"),x=document.createElement("div"),T=document.createElement("div"),N=document.createElement("div"),A=document.createElement("div"),S=document.createElement("div"),D=document.createElement("div"),R=document.createElement("div"),P=document.createElement("div"),L=document.createElement("div");e.tile.grid.parent.appendChild(w),w.appendChild(v),v.appendChild(y),y.appendChild(T),y.appendChild(N),y.appendChild(A),y.appendChild(S),y.appendChild(C),y.appendChild(D),y.appendChild(x),y.appendChild(R),w.appendChild(P),w.appendChild(L),e.elements=[],e.elements.container=w,e.elements.title=C,e.elements.content=x,e.elements.logo=T,e.elements.date=N,e.elements.urls=D,e.elements.categories=R,w.setAttribute("data-hg-post-container","data-hg-post-container"),w.style.position="absolute",w.style.width=s+d+"px",w.style.height=c+2*u+"px",w.style.margin="0",w.style.padding="0",w.style.overflow="hidden",w.style.zIndex=window.hg.controller.isSafariBrowser?"1500":"500",v.setAttribute("data-hg-post-outer-wrapper","data-hg-post-outer-wrapper"),v.style.width=s+"px",v.style.height=c+2*u+"px",v.style.margin="0",v.style.padding="0 0 0 "+d+"px",v.style.overflow="auto",v.style.webkitOverflowScrolling="touch",y.setAttribute("data-hg-post-inner-wrapper","data-hg-post-inner-wrapper"),m=(p=parseInt(window.getComputedStyle(y,null).getPropertyValue("padding-top")))+u,y.style.padding=m+"px "+p+"px "+m+"px "+p+"px",y.style.minHeight=c-2*p+"px",y.style.overflowX="hidden",e.innerWrapperPaddingFromCss=p,C.setAttribute("data-hg-post-title","data-hg-post-title"),C.innerHTML=e.tile.postData.titleLong,P.style.position="absolute",P.style.top="0",P.style.left=d+"px",P.style.height=u+"px",P.style.width=s+"px",P.style.backgroundColor="#000000",P.style.background="linear-gradient(0,"+h+","+g+" 75%)",P.style.pointerEvents="none",L.style.position="absolute",L.style.bottom="0",L.style.left=d+"px",L.style.height=u+"px",L.style.width=s+"px",L.style.backgroundColor="#000000",L.style.background="linear-gradient(0,"+g+" 25%,"+h+")",L.style.pointerEvents="none",x.setAttribute("data-hg-post-content","data-hg-post-content"),x.innerHTML=t.makeHtml(e.tile.postData.content),T.setAttribute("data-hg-post-logo","data-hg-post-logo"),T.style.backgroundImage="url("+e.tile.postData.logoSrc+")",N.setAttribute("data-hg-post-date","data-hg-post-date"),i.call(e),A.setAttribute("data-hg-post-location","data-hg-post-location"),A.innerHTML=e.tile.postData.location,S.setAttribute("data-hg-post-job-title","data-hg-post-job-title"),S.innerHTML=e.tile.postData.jobTitle,D.setAttribute("data-hg-post-urls","data-hg-post-urls"),n.call(e),R.setAttribute("data-hg-post-categories","data-hg-post-categories"),o.call(e),e.carousel=new window.hg.Carousel(e.tile.grid,e,y,e.tile.postData.images,e.tile.postData.videos,!0),y.removeChild(e.carousel.elements.container),y.insertBefore(e.carousel.elements.container,D),a.call(e)}function i(){function e(e){var t;if("present"===e.toLowerCase())return e;switch((t=e.split("/")).length){case 1:return t[0];case 2:return s.monthLabels[t[0]]+" "+t[1];case 3:return s.monthLabels[t[0]]+" "+t[1]+", "+t[2];default:throw new Error("Invalid date string format: "+e)}}var t=this,i=t.elements.date,n=t.tile.postData.date;i.innerHTML="object"==typeof n?e(n.start)+" &ndash; "+e(n.end):e(n),t.tile.postData.date||(i.style.display="none")}function n(){function e(e,t){var n,o,r,a;o=t.replace(/^.*:\/\//,""),(n=s.urlLabels[e])||(console.warn("Unknown URL type: "+e),n=e),r=document.createElement("p"),a=document.createElement("a"),r.innerHTML=n+": ",r.style.overflow="hidden",r.style.whiteSpace="nowrap",r.style.textOverflow="ellipsis",a.innerHTML=o,a.setAttribute("href",t),r.appendChild(a),i.appendChild(r)}var t=this,i=t.elements.urls,n=Object.keys(t.tile.postData.urls);n.forEach(function(i){e(i,t.tile.postData.urls[i])}),n.length||(i.style.display="none")}function o(){function e(e){var t=document.createElement("span");i.appendChild(t),t.setAttribute("data-hg-post-category-card","data-hg-post-category-card"),t.style.display="inline-block",t.innerHTML=e}var t=this,i=t.elements.categories;t.tile.postData.categories.forEach(e),t.tile.postData.categories.length||(i.style.display="none")}function r(){this.carousel.loadMedia()}function a(){var e=this;e.elements.container.style.left=e.center.x-e.halfWidth-e.paddingX+"px",e.elements.container.style.top=e.center.y-e.halfHeight-e.paddingY+"px",e.elements.container.style.opacity=e.opacity,e.carousel.draw()}function l(){var e=this;e.carousel.destroy(),e.tile.grid.parent.removeChild(e.elements.container),e.elements=null}var s;(s={}).urlLabels={homepage:"Homepage",published:"Published at",demo:"Demo Site",npm:"NPM Registry",bower:"Bower Registry",codepen:"CodePen",github:"Repository",googleCode:"Repository",githubProfile:"GitHub",linkedin:"LinkedIn",facebook:"Facebook",googlePlus:"Google+",reverbNation:"Reverb Nation"},s.monthLabels={1:"Jan",2:"Feb",3:"Mar",4:"Apr",5:"May",6:"Jun",7:"Jul",8:"Aug",9:"Sep",10:"Oct",11:"Nov",12:"Dec"},s.computeDependentValues=function(){},s.computeDependentValues(),e.config=s,window.hg=window.hg||{},window.hg.PagePost=e,console.log("PagePost module loaded")}(),function(){function e(e,n,o,r){var a=this;a.grid=e,a.baseTile=n,a.index=o,a.expandedDisplacementTileCount=r,a.originalAnchor={x:Number.NaN,y:Number.NaN},a.currentAnchor={x:Number.NaN,y:Number.NaN},a.majorNeighborDelta={x:Number.NaN,y:Number.NaN},a.minorNeighborDelta={x:Number.NaN,y:Number.NaN},a.expandedDisplacement={x:Number.NaN,y:Number.NaN},a.tiles=null,a.tilesByIndex=null,a.newTiles=null,a.initializeExpandedStateExternalTileNeighbors=c,a.destroy=d,a.setOriginalPositionForExpansion=u,a.updateCurrentPosition=g,t.call(a),i.call(a)}function t(){var e,t,i,n;(e=this).majorNeighborIndex=e.index,e.minorNeighborIndex=(e.index+1)%6,e.majorNeighborDelta.x=e.baseTile.neighborStates[e.majorNeighborIndex].tile.originalAnchor.x-e.baseTile.originalAnchor.x,e.majorNeighborDelta.y=e.baseTile.neighborStates[e.majorNeighborIndex].tile.originalAnchor.y-e.baseTile.originalAnchor.y,e.minorNeighborDelta.x=e.baseTile.neighborStates[e.minorNeighborIndex].tile.originalAnchor.x-e.baseTile.originalAnchor.x,e.minorNeighborDelta.y=e.baseTile.neighborStates[e.minorNeighborIndex].tile.originalAnchor.y-e.baseTile.originalAnchor.y,t=(e.index+5)%6,i=e.baseTile.neighborStates[t].tile.originalAnchor.x-e.baseTile.originalAnchor.x,n=e.baseTile.neighborStates[t].tile.originalAnchor.y-e.baseTile.originalAnchor.y,e.expandedDisplacement.x=e.expandedDisplacementTileCount*i,e.expandedDisplacement.y=e.expandedDisplacementTileCount*n,e.originalAnchor.x=e.baseTile.originalAnchor.x+e.majorNeighborDelta.x,e.originalAnchor.y=e.baseTile.originalAnchor.y+e.majorNeighborDelta.y,e.currentAnchor.x=e.originalAnchor.x,e.currentAnchor.y=e.originalAnchor.y}function i(){var e;(e=this).tilesByIndex=[],e.newTiles=[],e.tiles=[],n.call(e),o.call(e),l.call(e),s.call(e)}function n(){var e;e=this,function(){var t,i,n,o;n=0,t=e.baseTile.neighborStates[e.majorNeighborIndex].tile;do{i=t,o=0,e.tilesByIndex[n]=e.tilesByIndex[n]||[];do{e.tilesByIndex[n][o]||r.call(e,i,n,o),o++}while(i.neighborStates[e.minorNeighborIndex]&&(i=i.neighborStates[e.minorNeighborIndex].tile));n++}while(t.neighborStates[e.majorNeighborIndex]&&(t=t.neighborStates[e.majorNeighborIndex].tile))}(),function(){var t,i,n,o;o=0,t=e.baseTile.neighborStates[e.majorNeighborIndex].tile;do{i=t,n=0;do{e.tilesByIndex[n]=e.tilesByIndex[n]||[],e.tilesByIndex[n][o]||r.call(e,i,n,o),n++}while(i.neighborStates[e.majorNeighborIndex]&&(i=i.neighborStates[e.majorNeighborIndex].tile));o++}while(t.neighborStates[e.minorNeighborIndex]&&(t=t.neighborStates[e.minorNeighborIndex].tile))}()}function o(){var e,t;e=this,function(t){var i,n,o,r,l,s;l=0,s=0,o=i=e.baseTile.originalAnchor.x+e.majorNeighborDelta.x,r=n=e.baseTile.originalAnchor.y+e.majorNeighborDelta.y;do{e.tilesByIndex[l]=e.tilesByIndex[l]||[];do{e.tilesByIndex[l][s]||a.call(e,l,s,o,r),s++,o+=e.minorNeighborDelta.x,r+=e.minorNeighborDelta.y}while(o>=t.minX&&o<=t.maxX&&r>=t.minY&&r<=t.maxY);s=0,o=i+ ++l*e.majorNeighborDelta.x,r=n+l*e.majorNeighborDelta.y}while(o>=t.minX&&o<=t.maxX&&r>=t.minY&&r<=t.maxY)}(t=function(){var t,i,n,o,r,a;return r=window.innerWidth/2+window.hg.Grid.config.tileLongLengthWithGap,a=window.innerHeight/2+window.hg.Grid.config.tileLongLengthWithGap,t=e.baseTile.originalAnchor.x-r,i=e.baseTile.originalAnchor.x+r,n=e.baseTile.originalAnchor.y-a,o=e.baseTile.originalAnchor.y+a,t-=e.expandedDisplacement.x,i-=e.expandedDisplacement.x,n-=e.expandedDisplacement.y,o-=e.expandedDisplacement.y,{minX:t,maxX:i,minY:n,maxY:o}}()),function(t){var i,n,o,r,l,s;l=0,s=0,o=i=e.baseTile.originalAnchor.x+e.majorNeighborDelta.x,r=n=e.baseTile.originalAnchor.y+e.majorNeighborDelta.y;do{do{e.tilesByIndex[l]=e.tilesByIndex[l]||[],e.tilesByIndex[l][s]||a.call(e,l,s,o,r),l++,o+=e.majorNeighborDelta.x,r+=e.majorNeighborDelta.y}while(o>=t.minX&&o<=t.maxX&&r>=t.minY&&r<=t.maxY);l=0,o=i+ ++s*e.minorNeighborDelta.x,r=n+s*e.minorNeighborDelta.y}while(o>=t.minX&&o<=t.maxX&&r>=t.minY&&r<=t.maxY)}(t)}function r(e,t,i){var n=this;n.tilesByIndex[t][i]=e,window.hg.Tile.initializeTileExpandedState(e,n,t,i),e.sectorAnchorOffset.x=e.originalAnchor.x-n.originalAnchor.x,e.sectorAnchorOffset.y=e.originalAnchor.y-n.originalAnchor.y}function a(e,t,i,n){var o=this,a=new window.hg.Tile(o.grid.svg,o.grid,i,n,window.hg.Grid.config.tileOuterRadius,o.grid.isVertical,window.hg.Grid.config.tileHue,window.hg.Grid.config.tileSaturation,window.hg.Grid.config.tileLightness,null,Number.NaN,Number.NaN,Number.NaN,!0,!1,!1,!1,window.hg.Grid.config.tileMass);return r.call(o,a,e,t),o.newTiles[o.newTiles.length]=a,a}function l(){var e,t,i;for(e=this,t=0;e.tilesByIndex[t];t+=1)for(i in e.tilesByIndex[t])!function(e,t,i){var n,o,r,a;for(n=e.tilesByIndex[t][i],o=0;o<6;o+=1){switch(o){case e.index:r=t+1,a=i;break;case(e.index+1)%6:r=t,a=i+1;break;case(e.index+2)%6:r=t-1,a=i+1;break;case(e.index+3)%6:r=t-1,a=i;break;case(e.index+4)%6:r=t,a=i-1;break;case(e.index+5)%6:r=t+1,a=i-1;break;default:throw new Error("Invalid neighborRelationIndex: "+o)}e.tilesByIndex[r]&&e.tilesByIndex[r][a]&&window.hg.Tile.setTileNeighborState(n,o,e.tilesByIndex[r][a])}}(e,t,parseInt(i))}function s(){var e,t,i,n;e=this,t=0;for(i in e.tilesByIndex)for(n in e.tilesByIndex[i])e.tiles[t++]=e.tilesByIndex[i][n]}function c(e){var t,i,n,o,r,a,l,s,c;for(a=((t=this).index+2)%6,l=(t.index+3)%6,s=e[(t.index+1)%6],i=t.tilesByIndex[0],n=s.tilesByIndex,c=0,i[o=t.expandedDisplacementTileCount]&&window.hg.Tile.setTileNeighborState(i[o],a,s.tilesByIndex[c][0]),o+=1,r=i.length-1;o<r;o+=1)window.hg.Tile.setTileNeighborState(i[o],l,s.tilesByIndex[c][0]),c+=1,window.hg.Tile.setTileNeighborState(i[o],a,s.tilesByIndex[c][0]);for(i[o]&&(window.hg.Tile.setTileNeighborState(i[o],l,s.tilesByIndex[c][0]),c+=1,s.tilesByIndex[c]&&s.tilesByIndex[c][0]&&window.hg.Tile.setTileNeighborState(i[o],a,s.tilesByIndex[c][0])),r=t.expandedDisplacementTileCount+1,r=i.length<r?i.length:r,o=0;o<r;o+=1)i[o].expandedState.isBorderTile=!0;for(o=(o=i.length-1-t.expandedDisplacementTileCount)<0?0:o,r=n.length;o<r;o+=1)n[o][0]&&(n[o][0].expandedState.isBorderTile=!0);for(o=0,r=t.tilesByIndex.length;o<r;o+=1)t.tilesByIndex[o].length&&(t.tilesByIndex[o][t.tilesByIndex[o].length-1].expandedState.isBorderTile=!0)}function d(e){var t,i,n;if(t=this,e)for(i=0,n=t.tiles.length;i<n;i+=1)t.tiles[i].expandedState=null;for(i=0,n=t.newTiles.length;i<n;i+=1)t.newTiles[i].neighborStates=null,t.newTiles[i].destroy()}function u(e){var t,i,n,o,r;for(t=this,e?(o=t.expandedDisplacement.x,r=t.expandedDisplacement.y):(o=-t.expandedDisplacement.x,r=-t.expandedDisplacement.y),t.originalAnchor.x+=o,t.originalAnchor.y+=r,i=0,n=t.tiles.length;i<n;i+=1)t.tiles[i].originalAnchor.x+=o,t.tiles[i].originalAnchor.y+=r}function g(e,t){var i,n,o;for((i=this).currentAnchor.x=i.originalAnchor.x+e,i.currentAnchor.y=i.originalAnchor.y+t,n=0,o=i.tiles.length;n<o;n+=1)i.tiles[n].currentAnchor.x+=e,i.tiles[n].currentAnchor.y+=t}var h={};h.computeDependentValues=function(){},h.computeDependentValues(),e.config=h,window.hg=window.hg||{},window.hg.Sector=e,console.log("Sector module loaded")}(),function(){function e(e,n,r,f,w,v,T,N,A,S,D,R,P,L,J,I,E,O){var G=this;G.svg=e,G.grid=n,G.element=null,G.currentAnchor={x:r,y:f},G.originalAnchor={x:r,y:f},G.sectorAnchorOffset={x:Number.NaN,y:Number.NaN},G.outerRadius=w,G.isVertical=v,G.originalColor={h:T,s:N,l:A},G.currentColor={h:T,s:N,l:A},G.postData=S,G.holdsContent=!!S,G.tilePost=null,G.originalIndex=D,G.rowIndex=R,G.columnIndex=P,G.isMarginTile=L,G.isBorderTile=J,G.isCornerTile=I,G.isInLargerRow=E,G.expandedState=null,G.isHighlighted=!1,G.imageScreenOpacity=Number.NaN,G.neighborStates=[],G.vertices=null,G.currentVertexDeltas=null,G.originalVertexDeltas=null,G.expandedVertexDeltas=null,G.particle=null,G.setContent=a,G.setNeighborTiles=l,G.setColor=s,G.setIsHighlighted=c,G.update=d,G.draw=u,G.applyExternalForce=g,G.fixPosition=h,G.getNeighborStates=p,G.getIsBorderTile=m,G.setIsBorderTile=b,G.destroy=y,G.hide=C,G.show=x,t.call(G),i.call(G,O),G.holdsContent&&o.call(G)}function t(){var e,t;e=this,t=isNaN(e.originalIndex)?parseInt(1e6*Math.random()+1e3):e.originalIndex,e.originalVertexDeltas=f(e.outerRadius,e.isVertical),e.currentVertexDeltas=e.originalVertexDeltas.slice(0),e.vertices=[],n.call(e,e.currentAnchor.x,e.currentAnchor.y),e.element=document.createElementNS(window.hg.util.svgNamespace,"polygon"),e.svg.appendChild(e.element),e.element.id="hg-"+t,e.element.setAttribute("data-hg-tile","data-hg-tile"),e.element.style.cursor="pointer",u.call(e)}function i(e){var t;(t=this).particle={},t.particle.px=t.currentAnchor.x,t.particle.py=t.currentAnchor.y,t.particle.vx=0,t.particle.vy=0,t.particle.fx=0,t.particle.fy=0,t.particle.m=e,t.particle.forceAccumulatorX=0,t.particle.forceAccumulatorY=0}function n(e,t){var i,n,o;for(i=this,n=0,o=0;n<6;n+=1)i.vertices[o]=e+i.currentVertexDeltas[o++],i.vertices[o]=t+i.currentVertexDeltas[o++]}function o(){var e=this;e.element.setAttribute("data-hg-post-tilePost","data-hg-post-tilePost"),e.tilePost=new window.hg.TilePost(e)}function r(){var e=this;e.element.removeAttribute("data-hg-post-tilePost"),e.tilePost.destroy(),e.tilePost=null}function a(e){var t,i;i=(t=this).holdsContent,t.postData=e,t.holdsContent=!!e,i?(r.call(t),o.call(t)):o.call(t)}function l(e){var t,i;for(t=this,i=0;i<6;i+=1)w(t,i,e[i])}function s(e,t,i){var n=this;n.isHighlighted&&(e+=window.hg.HighlightHoverJob.config.deltaHue,t+=window.hg.HighlightHoverJob.config.deltaSaturation,i+=window.hg.HighlightHoverJob.config.deltaLightness),n.originalColor.h=e,n.originalColor.s=t,n.originalColor.l=i,n.currentColor.h=e,n.currentColor.s=t,n.currentColor.l=i}function c(e){var t,i,n,o;t=this,e?t.isHighlighted?(i=t.originalColor.h,n=t.originalColor.s,o=t.originalColor.l):(i=t.originalColor.h+window.hg.HighlightHoverJob.config.deltaHue*window.hg.HighlightHoverJob.config.opacity,n=t.originalColor.s+window.hg.HighlightHoverJob.config.deltaSaturation*window.hg.HighlightHoverJob.config.opacity,o=t.originalColor.l+window.hg.HighlightHoverJob.config.deltaLightness*window.hg.HighlightHoverJob.config.opacity):t.isHighlighted?(i=t.originalColor.h-window.hg.HighlightHoverJob.config.deltaHue*window.hg.HighlightHoverJob.config.opacity,n=t.originalColor.s-window.hg.HighlightHoverJob.config.deltaSaturation*window.hg.HighlightHoverJob.config.opacity,o=t.originalColor.l-window.hg.HighlightHoverJob.config.deltaLightness*window.hg.HighlightHoverJob.config.opacity):(i=t.originalColor.h,n=t.originalColor.s,o=t.originalColor.l),t.originalColor.h=i,t.originalColor.s=n,t.originalColor.l=o,t.currentColor.h=i,t.currentColor.s=n,t.currentColor.l=o,t.isHighlighted=e}function d(e,t){var i,o,r,a,l,s,c,d,u,g,h,p,m;if(!(i=this).particle.isFixed){for(a=i.getNeighborStates(),l=i.getIsBorderTile(),i.particle.forceAccumulatorX+=-T.dragCoeff*i.particle.vx,i.particle.forceAccumulatorY+=-T.dragCoeff*i.particle.vy,o=0,r=a.length;o<r;o+=1)(s=a[o])&&(s.springForceX?(i.particle.forceAccumulatorX+=s.springForceX,i.particle.forceAccumulatorY+=s.springForceY,s.springForceX=0,s.springForceY=0):(c=s.tile.particle.px-i.particle.px,d=s.tile.particle.py-i.particle.py,u=c*(s.tile.particle.vx-i.particle.vx)+d*(s.tile.particle.vy-i.particle.vy),g=Math.sqrt(c*c+d*d),p=c*(h=(T.neighborSpringCoeff*(g-s.restLength)+T.neighborDampingCoeff*u/g)/g),m=d*h,i.particle.forceAccumulatorX+=p,i.particle.forceAccumulatorY+=m,s.neighborsRelationshipObj.springForceX=-p,s.neighborsRelationshipObj.springForceY=-m));c=i.currentAnchor.x-i.particle.px,d=i.currentAnchor.y-i.particle.py,(g=Math.sqrt(c*c+d*d))>0&&(u=c*-i.particle.vx+d*-i.particle.vy,p=c*(h=l?(T.borderAnchorSpringCoeff*g+T.borderAnchorDampingCoeff*u/g)/g:(T.innerAnchorSpringCoeff*g+T.innerAnchorDampingCoeff*u/g)/g),m=d*h,i.particle.forceAccumulatorX+=p,i.particle.forceAccumulatorY+=m),i.particle.fx=i.particle.forceAccumulatorX/i.particle.m*t,i.particle.fy=i.particle.forceAccumulatorY/i.particle.m*t,i.particle.px+=i.particle.vx*t,i.particle.py+=i.particle.vy*t,i.particle.vx+=i.particle.fx,i.particle.vy+=i.particle.fy,i.particle.fx=i.particle.fx<T.forceSuppressionLowerThreshold&&i.particle.fx>T.forceSuppressionThresholdNegative?0:i.particle.fx,i.particle.fy=i.particle.fy<T.forceSuppressionLowerThreshold&&i.particle.fy>T.forceSuppressionThresholdNegative?0:i.particle.fy,i.particle.vx=i.particle.vx<T.velocitySuppressionLowerThreshold&&i.particle.vx>T.velocitySuppressionThresholdNegative?0:i.particle.vx,i.particle.vy=i.particle.vy<T.velocitySuppressionLowerThreshold&&i.particle.vy>T.velocitySuppressionThresholdNegative?0:i.particle.vy,i.particle.forceAccumulatorX=0,i.particle.forceAccumulatorY=0,n.call(i,i.particle.px,i.particle.py)}}function u(){var e,t,i,n;for(e=this,t=0,i="";t<12;)i+=e.vertices[t++]+","+e.vertices[t++]+" ";e.element.setAttribute("points",i),e.holdsContent?e.tilePost.draw():(n="hsl("+e.currentColor.h+","+e.currentColor.s+"%,"+e.currentColor.l+"%)",e.element.setAttribute("fill",n))}function g(e,t){var i;(i=this).particle.forceAccumulatorX+=e,i.particle.forceAccumulatorY+=t}function h(e,t){var i;(i=this).particle.isFixed=!0,i.particle.px=e,i.particle.py=t}function p(){var e=this;return e.grid.isPostOpen?e.expandedState.neighborStates:e.neighborStates}function m(){var e=this;return e.grid.isPostOpen?e.expandedState.isBorderTile:e.isBorderTile}function b(e){var t=this;t.grid.isPostOpen?t.expandedState.isBorderTile=e:t.isBorderTile=e}function f(e,t){var i,n,o,r,a;for(t?(o=T.verticalSines,r=T.verticalCosines):(o=T.horizontalSines,r=T.horizontalCosines),i=0,n=0,a=[];i<6;i+=1)a[n++]=e*r[i],a[n++]=e*o[i];return a}function w(e,t,i){function n(e,t,i){e[t]=e[t]||{tile:i,restLength:window.hg.Grid.config.tileShortLengthWithGap,neighborsRelationshipObj:null,springForceX:0,springForceY:0}}var o,r,a;o=e.getNeighborStates(),i?(n(o,t,i),n(r=i.getNeighborStates(),a=(t+3)%6,e),o[t].neighborsRelationshipObj=r[a],r[a].neighborsRelationshipObj=o[t]):o[t]=null}function v(e,t,i,n){e.expandedState={sector:t,sectorMajorIndex:i,sectorMinorIndex:n,neighborStates:[],isBorderTile:!1}}function y(){var e=this;e.holdsContent&&r.call(e),e.svg.removeChild(e.element)}function C(){var e=this;e.element.style.display="none",e.holdsContent&&(e.tilePost.elements.title.style.display="none")}function x(){var e=this;e.element.style.display="block",e.holdsContent&&(e.tilePost.elements.title.style.display="block")}var T;(T={}).dragCoeff=.01,T.neighborSpringCoeff=1e-5,T.neighborDampingCoeff=.001,T.innerAnchorSpringCoeff=4e-5,T.innerAnchorDampingCoeff=.001,T.borderAnchorSpringCoeff=4e-5,T.borderAnchorDampingCoeff=.001,T.forceSuppressionLowerThreshold=5e-4,T.velocitySuppressionLowerThreshold=5e-4,T.computeDependentValues=function(){T.forceSuppressionThresholdNegative=-T.forceSuppressionLowerThreshold,T.velocitySuppressionThresholdNegative=-T.velocitySuppressionLowerThreshold},T.computeDependentValues(),e.computeVertexDeltas=f,e.setTileNeighborState=w,e.initializeTileExpandedState=v,e.config=T,window.hg=window.hg||{},window.hg.Tile=e,function(){var e,t,i,n,o;for(n=-(i=Math.PI/3),o=Math.PI/6-2*i,T.horizontalSines=[],T.horizontalCosines=[],e=0,t=n;e<6;e+=1,t+=i)T.horizontalSines[e]=Math.sin(t),T.horizontalCosines[e]=Math.cos(t);for(T.verticalSines=[],T.verticalCosines=[],e=0,t=o;e<6;e+=1,t+=i)T.verticalSines[e]=Math.sin(t),T.verticalCosines[e]=Math.cos(t)}(),console.log("Tile module loaded")}(),function(){function e(e){var o=this;o.tile=e,o.elements=null,o.draw=i,o.destroy=n,t.call(o)}function t(){var e,t,n,r,a=this,l="hg-pattern-"+a.tile.postData.id,s="hsl("+window.hg.Grid.config.backgroundHue+","+window.hg.Grid.config.backgroundSaturation+"%,"+window.hg.Grid.config.backgroundLightness+"%)",c=2*window.hg.Grid.config.tileOuterRadius,d=-o.fontSize*(1.5+.53*(a.tile.postData.titleShort.split("\n").length-1)),u=window.hg.Grid.config.tileOuterRadius/window.hg.Grid.config.tileInnerRadius,g=(1-u)/2;a.tile.grid.isVertical?(e=u,t=1,n=g,r="0"):(e=1,t=u,n="0",r=g);var h=document.createElementNS(window.hg.util.svgNamespace,"pattern"),p=document.createElementNS(window.hg.util.svgNamespace,"image"),m=document.createElementNS(window.hg.util.svgNamespace,"rect"),b=document.createElement("h2");a.tile.grid.svgDefs.appendChild(h),h.appendChild(p),h.appendChild(m),a.tile.grid.parent.appendChild(b),a.elements=[],a.elements.backgroundPattern=h,a.elements.backgroundImage=p,a.elements.backgroundImageScreen=m,a.elements.title=b,h.setAttribute("id",l),h.setAttribute("patternContentUnits","objectBoundingBox"),h.setAttribute("width","1"),h.setAttribute("height","1"),p.setAttributeNS(window.hg.util.xlinkNamespace,"xlink:href",a.tile.postData.thumbnailSrc),p.setAttribute("preserveAspectRatio","none"),p.setAttribute("x",n),p.setAttribute("y",r),p.setAttribute("width",e),p.setAttribute("height",t),m.setAttribute("width","1"),m.setAttribute("height","1"),m.setAttribute("fill",s),a.tile.element.setAttribute("fill","url(#"+l+")"),b.innerHTML=a.tile.postData.titleShort,b.setAttribute("data-hg-tile-title","data-hg-tile-title"),b.style.position="absolute",b.style.left=-c/2+"px",b.style.top=d+"px",b.style.width=c+"px",b.style.height=c+"px",b.style.fontSize=o.fontSize+"px",b.style.textAlign="center",b.style.whiteSpace="pre-wrap",b.style.pointerEvents="none",b.style.zIndex="1200",a.tile.imageScreenOpacity=o.inactiveScreenOpacity,i.call(a)}function i(){var e=this,t=e.tile.isHighlighted?window.hg.TilePost.config.activeScreenOpacity:e.tile.imageScreenOpacity,i=.5+2*(t-.5);i=i>1?1:i<0?0:i,window.hg.util.setTransform(e.elements.title,"translate("+e.tile.particle.px+"px,"+e.tile.particle.py+"px)"),e.elements.backgroundImageScreen.setAttribute("opacity",t),e.tile.grid.expandedTile!==e.tile&&(e.elements.title.style.opacity=i)}function n(){var e=this;e.tile.grid.parent.removeChild(e.elements.title),e.tile.grid.svgDefs.removeChild(e.elements.backgroundPattern)}var o;(o={}).activeScreenOpacity=0,o.inactiveScreenOpacity=.8,o.fontSize=18,o.computeDependentValues=function(){},o.computeDependentValues(),e.config=o,window.hg=window.hg||{},window.hg.TilePost=e,console.log("TilePost module loaded")}(),function(){function e(e){var t=this;t.startTime=e,t.isComplete=!1}function t(e,t){var i,n,o;for(n=0,o=(i=this).grid.allTiles.length;n<o;n+=1)i.grid.allTiles[n].currentColor.h=i.grid.allTiles[n].originalColor.h,i.grid.allTiles[n].currentColor.s=i.grid.allTiles[n].originalColor.s,i.grid.allTiles[n].currentColor.l=i.grid.allTiles[n].originalColor.l,i.grid.allTiles[n].imageScreenOpacity=window.hg.TilePost.config.inactiveScreenOpacity}function i(){}function n(){this.isComplete=!0}function o(){var e=this;r.call(e)}function r(){}function a(a){var l=this;l.grid=a,l.startTime=0,l.isComplete=!0,l.start=e,l.update=t,l.draw=i,l.cancel=n,l.refresh=o,l.init=r,l.init(),console.log("ColorResetJob created")}var l={};l.computeDependentValues=function(){},l.computeDependentValues(),a.config=l,window.hg=window.hg||{},window.hg.ColorResetJob=a,console.log("ColorResetJob module loaded")}(),function(){function e(e){var t=this;t.startTime=e,t.isComplete=!1}function t(e,t){}function i(){}function n(){this.isComplete=!0}function o(){var e=this;r.call(e)}function r(){l.computeDependentValues()}function a(a){var l=this;l.grid=a,l.startTime=0,l.isComplete=!0,l.start=e,l.update=t,l.draw=i,l.cancel=n,l.refresh=o,l.init=r,l.init(),console.log("ColorShiftJob created")}var l={};l.computeDependentValues=function(){},l.computeDependentValues(),a.config=l,window.hg=window.hg||{},window.hg.ColorShiftJob=a,console.log("ColorShiftJob module loaded")}(),function(){function e(){var e,t,i,n,o,r,a,l;for(e=this,l=d.wavelength/2,e.waveProgressOffsetsNonContentTiles=[],e.waveProgressOffsetsContentTiles=[],t=0,i=e.grid.allNonContentTiles.length;t<i;t+=1)r=(n=e.grid.allNonContentTiles[t]).originalAnchor.x-d.originX,a=n.originalAnchor.y-d.originY,o=Math.sqrt(r*r+a*a)+d.wavelength,e.waveProgressOffsetsNonContentTiles[t]=-(o%d.wavelength-l)/l;for(t=0,i=e.grid.contentTiles.length;t<i;t+=1)r=(n=e.grid.contentTiles[t]).originalAnchor.x-d.originX,a=n.originalAnchor.y-d.originY,o=Math.sqrt(r*r+a*a)+d.wavelength,e.waveProgressOffsetsContentTiles[t]=-(o%d.wavelength-l)/l}function t(e,t,i){var n=Math.sin((((e+1+i)%2+2)%2-1)*Math.PI);t.currentColor.h+=d.deltaHue*n*d.opacity,t.currentColor.s+=d.deltaSaturation*n*d.opacity,t.currentColor.l+=d.deltaLightness*n*d.opacity}function i(e,t,i){var n=.5*Math.sin((((e+1+i)%2+2)%2-1)*Math.PI)+.5;t.imageScreenOpacity+=-n*d.opacity*d.deltaOpacityImageBackgroundScreen}function n(e){var t=this;t.startTime=e,t.isComplete=!1}function o(e,n){var o,r,a,l;for(o=this,r=(e+d.halfPeriod)/d.period%2-1,a=0,l=o.grid.allNonContentTiles.length;a<l;a+=1)t(r,o.grid.allNonContentTiles[a],o.waveProgressOffsetsNonContentTiles[a]);for(a=0,l=o.grid.contentTiles.length;a<l;a+=1)i(r,o.grid.contentTiles[a],o.waveProgressOffsetsContentTiles[a])}function r(){}function a(){this.isComplete=!0}function l(){var e=this;s.call(e)}function s(){var t=this;d.computeDependentValues(),e.call(t)}function c(e){var t=this;t.grid=e,t.waveProgressOffsetsNonContentTiles=null,t.waveProgressOffsetsContentTiles=null,t.startTime=0,t.isComplete=!0,t.start=n,t.update=o,t.draw=r,t.cancel=a,t.refresh=l,t.init=s,t.init(),console.log("ColorWaveJob created")}var d={};d.period=1e3,d.wavelength=600,d.originX=-100,d.originY=1400,d.deltaHue=0,d.deltaSaturation=0,d.deltaLightness=5,d.deltaOpacityImageBackgroundScreen=.18,d.opacity=.5,d.computeDependentValues=function(){d.halfPeriod=d.period/2},d.computeDependentValues(),c.config=d,window.hg=window.hg||{},window.hg.ColorWaveJob=c,console.log("ColorWaveJob module loaded")}(),function(){function e(e){var t=this;t.startTime=e,t.isComplete=!1}function t(e,t){var i,n,o;for(n=0,o=(i=this).grid.allTiles.length;n<o;n+=1)i.grid.allTiles[n].currentAnchor.x=i.grid.allTiles[n].originalAnchor.x,i.grid.allTiles[n].currentAnchor.y=i.grid.allTiles[n].originalAnchor.y;i.grid.isPostOpen&&(i.grid.pagePost.carousel.currentIndexPositionRatio=i.grid.pagePost.carousel.currentIndex)}function i(){}function n(){this.isComplete=!0}function o(){var e=this;r.call(e)}function r(){}function a(a){var l=this;l.grid=a,l.startTime=0,l.isComplete=!0,l.start=e,l.update=t,l.draw=i,l.cancel=n,l.refresh=o,l.init=r,l.init(),console.log("DisplacementResetJob created")}var l={};l.computeDependentValues=function(){},l.computeDependentValues(),a.config=l,window.hg=window.hg||{},window.hg.DisplacementResetJob=a,console.log("DisplacementResetJob module loaded")}(),function(){function e(){var e,t,i,n,o,r,a,l;for(e=this,l=c.wavelength/2,e.waveProgressOffsets=[],t=0,i=e.grid.allTiles.length;t<i;t+=1)r=(n=e.grid.allTiles[t]).originalAnchor.x-c.originX,a=n.originalAnchor.y-c.originY,o=Math.sqrt(r*r+a*a)+c.wavelength,e.waveProgressOffsets[t]=-(o%c.wavelength-l)/l}function t(e,t,i){var n=Math.sin((((e+1+i)%2+2)%2-1)*Math.PI);t.currentAnchor.x+=c.tileDeltaX*n,t.currentAnchor.y+=c.tileDeltaY*n}function i(e){var t=this;t.startTime=e,t.isComplete=!1}function n(e,i){var n,o,r,a;for(n=this,o=(e+c.halfPeriod)/c.period%2-1,r=0,a=n.grid.allTiles.length;r<a;r+=1)t(o,n.grid.allTiles[r],n.waveProgressOffsets[r])}function o(){}function r(){this.isComplete=!0}function a(){var e=this;l.call(e)}function l(){var t=this;c.computeDependentValues(),e.call(t)}function s(e){var t=this;t.grid=e,t.waveProgressOffsets=null,t.startTime=0,t.isComplete=!0,t.start=i,t.update=n,t.draw=o,t.cancel=r,t.refresh=a,t.init=l,t.init(),console.log("DisplacementWaveJob created")}var c={};c.period=3200,c.wavelength=1800,c.originX=0,c.originY=0,c.tileDeltaX=-15,c.tileDeltaY=-c.tileDeltaX*Math.sqrt(3),c.computeDependentValues=function(){c.halfPeriod=c.period/2,c.displacementAmplitude=Math.sqrt(c.tileDeltaX*c.tileDeltaX+c.tileDeltaY*c.tileDeltaY)},c.computeDependentValues(),s.config=c,window.hg=window.hg||{},window.hg.DisplacementWaveJob=s,console.log("DisplacementWaveJob module loaded")}(),function(){function e(e){var t=this;console.log("CarouselImageSlideJob "+(e?"cancelled":"completed")),t.isComplete=!0,t.onComplete(),t.carousel.onSlideFinished()}function t(e){var t=this;t.startTime=e,t.isComplete=!1,t.indexInitialDisplacement=t.carousel.previousIndex-t.carousel.currentIndex}function i(t,i){var n,o;o=(t-(n=this).startTime)/n.duration,o=(o=1-window.hg.util.easingFunctions.easeInOutCubic(o))<0?0:o,n.carousel.currentIndexPositionRatio+=n.indexInitialDisplacement*o,0===o&&e.call(n,!1)}function n(){}function o(){var t=this;e.call(t,!0)}function r(){l.computeDependentValues()}function a(e,a,s,c){var d=this;d.grid=e,d.baseTile=e.expandedTile,d.startTime=0,d.isComplete=!0,d.carousel=c,d.indexInitialDisplacement=Number.NaN,d.duration=l.duration,d.start=t,d.update=i,d.draw=n,d.cancel=o,d.onComplete=s,d.init=r,console.log("CarouselImageSlideJob created: currentIndex="+d.carousel.currentIndex+", previousIndex="+d.carousel.previousIndex)}var l={};l.duration=300,l.computeDependentValues=function(){},l.computeDependentValues(),a.config=l,window.hg=window.hg||{},window.hg.CarouselImageSlideJob=a,console.log("CarouselImageSlideJob module loaded")}(),function(){function e(e){var i=this;console.log("ClosePostJob "+(e?"cancelled":"completed")),t.call(i),i.grid.lastExpansionJob===i&&(i.baseTile.expandedState=null,i.grid.sectors=[],i.grid.updateAllTilesCollection(i.grid.originalTiles),i.grid.isTransitioning=!1,i.grid.expandedTile=null,window.hg.controller.resetPersistentJobs(i.grid)),i.isComplete=!0,i.onComplete()}function t(){var e,t,i,n;for(n=(e=this).grid.lastExpansionJob===e,t=0,i=e.sectors.length;t<i;t+=1)e.sectors[t].destroy(n);e.sectors=[]}function i(e){var t,i=this;i.startTime=e,i.isComplete=!1,i.grid.isPostOpen=!1,i.grid.isTransitioning=!0,i.grid.lastExpansionJob=i,t={x:i.grid.originalCenter.x-i.grid.panCenter.x,y:i.grid.originalCenter.y-i.grid.panCenter.y},window.hg.controller.transientJobs.SpreadJob.create(i.grid,i.baseTile).duration=s.duration+window.hg.OpenPostJob.config.spreadDurationOffset,window.hg.controller.transientJobs.PanJob.create(i.grid,i.baseTile,{x:i.grid.panCenter.x,y:i.grid.panCenter.y}).duration=s.duration+window.hg.OpenPostJob.config.panDurationOffset,window.hg.controller.transientJobs.DilateSectorsJob.create(i.grid,i.baseTile,t).duration=s.duration+window.hg.OpenPostJob.config.dilateSectorsDurationOffset,window.hg.controller.transientJobs.FadePostJob.create(i.grid,i.baseTile).duration=s.duration+window.hg.OpenPostJob.config.fadePostDurationOffset,i.grid.annotations.setExpandedAnnotations(!1),i.grid.parent.style.overflowY="auto"}function n(t,i){var n=this;t-n.startTime>=s.duration&&e.call(n,!1)}function o(){}function r(){var t=this;e.call(t,!0)}function a(){s.computeDependentValues()}function l(e,t,l){var s=this;s.grid=e,s.baseTile=e.expandedTile,s.startTime=0,s.isComplete=!0,s.sectors=e.sectors,s.start=i,s.update=n,s.draw=o,s.cancel=r,s.onComplete=l,s.init=a,console.log("ClosePostJob created: tileIndex="+s.baseTile.originalIndex)}var s={};s.duration=500,s.computeDependentValues=function(){},s.computeDependentValues(),l.config=s,window.hg=window.hg||{},window.hg.ClosePostJob=l,console.log("ClosePostJob module loaded")}(),function(){function e(e){var t=this;console.log("DilateSectorsJob "+(e?"cancelled":"completed")),t.isComplete=!0,t.onComplete()}function t(){var e,t=this;for(e=0;e<6;e+=1)t.sectors[e].originalAnchor.x+=t.panDisplacement.x,t.sectors[e].originalAnchor.y+=t.panDisplacement.y,t.sectors[e].setOriginalPositionForExpansion(t.isExpanding)}function i(e){var i=this;i.startTime=e,i.isComplete=!1,t.call(i)}function n(t,i){var n,o,r,a,l;for(o=(t-(n=this).startTime)/n.duration,o=(o=1-window.hg.util.easingFunctions.easeOutQuint(o))<0?0:n.isExpanding?o:-o,r=0;r<6;r+=1)a=n.sectors[r].expandedDisplacement.x*o,l=n.sectors[r].expandedDisplacement.y*o,n.sectors[r].updateCurrentPosition(a,l);0===o&&e.call(n,!1)}function o(){}function r(){var t=this;e.call(t,!0)}function a(){s.computeDependentValues()}function l(e,t,l,c){var d=this;d.grid=e,d.baseTile=e.expandedTile,d.startTime=0,d.isComplete=!0,d.panDisplacement=c,d.sectors=e.sectors,d.parentExpansionJob=d.grid.lastExpansionJob,d.isExpanding=e.isPostOpen,d.duration=s.duration,d.start=i,d.update=n,d.draw=o,d.cancel=r,d.onComplete=l,d.init=a,console.log("DilateSectorsJob created: tileIndex="+d.baseTile.originalIndex)}var s={};s.duration=500,s.computeDependentValues=function(){},s.computeDependentValues(),l.config=s,window.hg=window.hg||{},window.hg.DilateSectorsJob=l,console.log("DilateSectorsJob module loaded")}(),function(){function e(){}function t(e){var t=this;console.log("DisplacementRadiateJob "+(e?"cancelled":"completed")),t.isComplete=!0,t.onComplete()}function i(e){var t=this;t.startTime=e,t.isComplete=!1}function n(e,t){}function o(){}function r(){var e=this;t.call(e,!0)}function a(){s.computeDependentValues()}function l(t,l,s){var c=this;c.grid=t,c.tile=l,c.startTime=0,c.isComplete=!0,c.displacements=null,c.start=i,c.update=n,c.draw=o,c.cancel=r,c.onComplete=s,c.init=a,e.call(c),console.log("DisplacementRadiateJob created: tileIndex="+c.tile.originalIndex)}var s={};s.duration=500,s.waveSpeed=3,s.waveWidth=500,s.displacementDistance=50,s.isRecurring=!1,s.avgDelay=4e3,s.delayDeviationRange=3800,s.computeDependentValues=function(){},s.computeDependentValues(),l.config=s,window.hg=window.hg||{},window.hg.DisplacementRadiateJob=l,console.log("DisplacementRadiateJob module loaded")}(),function(){function e(e){var t=this;console.log("FadePostJob "+(e?"cancelled":"completed")),t.isComplete=!0,t.onComplete(),t.isFadingIn?t.parentExpansionJob===t.grid.lastExpansionJob&&t.baseTile.hide():(t.parentExpansionJob===t.grid.lastExpansionJob?t.grid.destroyPagePost():(t.pagePost.destroy(),t.baseTile.currentVertexDeltas=t.baseTile.originalVertexDeltas.slice(0)),t.baseTile.show()),t.baseTile.element.style.pointerEvents="auto"}function t(e,t,i,n){var o,r;for(o=0,r=e.length;o<r;o+=1)e[o]=t[o]+(i[o]-t[o])*n}function i(e){var t,i=this;i.startTime=e,i.isComplete=!1,i.pagePostStartPosition={},i.pagePostDisplacement={},i.baseTile.show(),i.isFadingIn?(i.pagePostStartPosition.x=i.baseTile.particle.px,i.pagePostStartPosition.y=i.baseTile.particle.py,i.pagePostDisplacement.x=i.grid.originalCenter.x-i.pagePostStartPosition.x,i.pagePostDisplacement.y=i.grid.originalCenter.y-i.pagePostStartPosition.y+i.grid.scrollTop,i.pagePost=i.grid.createPagePost(i.baseTile,i.pagePostStartPosition),t=window.hg.OpenPostJob.config.expandedDisplacementTileCount*window.hg.Grid.config.tileShortLengthWithGap,i.baseTile.expandedVertexDeltas=window.hg.Tile.computeVertexDeltas(t,i.grid.isVertical)):(i.pagePostStartPosition.x=i.grid.originalCenter.x,i.pagePostStartPosition.y=i.grid.originalCenter.y+i.grid.scrollTop,i.pagePostDisplacement.x=i.pagePostStartPosition.x-i.grid.currentCenter.x,i.pagePostDisplacement.y=i.pagePostStartPosition.y-i.grid.currentCenter.y-i.grid.scrollTop),i.baseTile.element.style.pointerEvents="none"}function n(i,n){var o,r,a,l,s;a=r=(i-(o=this).startTime)/o.duration,l=(l=(r=(r=window.hg.util.easingFunctions.easeOutCubic(r))>1?1:r)/c.quick1FadeDurationRatio)>1?1:l,s=(s=r/c.quick2FadeDurationRatio)>1?1:s,o.baseTile.element.style.opacity=1-l,o.baseTile.tilePost.elements.title.style.opacity=1-s,o.pagePost.opacity=a,o.pagePost.center.x=o.pagePostStartPosition.x+o.pagePostDisplacement.x*r,o.pagePost.center.y=o.pagePostStartPosition.y+o.pagePostDisplacement.y*r,t(o.baseTile.currentVertexDeltas,o.baseTile.originalVertexDeltas,o.baseTile.expandedVertexDeltas,l),1===r&&e.call(o,!1)}function o(i,n){var o,r,a;r=(i-(o=this).startTime)/o.duration,a=(a=(r=(r=window.hg.util.easingFunctions.easeOutQuint(r))>1?1:r)/c.quick1FadeDurationRatio)>1?1:a,o.baseTile.element.style.opacity=r,o.baseTile.tilePost.elements.title.style.opacity=r,o.pagePost.opacity=1-a,o.pagePost.center.x=o.pagePostStartPosition.x+o.pagePostDisplacement.x*r,o.pagePost.center.y=o.pagePostStartPosition.y+o.pagePostDisplacement.y*r,t(o.baseTile.currentVertexDeltas,o.baseTile.expandedVertexDeltas,o.baseTile.originalVertexDeltas,a),1===r&&e.call(o,!1)}function r(){this.pagePost.draw()}function a(){var t=this;e.call(t,!0)}function l(){c.computeDependentValues()}function s(e,t,s){var d=this;d.grid=e,d.baseTile=e.expandedTile,d.startTime=0,d.isComplete=!0,d.pagePost=e.pagePost,d.parentExpansionJob=d.grid.lastExpansionJob,d.isFadingIn=e.isPostOpen,d.pagePostStartPosition=null,d.pagePostDisplacement=null,d.duration=c.duration,d.start=i,d.update=d.isFadingIn?n:o,d.draw=r,d.cancel=a,d.onComplete=s,d.init=l,console.log("FadePostJob created: tileIndex="+d.baseTile.originalIndex+", isFadingIn="+d.isFadingIn)}var c={};c.duration=500,c.quick1FadeDurationRatio=.7,c.quick2FadeDurationRatio=.3,c.computeDependentValues=function(){},c.computeDependentValues(),s.config=c,window.hg=window.hg||{},window.hg.FadePostJob=s,console.log("FadePostJob module loaded")}(),function(){function e(e){var t=this;t.isComplete=!0,t.onComplete()}function t(e,t){var i=window.hg.TilePost.config.activeScreenOpacity+t*(window.hg.TilePost.config.inactiveScreenOpacity-window.hg.TilePost.config.activeScreenOpacity);e.imageScreenOpacity=i}function i(e,t){var i=c.opacity*(1-t);e.currentColor.h+=c.deltaHue*i,e.currentColor.s+=c.deltaSaturation*i,e.currentColor.l+=c.deltaLightness*i}function n(e){var t=this;t.startTime=e,t.isComplete=!1}function o(t,i){var n,o;(n=this).tile.isHighlighted?n.cancel():t>n.startTime+c.duration?(n.updateTile(n.tile,1),e.call(n,!1)):(o=(t-n.startTime)/c.duration,n.updateTile(n.tile,o))}function r(){}function a(){var t=this;e.call(t,!0)}function l(){}function s(e,s,c){var d=this;d.grid=e,d.tile=s,d.startTime=0,d.isComplete=!0,d.updateTile=s.holdsContent?t:i,d.start=n,d.update=o,d.draw=r,d.cancel=a,d.onComplete=c,d.init=l}var c={};c.duration=500,c.deltaHue=0,c.deltaSaturation=0,c.deltaLightness=50,c.opacity=.5,c.isRecurring=!1,c.avgDelay=30,c.delayDeviationRange=20,c.computeDependentValues=function(){},c.computeDependentValues(),s.config=c,window.hg=window.hg||{},window.hg.HighlightHoverJob=s,console.log("HighlightHoverJob module loaded")}(),function(){function e(){var e,t,i,n,o,r;for(e=this,r=-window.hg.Grid.config.tileShortLengthWithGap,t=0,i=e.grid.allNonContentTiles.length;t<i;t+=1)n=e.grid.allNonContentTiles[t].originalAnchor.x-e.startPoint.x,o=e.grid.allNonContentTiles[t].originalAnchor.y-e.startPoint.y,e.distancesNonContentTiles[t]=Math.sqrt(n*n+o*o)+r;for(t=0,i=e.grid.contentTiles.length;t<i;t+=1)n=e.grid.contentTiles[t].originalAnchor.x-e.startPoint.x,o=e.grid.contentTiles[t].originalAnchor.y-e.startPoint.y,e.distancesContentTiles[t]=Math.sqrt(n*n+o*o)+r}function t(e){var t=this;console.log("HighlightRadiateJob "+(e?"cancelled":"completed")),t.isComplete=!0,t.onComplete()}function i(e,t,i){var n=t*d.opacity*i;e.currentColor.h+=d.deltaHue*n,e.currentColor.s+=d.deltaSaturation*n,e.currentColor.l+=d.deltaLightness*n}function n(e,t,i){e.imageScreenOpacity+=-t*d.opacity*i*(window.hg.TilePost.config.inactiveScreenOpacity-window.hg.TilePost.config.activeScreenOpacity)}function o(e){var t=this;t.startTime=e,t.isComplete=!1}function r(e,o){var r,a,l,s,c,u,g,h,p;if(r=this,e>r.startTime+d.duration)t.call(r,!1);else{for(h=1-(e-r.startTime)/d.duration,l=(a=d.shimmerSpeed*(e-r.startTime))-d.shimmerWaveWidth,p=!1,s=0,c=r.grid.allNonContentTiles.length;s<c;s+=1)(u=r.distancesNonContentTiles[s])>l&&u<a&&(g=(u-l)/d.shimmerWaveWidth,i(r.grid.allNonContentTiles[s],g,h),p=!0);for(s=0,c=r.grid.contentTiles.length;s<c;s+=1)(u=r.distancesContentTiles[s])>l&&u<a&&(g=(u-l)/d.shimmerWaveWidth,n(r.grid.contentTiles[s],g,h),p=!0);p||t.call(r,!1)}}function a(){}function l(){var e=this;t.call(e,!0)}function s(){}function c(t,i,n){var c=this;c.grid=t,c.startPoint={x:i.originalAnchor.x,y:i.originalAnchor.y},c.distancesNonContentTiles=[],c.distancesContentTiles=[],c.startTime=0,c.isComplete=!0,c.onComplete=n||function(){},c.start=o,c.update=r,c.draw=a,c.cancel=l,c.init=s,e.call(c),console.log("HighlightRadiateJob created: tileIndex="+(i&&i.originalIndex))}var d={};d.shimmerSpeed=3,d.shimmerWaveWidth=500,d.duration=500,d.deltaHue=0,d.deltaSaturation=0,d.deltaLightness=50,d.opacity=.5,d.isRecurring=!1,d.avgDelay=4e3,d.delayDeviationRange=3800,d.computeDependentValues=function(){},d.computeDependentValues(),c.config=d,window.hg=window.hg||{},window.hg.HighlightRadiateJob=c,console.log("HighlightRadiateJob module loaded")}(),function(){function e(e){var t=this;console.log("IntraTileRadiateJob "+(e?"cancelled":"completed")),t.isComplete=!0,t.onComplete()}function t(e){var t=this;t.startTime=e,t.isComplete=!1}function i(e,t){}function n(){}function o(){var t=this;e.call(t,!0)}function r(){l.computeDependentValues()}function a(e,a,l){var s=this;s.grid=e,s.tile=a,s.startTime=0,s.isComplete=!0,s.start=t,s.update=i,s.draw=n,s.cancel=o,s.onComplete=l,s.init=r,console.log("IntraTileRadiateJob created: tileIndex="+s.tile.originalIndex)}var l={};l.duration=500,l.isRecurring=!1,l.avgDelay=4e3,l.delayDeviationRange=3800,l.computeDependentValues=function(){},l.computeDependentValues(),a.config=l,window.hg=window.hg||{},window.hg.IntraTileRadiateJob=a,console.log("IntraTileRadiateJob module loaded")}(),function(){function e(){var e,t,i;e=this,t=document.createElementNS(window.hg.util.svgNamespace,"filter"),e.grid.svgDefs.appendChild(t),i=document.createElementNS(window.hg.util.svgNamespace,"feGaussianBlur"),t.appendChild(i),t.setAttribute("id",T.filterId),t.setAttribute("x","-10%"),t.setAttribute("y","-10%"),t.setAttribute("width","120%"),t.setAttribute("height","120%"),i.setAttribute("in","SourceGraphic"),i.setAttribute("result","blurOut"),T.filter=t,T.feGaussianBlur=i}function t(){var e;(e=this).startHue=360*Math.random(),e.endHue=360*Math.random()}function i(){var e;(e=this).polyline=document.createElementNS(window.hg.util.svgNamespace,"polyline"),e.grid.svg.insertBefore(e.polyline,e.grid.svg.firstChild),e.polyline.setAttribute("fill-opacity","0"),T.isBlurOn&&e.polyline.setAttribute("filter","url(#"+T.filterId+")")}function n(){var e,t,i;i=1-(t=(e=this).ellapsedTime/e.duration),e.currentColor.h=i*e.startHue+t*e.endHue,e.currentColor.s=i*e.startSaturation+t*e.endSaturation,e.currentColor.l=i*e.startLightness+t*e.endLightness,e.currentOpacity=i*e.startOpacity+t*e.endOpacity}function o(){var e;e=this,console.log("LineJob completed"),e.polyline&&(e.grid.svg.removeChild(e.polyline),e.polyline=null),e.tiles=[],e.corners=[],e.direction=Number.NaN,e.currentCornerIndex=Number.NaN,e.hasReachedEdge=!0,e.isComplete=!0,e.onComplete(e)}function r(){var e;(e=this).direction===(e.corners[e.currentCornerIndex]+3)%6?e.hasAlmostReachedEdge=!1:e.hasAlmostReachedEdge=!e.lowerNeighbors[e.currentCornerIndex]||!e.upperNeighbors[e.currentCornerIndex]}function a(){var e,t,i,n;n=(e=this).corners[e.currentCornerIndex],e.grid.isVertical?(t=(n+5)%6,i=n):(t=n,i=(n+1)%6),e.lowerNeighbors[e.currentCornerIndex]=e.tiles[e.currentCornerIndex].neighborStates[t],e.upperNeighbors[e.currentCornerIndex]=e.tiles[e.currentCornerIndex].neighborStates[i],e.lowerNeighborCorners[e.currentCornerIndex]=(n+2)%6,e.upperNeighborCorners[e.currentCornerIndex]=(n+4)%6}function l(){var e,t,i,n,o,l,c,d,u,g;if(e=this,g=e.corners[e.currentCornerIndex],0===e.currentCornerIndex)l=e.forcedInitialRelativeDirection,e.latestDirection=s(l,g);else{switch(t=(g-e.direction+6)%6){case 0:i=e.sameDirectionProb,n=T.distantSidewaysDirectionProb,T.distantSidewaysDirectionProb;break;case 1:i=T.closeSidewaysDirectionProb,n=T.closeSidewaysDirectionProb,T.oppositeDirectionProb;break;case 2:i=T.distantSidewaysDirectionProb,n=e.sameDirectionProb,T.distantSidewaysDirectionProb;break;case 3:i=T.oppositeDirectionProb,n=T.closeSidewaysDirectionProb,T.closeSidewaysDirectionProb;break;case 4:i=T.distantSidewaysDirectionProb,n=T.distantSidewaysDirectionProb,e.sameDirectionProb;break;case 5:i=T.closeSidewaysDirectionProb,n=T.oppositeDirectionProb,T.closeSidewaysDirectionProb;break;default:throw new Error("Invalid state: cornerConfig="+t)}do{c=s(l=(o=Math.random())<i?T.NEIGHBOR:o<i+n?T.LOWER_SELF:T.UPPER_SELF,g)}while(c===(e.latestDirection+3)%6);e.latestDirection=c}switch(l){case T.NEIGHBOR:e.grid.isVertical?(d=(g+1)%6,u=e.tiles[e.currentCornerIndex].neighborStates[(g+5)%6].tile):(d=(g+1)%6,u=e.tiles[e.currentCornerIndex].neighborStates[g].tile);break;case T.LOWER_SELF:d=(g+5)%6,u=e.tiles[e.currentCornerIndex];break;case T.UPPER_SELF:d=(g+1)%6,u=e.tiles[e.currentCornerIndex];break;default:throw new Error("Invalid state: relativeDirection="+l)}e.currentCornerIndex=e.corners.length,e.corners[e.currentCornerIndex]=d,e.tiles[e.currentCornerIndex]=u,a.call(e),r.call(e)}function s(e,t){switch(e){case T.NEIGHBOR:return t;case T.LOWER_SELF:return(t+4)%6;case T.UPPER_SELF:return(t+2)%6;default:throw new Error("Invalid state: relativeDirection="+e)}}function c(){var e,t,i,n,r,a;for(t=(e=this).ellapsedTime/e.lineSidePeriod*window.hg.Grid.config.tileOuterRadius,r=parseInt(e.ellapsedTime/e.lineSidePeriod)+1;r>=e.corners.length&&!e.hasAlmostReachedEdge;)l.call(e);i=t%window.hg.Grid.config.tileOuterRadius,n=(e.lineLength-i+window.hg.Grid.config.tileOuterRadius)%window.hg.Grid.config.tileOuterRadius,e.frontSegmentEndRatio=i/window.hg.Grid.config.tileOuterRadius,e.backSegmentStartRatio=1-n/window.hg.Grid.config.tileOuterRadius,e.isShort=e.lineLength<window.hg.Grid.config.tileOuterRadius,e.isStarting=t<e.lineLength,e.hasAlmostReachedEdge&&r>=e.corners.length&&(e.hasReachedEdge=!0),e.segmentsIncludedCount=parseInt((e.lineLength-i-n-T.epsilon)/window.hg.Grid.config.tileOuterRadius)+2,e.isShort?e.isStarting||e.hasReachedEdge?e.segmentsIncludedCount=1:i-e.lineLength>=0?e.segmentsIncludedCount=1:e.segmentsIncludedCount=2:(e.isStarting&&(e.segmentsIncludedCount=r),e.hasReachedEdge&&(a=r-e.corners.length+1,t-(e.corners.length-1)*window.hg.Grid.config.tileOuterRadius>e.lineLength&&o.call(e),e.segmentsIncludedCount-=a))}function d(){var e,t,i;for((e=this).gapPoints=[],t=0,i=e.corners.length;t<i;t+=1)e.gapPoints[t]=u(e.tiles[t],e.corners[t],e.lowerNeighbors[t],e.upperNeighbors[t],e.lowerNeighborCorners[t],e.upperNeighborCorners[t])}function u(e,t,i,n,o,r){var a,l,s;return i?n?(a=3,l=e.particle.px+i.tile.particle.px+n.tile.particle.px,s=e.particle.py+i.tile.particle.py+n.tile.particle.py):(a=2,l=e.vertices[2*t]+i.tile.vertices[2*o],s=e.vertices[2*t+1]+i.tile.vertices[2*o+1]):n?(a=2,l=e.vertices[2*t]+n.tile.vertices[2*r],s=e.vertices[2*t+1]+n.tile.vertices[2*r+1]):(a=1,l=e.vertices[2*t],s=e.vertices[2*t+1]),{x:l/a,y:s/a}}function g(){var e,t,i,n;for((e=this).polylinePoints=[],t=e.currentCornerIndex,e.extraStartPoint&&e.isStarting?(e.polylinePoints[0]=e.extraStartPoint,i=e.segmentsIncludedCount+1,n=1):(i=e.segmentsIncludedCount,n=0),e.hasReachedEdge?e.polylinePoints[i]={x:e.gapPoints[t].x,y:e.gapPoints[t].y}:e.polylinePoints[i]={x:e.gapPoints[t].x*e.frontSegmentEndRatio+e.gapPoints[t-1].x*(1-e.frontSegmentEndRatio),y:e.gapPoints[t].y*e.frontSegmentEndRatio+e.gapPoints[t-1].y*(1-e.frontSegmentEndRatio)},i-=1,t-=1;i>n;i-=1,t-=1)e.polylinePoints[i]=e.gapPoints[t];e.isStarting?e.polylinePoints[i]={x:e.gapPoints[t].x,y:e.gapPoints[t].y}:e.polylinePoints[i]={x:e.gapPoints[t+1].x*e.backSegmentStartRatio+e.gapPoints[t].x*(1-e.backSegmentStartRatio),y:e.gapPoints[t+1].y*e.backSegmentStartRatio+e.gapPoints[t].y*(1-e.backSegmentStartRatio)}}function h(){var e,t,i,n;for(n="",t=0,i=(e=this).polylinePoints.length;t<i;t+=1)n+=e.polylinePoints[t].x+","+e.polylinePoints[t].y+" ";e.polyline.setAttribute("points",n),e.polyline.setAttribute("stroke","hsl("+e.currentColor.h+","+e.currentColor.s+"%,"+e.currentColor.l+"%)"),e.polyline.setAttribute("stroke-opacity",e.currentOpacity),e.polyline.setAttribute("stroke-width",e.lineWidth)}function p(e){var t=this;t.startTime=e,t.isComplete=!1}function m(e,t){var i=this;i.ellapsedTime=e-i.startTime,i.ellapsedTime>=i.duration?o.call(i):(n.call(i),c.call(i),T.feGaussianBlur.setAttribute("stdDeviation",i.blurStdDeviation),i.isComplete||(d.call(i),g.call(i)))}function b(e,t){var i=this;i.ellapsedTime=e-i.startTime,i.ellapsedTime>=i.duration?o.call(i):(n.call(i),c.call(i),i.isComplete||(d.call(i),g.call(i)))}function f(){var e=this;h.call(e)}function w(){var e;e=this,o.call(e)}function v(){T.computeDependentValues()}function y(n,o,r,l,s,c,d){var u=this;if(u.grid=n,u.tiles=[o],u.corners=[r],u.lowerNeighbors=[],u.upperNeighbors=[],u.lowerNeighborCorners=[],u.upperNeighborCorners=[],u.direction=l,u.forcedInitialRelativeDirection=s,u.extraStartPoint=d,u.currentCornerIndex=0,u.frontSegmentEndRatio=Number.NaN,u.backSegmentStartRatio=Number.NaN,u.latestDirection=l,u.polyline=null,u.gapPoints=[],u.polylinePoints=null,u.hasReachedEdge=!1,u.startTime=0,u.ellapsedTime=0,u.isComplete=!0,u.startHue=Number.NaN,u.endHue=Number.NaN,u.currentColor={h:Number.NaN,s:T.startSaturation,l:T.startLightness},u.currentOpacity=T.startOpacity,u.duration=T.duration,u.lineWidth=T.lineWidth,u.lineLength=T.lineLength,u.lineSidePeriod=T.lineSidePeriod,u.startSaturation=T.startSaturation,u.startLightness=T.startLightness,u.startOpacity=T.startOpacity,u.endSaturation=T.endSaturation,u.endLightness=T.endLightness,u.endOpacity=T.endOpacity,u.sameDirectionProb=T.sameDirectionProb,u.blurStdDeviation=T.blurStdDeviation,u.isBlurOn=T.isBlurOn,u.onComplete=c||function(){},u.start=p,u.update=u.isBlurOn?m:b,u.draw=f,u.cancel=w,u.init=v,T.haveDefinedLineBlur||(T.haveDefinedLineBlur=!0,e.call(u)),!x(u))throw new Error("LineJob created with invalid initial corner configuration: tileIndex="+o.originalIndex+", corner="+r+", direction="+l);a.call(u),t.call(u),i.call(u),console.log("LineJob created: tileIndex="+o.originalIndex+", corner="+r+", direction="+l)}function C(e,t){var i,n,o,r;do{i=e.originalBorderTiles[parseInt(Math.random()*e.originalBorderTiles.length)]}while(i.isCornerTile);return e.isVertical?i.neighborStates[4]?i.neighborStates[1]?i.neighborStates[0]?(Math.random()<.5?(n=2,r=T.LOWER_SELF):(n=4,r=T.UPPER_SELF),o=0):(Math.random()<.5?(n=1,r=T.UPPER_SELF):(n=5,r=T.LOWER_SELF),o=3):(i.isInLargerRow?Math.random()<.5?(n=0,r=T.LOWER_SELF):(n=3,r=T.UPPER_SELF):Math.random()<.5?(n=1,r=T.LOWER_SELF):(n=2,r=T.UPPER_SELF),o=i.originalAnchor.y<e.originalCenter.y?4:5):(i.isInLargerRow?Math.random()<.5?(n=0,r=T.UPPER_SELF):(n=3,r=T.LOWER_SELF):Math.random()<.5?(n=4,r=T.LOWER_SELF):(n=5,r=T.UPPER_SELF),o=i.originalAnchor.y<e.originalCenter.y?2:1):i.neighborStates[0]?i.neighborStates[3]?i.neighborStates[4]?(Math.random()<.5?(n=0,r=T.LOWER_SELF):(n=2,r=T.UPPER_SELF),o=4):(Math.random()<.5?(n=3,r=T.LOWER_SELF):(n=5,r=T.UPPER_SELF),o=1):(i.rowIndex===e.rowCount-1?Math.random()<.5?(n=1,r=T.LOWER_SELF):(n=4,r=T.UPPER_SELF):Math.random()<.5?(n=2,r=T.LOWER_SELF):(n=3,r=T.UPPER_SELF),o=i.originalAnchor.x<e.originalCenter.x?0:5):(0===i.rowIndex?Math.random()<.5?(n=1,r=T.UPPER_SELF):(n=4,r=T.LOWER_SELF):Math.random()<.5?(n=0,r=T.UPPER_SELF):(n=5,r=T.LOWER_SELF),o=i.originalAnchor.x<e.originalCenter.x?2:3),new y(e,i,n,o,r,t,null)}function x(e){var t,i,n,o,r;if(t=e.tiles[0],i=e.corners[0],n=e.direction,o=e.forcedInitialRelativeDirection,t.isCornerTile)return!1;if(t.isBorderTile)if(e.grid.isVertical)if(t.neighborStates[4])if(t.neighborStates[1])if(t.neighborStates[0])switch(r=0===n,i){case 0:case 1:return!0;case 2:return o===T.LOWER_SELF&&r;case 3:return!1;case 4:return o===T.UPPER_SELF&&r;case 5:return!0}else switch(r=3===n,i){case 0:return!1;case 1:return o===T.UPPER_SELF&&r;case 2:case 3:case 4:return!0;case 5:return o===T.LOWER_SELF&&r}else if(r=4===n||5===n,t.isInLargerRow)switch(i){case 0:return o===T.LOWER_SELF&&r;case 1:case 2:return!1;case 3:return o===T.UPPER_SELF&&r;case 4:case 5:return!0}else switch(i){case 0:return!0;case 1:return o===T.LOWER_SELF&&r;case 2:return o===T.UPPER_SELF&&r;case 3:case 4:case 5:return!0}else if(r=1===n||2===n,t.isInLargerRow)switch(i){case 0:return o===T.UPPER_SELF&&r;case 1:case 2:return!0;case 3:return o===T.LOWER_SELF&&r;case 4:case 5:return!1}else switch(i){case 0:case 1:case 2:case 3:return!0;case 4:return o===T.LOWER_SELF&&r;case 5:return o===T.UPPER_SELF&&r}else if(t.neighborStates[0])if(t.neighborStates[3])if(t.neighborStates[4])switch(r=4===n,i){case 0:return o===T.LOWER_SELF&&r;case 1:return!1;case 2:return o===T.UPPER_SELF&&r;case 3:case 4:case 5:return!0}else switch(r=1===n,i){case 0:case 1:case 2:return!0;case 3:return o===T.LOWER_SELF&&r;case 4:return!1;case 5:return o===T.UPPER_SELF&&r}else if(r=0===n||5===n,t.rowIndex===e.grid.rowCount-1)switch(i){case 0:return!0;case 1:return o===T.LOWER_SELF&&r;case 2:case 3:return!1;case 4:return o===T.UPPER_SELF&&r;case 5:return!0}else switch(i){case 0:case 1:return!0;case 2:return o===T.LOWER_SELF&&r;case 3:return o===T.UPPER_SELF&&r;case 4:case 5:return!0}else if(r=2===n||3===n,0===t.rowIndex)switch(i){case 0:return!1;case 1:return o===T.UPPER_SELF&&r;case 2:case 3:return!0;case 4:return o===T.LOWER_SELF&&r;case 5:return!1}else switch(i){case 0:return o===T.UPPER_SELF&&r;case 1:case 2:case 3:case 4:return!0;case 5:return o===T.LOWER_SELF&&r}return!0}var T={};T.duration=2e3,T.lineWidth=28,T.lineLength=6e4,T.lineSidePeriod=5,T.startSaturation=100,T.startLightness=100,T.startOpacity=.6,T.endSaturation=30,T.endLightness=80,T.endOpacity=0,T.sameDirectionProb=.8,T.blurStdDeviation=2,T.isBlurOn=!1,T.isRecurring=!0,T.avgDelay=2200,T.delayDeviationRange=2100,T.NEIGHBOR=0,T.LOWER_SELF=1,T.UPPER_SELF=2,T.oppositeDirectionProb=0,T.epsilon=1e-5,T.haveDefinedLineBlur=!1,T.filterId="random-line-filter",T.computeDependentValues=function(){T.distantSidewaysDirectionProb=(1-T.sameDirectionProb)/2,T.closeSidewaysDirectionProb=(1-T.oppositeDirectionProb)/2},T.computeDependentValues(),y.config=T,y.createRandomLineJob=C,window.hg=window.hg||{},window.hg.LineJob=y,console.log("LineJob module loaded")}(),function(){function e(){var e,t,i;e=this,t=document.createElementNS(window.hg.util.svgNamespace,"filter"),e.grid.svgDefs.appendChild(t),i=document.createElementNS(window.hg.util.svgNamespace,"feGaussianBlur"),t.appendChild(i),t.setAttribute("id",c.filterId),t.setAttribute("x","-10%"),t.setAttribute("y","-10%"),t.setAttribute("width","120%"),t.setAttribute("height","120%"),i.setAttribute("in","SourceGraphic"),i.setAttribute("result","blurOut"),e.feGaussianBlur=i}function t(){var e,t,i;for((e=this).lineJobs=[],t=0;t<6;t+=1){try{i=new window.hg.LineJob(e.grid,e.tile,t,t,window.hg.LineJob.config.NEIGHBOR,e.onComplete,e.extraStartPoint)}catch(e){console.debug(e.message);continue}e.lineJobs.push(i),i.duration=c.duration,i.lineWidth=c.lineWidth,i.lineLength=c.lineLength,i.lineSidePeriod=c.lineSidePeriod,i.startSaturation=c.startSaturation,i.startLightness=c.startLightness,i.startOpacity=c.startOpacity,i.endSaturation=c.endSaturation,i.endLightness=c.endLightness,i.endOpacity=c.endOpacity,i.sameDirectionProb=c.sameDirectionProb,i.filterId=c.filterId,i.blurStdDeviation=c.blurStdDeviation,i.isBlurOn=c.isBlurOn,c.isBlurOn?i.polyline.setAttribute("filter","url(#"+c.filterId+")"):i.polyline.setAttribute("filter","none")}}function i(){var e,t;for(e=this,t=0;t<e.lineJobs.length;t+=1){if(!e.lineJobs[t].isComplete)return;e.lineJobs.splice(t--,1)}console.log("LinesRadiateJob completed"),e.isComplete=!0}function n(e){var t,i,n;for((t=this).startTime=e,t.isComplete=!1,i=0,n=t.lineJobs.length;i<n;i+=1)t.lineJobs[i].start(e)}function o(e,t){var n,o,r;for((n=this).extraStartPoint.x=n.tile.particle.px,n.extraStartPoint.y=n.tile.particle.py,o=0,r=n.lineJobs.length;o<r;o+=1)n.lineJobs[o].update(e,t),n.lineJobs[o].isComplete&&(n.lineJobs.splice(o,1),o--,r--);n.feGaussianBlur.setAttribute("stdDeviation",c.blurStdDeviation),i.call(n)}function r(){var e,t,i;for(t=0,i=(e=this).lineJobs.length;t<i;t+=1)e.lineJobs[t].draw()}function a(){var e,t,i;for(t=0,i=(e=this).lineJobs.length;t<i;t+=1)e.lineJobs[t].cancel();e.lineJobs=[],e.isComplete=!0}function l(){}function s(i,s,d){var u=this;u.grid=i,u.tile=s,u.extraStartPoint={x:s.particle.px,y:s.particle.py},u.startTime=0,u.isComplete=!0,u.lineJobs=null,u.onComplete=d||function(){},u.start=n,u.update=o,u.draw=r,u.cancel=a,u.init=l,c.haveDefinedLineBlur||e.call(u),t.call(u),console.log("LinesRadiateJob created: tileIndex="+s.originalIndex)}var c={};c.duration=700,c.lineWidth=24,c.lineLength=1300,c.lineSidePeriod=30,c.startSaturation=100,c.startLightness=100,c.startOpacity=.8,c.endSaturation=100,c.endLightness=70,c.endOpacity=0,c.sameDirectionProb=.85,c.blurStdDeviation=2,c.isBlurOn=!1,c.isRecurring=!1,c.avgDelay=2e3,c.delayDeviationRange=1800,c.haveDefinedLineBlur=!1,c.filterId="random-line-filter",c.computeDependentValues=function(){},c.computeDependentValues(),s.config=c,window.hg=window.hg||{},window.hg.LinesRadiateJob=s,console.log("LinesRadiateJob module loaded")}(),function(){function e(e){var t=this;console.log("OpenPostJob "+(e?"cancelled":"completed")),t.grid.isTransitioning=!1,t.grid.lastExpansionJob===t&&t.grid.pagePost.loadCarouselMedia(),t.isComplete=!0,t.onComplete()}function t(){var e,t,i,n,o,r,a;for(e=this,t=0;t<6;t+=1)e.sectors[t]=new window.hg.Sector(e.grid,e.baseTile,t,s.expandedDisplacementTileCount);for(t=0;t<6;t+=1)e.sectors[t].initializeExpandedStateExternalTileNeighbors(e.sectors);for(t=0;t<6;t+=1)e.sectors[t].tilesByIndex=null;for(window.hg.Tile.initializeTileExpandedState(e.baseTile,null,Number.NaN,Number.NaN),e.grid.sectors=e.sectors,a=[],o=0,t=0;t<6;t+=1)for(i=0,n=(r=e.sectors[t].tiles).length;i<n;i+=1,o+=1)a[o]=r[i];a[o]=e.baseTile,e.grid.updateAllTilesCollection(a)}function i(e){var i,n=this;n.startTime=e,n.isComplete=!1,n.grid.isTransitioning&&n.previousJob.cancel(),n.grid.isPostOpen=!0,n.grid.isTransitioning=!0,n.grid.expandedTile=n.baseTile,n.grid.lastExpansionJob=n,n.grid.parent.style.overflow="hidden",t.call(n),n.grid.annotations.setExpandedAnnotations(!0),window.hg.controller.transientJobs.SpreadJob.create(n.grid,n.baseTile).duration=s.duration+s.spreadDurationOffset,window.hg.controller.transientJobs.PanJob.create(n.grid,n.baseTile).duration=s.duration+s.panDurationOffset,i={x:n.grid.panCenter.x-n.grid.originalCenter.x,y:n.grid.panCenter.y-n.grid.originalCenter.y},window.hg.controller.transientJobs.DilateSectorsJob.create(n.grid,n.baseTile,i).duration=s.duration+s.dilateSectorsDurationOffset,window.hg.controller.transientJobs.FadePostJob.create(n.grid,n.baseTile).duration=s.duration+s.fadePostDurationOffset,window.hg.controller.resetPersistentJobs(n.grid)}function n(t,i){var n=this;t-n.startTime>=s.duration&&e.call(n,!1)}function o(){}function r(){var t=this;e.call(t,!0)}function a(){s.computeDependentValues()}function l(e,t,l){var s=this;s.grid=e,s.baseTile=t,s.startTime=0,s.isComplete=!0,s.sectors=[],s.previousJob=e.lastExpansionJob,s.start=i,s.update=n,s.draw=o,s.cancel=r,s.onComplete=l,s.init=a,console.log("OpenPostJob created: tileIndex="+s.baseTile.originalIndex)}var s={};s.duration=500,s.expandedDisplacementTileCount=3,s.spreadDurationOffset=-200,s.panDurationOffset=-100,s.fadePostDurationOffset=1100,s.dilateSectorsDurationOffset=0,s.computeDependentValues=function(){},s.computeDependentValues(),l.config=s,window.hg=window.hg||{},window.hg.OpenPostJob=l,console.log("OpenPostJob module loaded")}(),function(){function e(e){var t=this;console.log("PanJob "+(e?"cancelled":"completed")),t.isComplete=!0,t.onComplete()}function t(){var e,t,i;for(t=0,i=(e=this).grid.allTiles.length;t<i;t+=1)e.grid.allTiles[t].originalAnchor.x+=e.displacement.x,e.grid.allTiles[t].originalAnchor.y+=e.displacement.y;e.grid.panCenter.x+=e.displacement.x,e.grid.panCenter.y+=e.displacement.y}function i(e){var i=this;i.reverseDisplacement={x:i.endPoint.x-i.startPoint.x,y:i.endPoint.y-i.startPoint.y},i.displacement={x:-i.reverseDisplacement.x,y:-i.reverseDisplacement.y},i.startTime=e,i.isComplete=!1,t.call(i)}function n(t,i){var n,o,r,a,l,s;for(o=(t-(n=this).startTime)/n.duration,o=(o=1-window.hg.util.easingFunctions.easeOutQuint(o))<0?0:o,l=n.reverseDisplacement.x*o,s=n.reverseDisplacement.y*o,r=0,a=n.grid.allTiles.length;r<a;r+=1)n.grid.allTiles[r].currentAnchor.x+=l,n.grid.allTiles[r].currentAnchor.y+=s;n.grid.currentCenter.x=n.grid.panCenter.x+l,n.grid.currentCenter.y=n.grid.panCenter.y+s,0===o&&e.call(n,!1)}function o(){}function r(){var t=this;e.call(t,!0)}function a(){}function l(e,t,l,c){var d=this;d.grid=e,d.baseTile=t,d.reverseDisplacement=null,d.displacement=null,d.startTime=0,d.isComplete=!0,e.scrollTop=e.parent.scrollTop,d.endPoint=c||{x:t.originalAnchor.x,y:t.originalAnchor.y-e.scrollTop},d.startPoint={x:e.originalCenter.x,y:e.originalCenter.y},d.duration=s.duration,d.start=i,d.update=n,d.draw=o,d.cancel=r,d.onComplete=l,d.init=a,console.log("PanJob created: tileIndex="+d.baseTile.originalIndex)}var s={};s.duration=400,s.displacementRatio=.28,s.isRecurring=!1,s.avgDelay=300,s.delayDeviationRange=0,s.computeDependentValues=function(){},s.computeDependentValues(),l.config=s,window.hg=window.hg||{},window.hg.PanJob=l,console.log("PanJob module loaded")}(),function(){function e(){var e,t,i;for((e=this).displacements=[],t=0,i=e.grid.allTiles.length;t<i;t+=1)e.displacements[t]={tile:e.grid.allTiles[t],dx:s.displacementRatio*(e.grid.allTiles[t].originalAnchor.x-e.baseTile.originalAnchor.x),dy:s.displacementRatio*(e.grid.allTiles[t].originalAnchor.y-e.baseTile.originalAnchor.y)}}function t(e){var t=this;console.log("SpreadJob "+(e?"cancelled":"completed")),t.isComplete=!0,t.onComplete()}function i(e){var t=this;t.startTime=e,t.isComplete=!1}function n(e,i){var n,o,r,a;if(n=this,e>n.startTime+n.duration)t.call(n,!1);else for(o=2*((o=(e-n.startTime)/n.duration)>.5?1-o:o),o=window.hg.util.easingFunctions.easeOutQuint(o),r=0,a=n.displacements.length;r<a;r+=1)n.displacements[r].tile.currentAnchor.x+=n.displacements[r].dx*o,n.displacements[r].tile.currentAnchor.y+=n.displacements[r].dy*o}function o(){}function r(){var e=this;t.call(e,!0)}function a(){}function l(t,l,c){var d=this;d.grid=t,d.baseTile=l,d.startTime=0,d.isComplete=!0,d.displacements=null,d.duration=s.duration,d.start=i,d.update=n,d.draw=o,d.cancel=r,d.onComplete=c,d.init=a,e.call(d),console.log("SpreadJob created: tileIndex="+d.baseTile.originalIndex)}var s={};s.duration=300,s.displacementRatio=.2,s.isRecurring=!1,s.avgDelay=4e3,s.delayDeviationRange=3800,s.computeDependentValues=function(){},s.computeDependentValues(),l.config=s,window.hg=window.hg||{},window.hg.SpreadJob=l,console.log("SpreadJob module loaded")}(),function(){function e(e){var t=this;console.log("TileBorderJob "+(e?"cancelled":"completed")),t.isComplete=!0,t.onComplete()}function t(e){var t=this;t.startTime=e,t.isComplete=!1}function i(e,t){}function n(){}function o(){var t=this;e.call(t,!0)}function r(){l.computeDependentValues()}function a(e,a,l){var s=this;s.grid=e,s.tile=a,s.startTime=0,s.isComplete=!0,s.start=t,s.update=i,s.draw=n,s.cancel=o,s.onComplete=l,s.init=r,console.log("TileBorderJob created: tileIndex="+s.baseTile.originalIndex)}var l={};l.duration=500,l.isRecurring=!1,l.avgDelay=4e3,l.delayDeviationRange=3800,l.computeDependentValues=function(){},l.computeDependentValues(),a.config=l,window.hg=window.hg||{},window.hg.TileBorderJob=a,console.log("TileBorderJob module loaded")}();